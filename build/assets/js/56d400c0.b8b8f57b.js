"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[116],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return r?a.createElement(h,s(s({ref:t},p),{},{components:r})):a.createElement(h,s({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var l=2;l<i;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5370:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return u}});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),s=["components"],o={},c="Verify Smart Contracts on the C-Chain Explorer",l={unversionedId:"dapps/smart-contracts/verify-smart-contracts",id:"dapps/smart-contracts/verify-smart-contracts",title:"Verify Smart Contracts on the C-Chain Explorer",description:"The C-Chain Explorer supports verifying smart contracts, allowing users to review it.",source:"@site/docs/dapps/smart-contracts/verify-smart-contracts.md",sourceDirName:"dapps/smart-contracts",slug:"/dapps/smart-contracts/verify-smart-contracts",permalink:"/dapps/smart-contracts/verify-smart-contracts",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/dapps/smart-contracts/verify-smart-contracts.md",tags:[],version:"current",frontMatter:{},sidebar:"dapps",previous:{title:"Verifying Smart Contracts with Truffle Verify",permalink:"/dapps/smart-contracts/verify-smart-contracts-with-truffle-verify"},next:{title:"Add Lux to MetaMask Programmatically",permalink:"/dapps/smart-contracts/add-lux-to-metamask-programmatically"}},p={},u=[{value:"Steps",id:"steps",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Libraries",id:"libraries",level:2},{value:"Examples",id:"examples",level:2},{value:"Caveats",id:"caveats",level:2},{value:"SPDX License Required",id:"spdx-license-required",level:3},{value:"keccak256 Strings Processed",id:"keccak256-strings-processed",level:3},{value:"Solidity Constructors",id:"solidity-constructors",level:3}],d={toc:u};function m(e){var t=e.components,o=(0,n.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"verify-smart-contracts-on-the-c-chain-explorer"},"Verify Smart Contracts on the C-Chain Explorer"),(0,i.kt)("p",null,"The C-Chain Explorer supports verifying smart contracts, allowing users to review it."),(0,i.kt)("p",null,"The Mainnet C-Chain Explorer is ",(0,i.kt)("a",{parentName:"p",href:"https://snowtrace.io/"},"here")," and the Fuji Testnet Explorer is ",(0,i.kt)("a",{parentName:"p",href:"https://testnet.snowtrace.io/"},"here.")),(0,i.kt)("p",null,"If you have issues, contact us on ",(0,i.kt)("a",{parentName:"p",href:"https://chat.lux.network"},"Discord"),"."),(0,i.kt)("h2",{id:"steps"},"Steps"),(0,i.kt)("p",null,"Navigate to the ",(0,i.kt)("em",{parentName:"p"},"Contract")," tab at the Explorer page for your contract's address."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"contract_tab",src:r(3083).Z,width:"2718",height:"808"})),(0,i.kt)("p",null,"Click ",(0,i.kt)("em",{parentName:"p"},"Verify & Publish")," to enter the smart contract verification page."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"SRC",src:r(2632).Z,width:"1354",height:"907"})),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://docs.soliditylang.org/en/v0.8.4/contracts.html?highlight=libraries#libraries"},"Libraries")," can be provided. If they are, they must be deployed, independently verified and in the ",(0,i.kt)("em",{parentName:"p"},"Add Contract Libraries")," section."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"libraries",src:r(6155).Z,width:"766",height:"158"})),(0,i.kt)("p",null,"The C-Chain Explorer can fetch constructor arguments automatically for simple smart contracts. More complicated contracts might require you to pass in special constructor arguments. Smart contracts with complicated constructors ",(0,i.kt)("a",{parentName:"p",href:"/dapps/smart-contracts/verify-smart-contracts#caveats"},"may have validation issues"),". You can try this ",(0,i.kt)("a",{parentName:"p",href:"https://abi.hashex.org/"},"online abi encoder"),"."),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"IMPORTANT")," Contracts should be verified on Testnet before being deployed to Mainnet to ensure there are no issues."),(0,i.kt)("li",{parentName:"ul"},"Contracts must be flattened.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Includes will not work."))),(0,i.kt)("li",{parentName:"ul"},"Contracts should be compile-able in ",(0,i.kt)("a",{parentName:"li",href:"https://remix.ethereum.org"},"Remix"),".",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"A flattened contract with ",(0,i.kt)("inlineCode",{parentName:"li"},"pragma experimental ABIEncoderV2")," (as an example) can create unusual binary and/or constructor blobs. This might cause validation issues."))),(0,i.kt)("li",{parentName:"ul"},"The C-Chain Explorer ",(0,i.kt)("strong",{parentName:"li"},"only")," validates ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/ethereum/solc-bin"},"solc javascript")," and only supports ",(0,i.kt)("a",{parentName:"li",href:"https://docs.soliditylang.org"},"Solidity")," contracts.")),(0,i.kt)("h2",{id:"libraries"},"Libraries"),(0,i.kt)("p",null,"The compile bytecode will identify if there are are external libraries. If you released with Remix, you will also see multiple transactions created."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "linkReferences": {\n    "contracts/Storage.sol": {\n      "MathUtils": [\n        {\n          "length": 20,\n          "start": 3203\n        }\n        ...\n      ]\n    }\n  },\n  "object": "....",\n  ...\n}\n')),(0,i.kt)("p",null,"This requires you to add external libraries in order to veriy the code."),(0,i.kt)("p",null,"A library can have dependent libraries. To verify a library, the hierarchy of dependencies will need to be provided to the C-Chain Explorer. Verification may fail if you provide more than the library plus any dependencies (i.e. you might need to prune the Solidity code to exclude anything but the necessary classes)."),(0,i.kt)("p",null,"You can also see references in the byte code in the form ",(0,i.kt)("inlineCode",{parentName:"p"},"__$75f20d36....$__"),". The keccak256 hash is generated from the library name."),(0,i.kt)("p",null,"Example ",(0,i.kt)("a",{parentName:"p",href:"https://emn178.github.io/online-tools/keccak_256.html"},"online converter"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"contracts/Storage.sol:MathUtils")," =",">"," ",(0,i.kt)("inlineCode",{parentName:"p"},"75f20d361629befd780a5bd3159f017ee0f8283bdb6da80805f83e829337fd12")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://testnet.snowtrace.io/address/0x12DF75Fed4DEd309477C94cE491c67460727C0E8/contracts"},"SwapFlashLoan"))),(0,i.kt)("p",null,"SwapFlashLoan uses swaputils and mathutils:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://testnet.snowtrace.io/address/0x6703e4660E104Af1cD70095e2FeC337dcE034dc1/contracts"},"SwapUtils"))),(0,i.kt)("p",null,"SwapUtils requires mathutils:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://testnet.snowtrace.io/address/0xbA21C84E4e593CB1c6Fe6FCba340fa7795476966/contracts"},"MathUtils"))),(0,i.kt)("h2",{id:"caveats"},"Caveats"),(0,i.kt)("h3",{id:"spdx-license-required"},"SPDX License Required"),(0,i.kt)("p",null,"An SPDX must be provided."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// SPDX-License-Identifier: ...\n")),(0,i.kt)("h3",{id:"keccak256-strings-processed"},"keccak256 Strings Processed"),(0,i.kt)("p",null,"The C-Chain Explorer interprets all keccak256(...) strings, even those in comments. This can cause issues with constructor args."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'/// keccak256("1");\nkeccak256("2")\n')),(0,i.kt)("p",null,"This could cause automatic constructor verification failures. If you receive errors about constructor args they can be provided in ABI hex encoded form on the contract verification page."),(0,i.kt)("h3",{id:"solidity-constructors"},"Solidity Constructors"),(0,i.kt)("p",null,"Constructors and inherited constructors can cause problems verifying the constructor arguments."),(0,i.kt)("p",null,"example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"abstract contract Parent {\n  constructor () {\n    address msgSender = ...;\n    emit Something(address(0), msgSender);\n  }\n}\ncontract Main is Parent {\n  constructor (\n          string memory _name,\n          address deposit,\n          uint fee\n  ) {\n    ...\n  }\n}\n")),(0,i.kt)("p",null,"If you receive errors about constructor args they can be provided in ABI hex encoded form on the contract verification page."))}m.isMDXComponent=!0},3083:function(e,t,r){t.Z=r.p+"assets/images/verify-and-publish1-adf540f73ec22e41a826254f578f87e8.png"},6155:function(e,t,r){t.Z=r.p+"assets/images/verify-libraries-421553052afd6e7b5f1df42cddde9495.png"},2632:function(e,t,r){t.Z=r.p+"assets/images/verify-src-f9a7735cbf7b4a98a087e0fa2cb724d0.png"}}]);