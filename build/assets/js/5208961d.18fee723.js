"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[7277],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(r),d=i,f=m["".concat(c,".").concat(d)]||m[d]||l[d]||a;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7919:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return l}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],s={sidebar_position:14},c="Metrics API",p={unversionedId:"apis/luxd/apis/metrics",id:"apis/luxd/apis/metrics",title:"Metrics API",description:"The API allows clients to get statistics about a node\u2019s health and performance.",source:"@site/docs/apis/luxd/apis/metrics.md",sourceDirName:"apis/luxd/apis",slug:"/apis/luxd/apis/metrics",permalink:"/apis/luxd/apis/metrics",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/apis/luxd/apis/metrics.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14},sidebar:"apis",previous:{title:"Keystore API",permalink:"/apis/luxd/apis/keystore"},next:{title:"Public API Server",permalink:"/apis/luxd/public-api-server"}},u={},l=[{value:"Endpoint",id:"endpoint",level:2},{value:"Usage",id:"usage",level:2},{value:"Format",id:"format",level:2}],m={toc:l};function d(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"metrics-api"},"Metrics API"),(0,a.kt)("p",null,"The API allows clients to get statistics about a node\u2019s health and performance."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"This API set is for a specific node, it is unavailable on the ",(0,a.kt)("a",{parentName:"p",href:"/apis/luxd/public-api-server"},"public server"),".")),(0,a.kt)("h2",{id:"endpoint"},"Endpoint"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"/ext/metrics\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"To get the node metrics:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"curl -X POST 127.0.0.1:9650/ext/metrics\n")),(0,a.kt)("h2",{id:"format"},"Format"),(0,a.kt)("p",null,"This API produces Prometheus compatible metrics. See ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md"},"here")," for information on Prometheus\u2019 formatting."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/nodes/maintain/setting-up-node-monitoring"},"Here")," is a tutorial that shows how to set up Prometheus and Grafana to monitor LuxGo node using the Metrics API."))}d.isMDXComponent=!0}}]);