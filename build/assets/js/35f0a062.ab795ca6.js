"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[347],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(n),h=a,k=p["".concat(s,".").concat(h)]||p[h]||c[h]||l;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7203:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return c}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={},s="Create a Local Test Network",u={unversionedId:"quickstart/create-a-local-test-network",id:"quickstart/create-a-local-test-network",title:"Create a Local Test Network",description:"Introduction",source:"@site/docs/quickstart/create-a-local-test-network.md",sourceDirName:"quickstart",slug:"/quickstart/create-a-local-test-network",permalink:"/quickstart/create-a-local-test-network",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/quickstart/create-a-local-test-network.md",tags:[],version:"current",frontMatter:{},sidebar:"quickStart",previous:{title:"Quick Start Overview",permalink:"/quickstart/"},next:{title:"Fund a Local Test Network",permalink:"/quickstart/fund-a-local-test-network"}},d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Lux Network Runner",id:"lux-network-runner",level:2},{value:"Installation",id:"installation",level:3},{value:"Start the Server",id:"start-the-server",level:3},{value:"Start a New Lux Network with Five Nodes (a Cluster)",id:"start-a-new-lux-network-with-five-nodes-a-cluster",level:3},{value:"To Get API Endpoints of All Nodes in the Cluster",id:"retrieve-all-nodes",level:4},{value:"Manually",id:"manually",level:2},{value:"Next Step",id:"next-step",level:2}],p={toc:c};function h(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"create-a-local-test-network"},"Create a Local Test Network"),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"This tutorial explains several methods of creating a local test network."),(0,l.kt)("p",null,"There are currently two options to launch such a local network:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using the ",(0,l.kt)("a",{parentName:"li",href:"/subnets/network-runner"},"Lux Network Runner")," (recommended)"),(0,l.kt)("li",{parentName:"ul"},"Manually starting each LuxGo node (not recommended)")),(0,l.kt)("h2",{id:"lux-network-runner"},"Lux Network Runner"),(0,l.kt)("h3",{id:"installation"},"Installation"),(0,l.kt)("p",null,"The Lux Network Runner repository is hosted at ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/lux-network-runner"},"https://github.com/luxdefi/lux-network-runner"),"."),(0,l.kt)("p",null,"That repository's README details the tool."),(0,l.kt)("p",null,"Clone the repository with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/luxdefi/lux-network-runner.git\n")),(0,l.kt)("p",null,"There are also binary releases ready to use at ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/lux-network-runner/releases"},"releases"),". You can download and install it on to your computer."),(0,l.kt)("p",null,"To build from the source and install the binary locally (requires ",(0,l.kt)("inlineCode",{parentName:"p"},"golang")," to be installed. Check the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxd#installation"},"requirements")," for the minimum version):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cd ${HOME}/go/src/github.com/luxdefi/lux-network-runner\ngo install -v ./cmd/lux-network-runner\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"lux-network-runner")," will be installed into ",(0,l.kt)("inlineCode",{parentName:"p"},"$GOPATH/bin"),", please make sure that ",(0,l.kt)("inlineCode",{parentName:"p"},"$GOPATH/bin")," is in your ",(0,l.kt)("inlineCode",{parentName:"p"},"$PATH"),", otherwise, you may not be able to run commands below."),(0,l.kt)("p",null,"Furthermore, ",(0,l.kt)("inlineCode",{parentName:"p"},"LUXGO_EXEC_PATH")," should be set properly in all shells you run commands related to Lux Network Runner. We strongly recommend that you put the following in to your shell's configuration file."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# replace execPath with the path to LuxGo on your machine\n# e.g., ${HOME}/go/src/github.com/luxdefi/luxd/build/luxd\nLUXGO_EXEC_PATH="${HOME}/go/src/github.com/luxdefi/luxd/build/luxd"\n')),(0,l.kt)("p",null,"Unless otherwise specified, file paths given below are relative to the root of this repository."),(0,l.kt)("p",null,"When running with the binary ",(0,l.kt)("inlineCode",{parentName:"p"},"lux-network-runner"),", it runs a server process as an RPC server which then waits for API calls and handles them.\nTherefore we run one shell with the RPC server, and another one for issuing calls."),(0,l.kt)("h3",{id:"start-the-server"},"Start the Server"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'lux-network-runner server \\\n--log-level debug \\\n--port=":8080" \\\n--grpc-gateway-port=":8081"\n')),(0,l.kt)("p",null,"Note that the above command will run until you stop it with ",(0,l.kt)("inlineCode",{parentName:"p"},"CTRL + C"),". Further commands will have to be run in a separate terminal."),(0,l.kt)("p",null,"The RPC server listens to two ports:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"port"),": the main gRPC port (see ",(0,l.kt)("a",{parentName:"li",href:"https://grpc.io/"},"gRPC"),")."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grpc-gateway-port"),": the gRPC gateway port (see ",(0,l.kt)("a",{parentName:"li",href:"https://grpc-ecosystem.github.io/grpc-gateway/"},"gRPC-gateway"),"), which allows for HTTP requests.")),(0,l.kt)("p",null,"When using the binary to issue calls, the main port will be hit. In this mode, the binary executes compiled code to issue calls.\nAlternatively, plain HTTP can be used to issue calls, without the need to use the binary. In this mode, the ",(0,l.kt)("inlineCode",{parentName:"p"},"grpc-gateway-port")," should be queried."),(0,l.kt)("p",null,"Each of the examples below will show both modes, claritying its usage."),(0,l.kt)("h3",{id:"start-a-new-lux-network-with-five-nodes-a-cluster"},"Start a New Lux Network with Five Nodes (a Cluster)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST -k http://localhost:8081/v1/control/start -d \'{"execPath":"\'${LUXGO_EXEC_PATH}\'","numNodes":5,"logLevel":"INFO"}\'\n')),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'lux-network-runner control start \\\n--log-level debug \\\n--endpoint="0.0.0.0:8080" \\\n--number-of-nodes=5 \\\n--luxd-path ${LUXGO_EXEC_PATH}\n')),(0,l.kt)("p",null,"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "clusterInfo": {\n    "nodeNames": [],\n    "nodeInfos": {},\n    "pid": 98315,\n    "rootDataDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647",\n    "healthy": false,\n    "attachedPeerInfos": {},\n    "customVmsHealthy": false,\n    "customVms": {}\n  }\n}\n')),(0,l.kt)("p",null,"Use this command to check if all the nodes in the cluster are healthy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X POST -k http://localhost:8081/v1/control/health -d ''\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'lux-network-runner control health \\\n--log-level debug \\\n--endpoint="0.0.0.0:8080"\n')),(0,l.kt)("p",null,"The response to this call is actually pretty large, as it contains the state of the whole cluster. At the very end of it there should be a text saying ",(0,l.kt)("inlineCode",{parentName:"p"},"healthy:true")," (it would say ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," if it wasn't healthy)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "clusterInfo": {\n    "nodeNames": ["node3", "node4", "node5", "node1", "node2"],\n    "nodeInfos": {\n      "node1": {\n        "name": "node1",\n        "execPath": "/Users/testuser/workspace/src/github.com/luxdefi/luxd/build/luxd",\n        "uri": "http://127.0.0.1:40108",\n        "id": "NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg",\n        "logDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647/node1/log",\n        "dbDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647/node1/db-dir",\n        "pluginDir": "",\n        "whitelistedSubnets": "",\n        "config": "eyJhcGktYWRtaW4tZW5hYmxlZCI6dHJ1ZSwiYXBpLWlwY3MtZW5hYmxlZCI6dHJ1ZSwiZGItZGlyIjoiL3Zhci9mb2xkZXJzLzBoL3Y0bnJiYnNuMXZ2YnI1aDJ3ZnJoNWg1MDAwMDBnbi9UL25ldHdvcmstcnVubmVyLXJvb3QtZGF0YTM1NzU0NTg2NDcvbm9kZTEvZGItZGlyIiwiaGVhbHRoLWNoZWNrLWZyZXF1ZW5jeSI6IjJzIiwiaW5kZXgtZW5hYmxlZCI6dHJ1ZSwibG9nLWRpciI6Ii92YXIvZm9sZGVycy8waC92NG5yYmJzbjF2dmJyNWgyd2ZyaDVoNTAwMDAwZ24vVC9uZXR3b3JrLXJ1bm5lci1yb290LWRhdGEzNTc1NDU4NjQ3L25vZGUxL2xvZyIsImxvZy1kaXNwbGF5LWxldmVsIjoiSU5GTyIsImxvZy1sZXZlbCI6IklORk8iLCJuZXR3b3JrLW1heC1yZWNvbm5lY3QtZGVsYXkiOiIxcyIsIm5ldHdvcmstcGVlci1saXN0LWdvc3NpcC1mcmVxdWVuY3kiOiIyNTBtcyIsInBsdWdpbi1kaXIiOiIiLCJwdWJsaWMtaXAiOiIxMjcuMC4wLjEiLCJ3aGl0ZWxpc3RlZC1zdWJuZXRzIjoiIn0="\n      },\n      "node2": {\n        "name": "node2",\n        "execPath": "/Users/testuser/workspace/src/github.com/luxdefi/luxd/build/luxd",\n        "uri": "http://127.0.0.1:64470",\n        "id": "NodeID-MFrZFVCXPv5iCn6M9K6XduxGTYp891xXZ",\n        "logDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647/node2/log",\n        "dbDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647/node2/db-dir",\n        "pluginDir": "",\n        "whitelistedSubnets": "",\n        "config": "eyJhcGktYWRtaW4tZW5hYmxlZCI6dHJ1ZSwiYXBpLWlwY3MtZW5hYmxlZCI6dHJ1ZSwiZGItZGlyIjoiL3Zhci9mb2xkZXJzLzBoL3Y0bnJiYnNuMXZ2YnI1aDJ3ZnJoNWg1MDAwMDBnbi9UL25ldHdvcmstcnVubmVyLXJvb3QtZGF0YTM1NzU0NTg2NDcvbm9kZTIvZGItZGlyIiwiaGVhbHRoLWNoZWNrLWZyZXF1ZW5jeSI6IjJzIiwiaW5kZXgtZW5hYmxlZCI6dHJ1ZSwibG9nLWRpciI6Ii92YXIvZm9sZGVycy8waC92NG5yYmJzbjF2dmJyNWgyd2ZyaDVoNTAwMDAwZ24vVC9uZXR3b3JrLXJ1bm5lci1yb290LWRhdGEzNTc1NDU4NjQ3L25vZGUyL2xvZyIsImxvZy1kaXNwbGF5LWxldmVsIjoiSU5GTyIsImxvZy1sZXZlbCI6IklORk8iLCJuZXR3b3JrLW1heC1yZWNvbm5lY3QtZGVsYXkiOiIxcyIsIm5ldHdvcmstcGVlci1saXN0LWdvc3NpcC1mcmVxdWVuY3kiOiIyNTBtcyIsInBsdWdpbi1kaXIiOiIiLCJwdWJsaWMtaXAiOiIxMjcuMC4wLjEiLCJ3aGl0ZWxpc3RlZC1zdWJuZXRzIjoiIn0="\n      },\n      "node3": {\n        "name": "node3",\n        "execPath": "/Users/testuser/workspace/src/github.com/luxdefi/luxd/build/luxd",\n        "uri": "http://127.0.0.1:30301",\n        "id": "NodeID-NFBbbJ4qCmNaCzeW7sxErhvWqvEQMnYcN",\n        "logDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647/node3/log",\n        "dbDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647/node3/db-dir",\n        "pluginDir": "",\n        "whitelistedSubnets": "",\n        "config": "eyJhcGktYWRtaW4tZW5hYmxlZCI6dHJ1ZSwiYXBpLWlwY3MtZW5hYmxlZCI6dHJ1ZSwiZGItZGlyIjoiL3Zhci9mb2xkZXJzLzBoL3Y0bnJiYnNuMXZ2YnI1aDJ3ZnJoNWg1MDAwMDBnbi9UL25ldHdvcmstcnVubmVyLXJvb3QtZGF0YTM1NzU0NTg2NDcvbm9kZTMvZGItZGlyIiwiaGVhbHRoLWNoZWNrLWZyZXF1ZW5jeSI6IjJzIiwiaW5kZXgtZW5hYmxlZCI6dHJ1ZSwibG9nLWRpciI6Ii92YXIvZm9sZGVycy8waC92NG5yYmJzbjF2dmJyNWgyd2ZyaDVoNTAwMDAwZ24vVC9uZXR3b3JrLXJ1bm5lci1yb290LWRhdGEzNTc1NDU4NjQ3L25vZGUzL2xvZyIsImxvZy1kaXNwbGF5LWxldmVsIjoiSU5GTyIsImxvZy1sZXZlbCI6IklORk8iLCJuZXR3b3JrLW1heC1yZWNvbm5lY3QtZGVsYXkiOiIxcyIsIm5ldHdvcmstcGVlci1saXN0LWdvc3NpcC1mcmVxdWVuY3kiOiIyNTBtcyIsInBsdWdpbi1kaXIiOiIiLCJwdWJsaWMtaXAiOiIxMjcuMC4wLjEiLCJ3aGl0ZWxpc3RlZC1zdWJuZXRzIjoiIn0="\n      },\n      "node4": {\n        "name": "node4",\n        "execPath": "/Users/testuser/workspace/src/github.com/luxdefi/luxd/build/luxd",\n        "uri": "http://127.0.0.1:31072",\n        "id": "NodeID-GWPcbFJZFfZreETSoWjPimr846mXEKCtu",\n        "logDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647/node4/log",\n        "dbDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647/node4/db-dir",\n        "pluginDir": "",\n        "whitelistedSubnets": "",\n        "config": "eyJhcGktYWRtaW4tZW5hYmxlZCI6dHJ1ZSwiYXBpLWlwY3MtZW5hYmxlZCI6dHJ1ZSwiZGItZGlyIjoiL3Zhci9mb2xkZXJzLzBoL3Y0bnJiYnNuMXZ2YnI1aDJ3ZnJoNWg1MDAwMDBnbi9UL25ldHdvcmstcnVubmVyLXJvb3QtZGF0YTM1NzU0NTg2NDcvbm9kZTQvZGItZGlyIiwiaGVhbHRoLWNoZWNrLWZyZXF1ZW5jeSI6IjJzIiwiaW5kZXgtZW5hYmxlZCI6dHJ1ZSwibG9nLWRpciI6Ii92YXIvZm9sZGVycy8waC92NG5yYmJzbjF2dmJyNWgyd2ZyaDVoNTAwMDAwZ24vVC9uZXR3b3JrLXJ1bm5lci1yb290LWRhdGEzNTc1NDU4NjQ3L25vZGU0L2xvZyIsImxvZy1kaXNwbGF5LWxldmVsIjoiSU5GTyIsImxvZy1sZXZlbCI6IklORk8iLCJuZXR3b3JrLW1heC1yZWNvbm5lY3QtZGVsYXkiOiIxcyIsIm5ldHdvcmstcGVlci1saXN0LWdvc3NpcC1mcmVxdWVuY3kiOiIyNTBtcyIsInBsdWdpbi1kaXIiOiIiLCJwdWJsaWMtaXAiOiIxMjcuMC4wLjEiLCJ3aGl0ZWxpc3RlZC1zdWJuZXRzIjoiIn0="\n      },\n      "node5": {\n        "name": "node5",\n        "execPath": "/Users/testuser/workspace/src/github.com/luxdefi/luxd/build/luxd",\n        "uri": "http://127.0.0.1:37730",\n        "id": "NodeID-P7oB2McjBGgW2NXXWVYjV8JEDFoW9xDE5",\n        "logDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647/node5/log",\n        "dbDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647/node5/db-dir",\n        "pluginDir": "",\n        "whitelistedSubnets": "",\n        "config": "eyJhcGktYWRtaW4tZW5hYmxlZCI6dHJ1ZSwiYXBpLWlwY3MtZW5hYmxlZCI6dHJ1ZSwiZGItZGlyIjoiL3Zhci9mb2xkZXJzLzBoL3Y0bnJiYnNuMXZ2YnI1aDJ3ZnJoNWg1MDAwMDBnbi9UL25ldHdvcmstcnVubmVyLXJvb3QtZGF0YTM1NzU0NTg2NDcvbm9kZTUvZGItZGlyIiwiaGVhbHRoLWNoZWNrLWZyZXF1ZW5jeSI6IjJzIiwiaW5kZXgtZW5hYmxlZCI6dHJ1ZSwibG9nLWRpciI6Ii92YXIvZm9sZGVycy8waC92NG5yYmJzbjF2dmJyNWgyd2ZyaDVoNTAwMDAwZ24vVC9uZXR3b3JrLXJ1bm5lci1yb290LWRhdGEzNTc1NDU4NjQ3L25vZGU1L2xvZyIsImxvZy1kaXNwbGF5LWxldmVsIjoiSU5GTyIsImxvZy1sZXZlbCI6IklORk8iLCJuZXR3b3JrLW1heC1yZWNvbm5lY3QtZGVsYXkiOiIxcyIsIm5ldHdvcmstcGVlci1saXN0LWdvc3NpcC1mcmVxdWVuY3kiOiIyNTBtcyIsInBsdWdpbi1kaXIiOiIiLCJwdWJsaWMtaXAiOiIxMjcuMC4wLjEiLCJ3aGl0ZWxpc3RlZC1zdWJuZXRzIjoiIn0="\n      }\n    },\n    "pid": 98315,\n    "rootDataDir": "/var/folders/0h/v4nrbbsn1vvbr5h2wfrh5h500000gn/T/network-runner-root-data3575458647",\n    "healthy": true,\n    "attachedPeerInfos": {},\n    "customVmsHealthy": false,\n    "customVms": {}\n  }\n}\n')),(0,l.kt)("h4",{id:"retrieve-all-nodes"},"To Get API Endpoints of All Nodes in the Cluster"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl -X POST -k http://localhost:8081/v1/control/uris -d ''\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'lux-network-runner control uris \\\n--log-level debug \\\n--endpoint="0.0.0.0:8080"\n')),(0,l.kt)("p",null,"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "uris": [\n    "http://127.0.0.1:30301",\n    "http://127.0.0.1:31072",\n    "http://127.0.0.1:37730",\n    "http://127.0.0.1:40108",\n    "http://127.0.0.1:64470"\n  ]\n}\n')),(0,l.kt)("p",null,"Now you have a 5-nodes network with HTTP ports (where API calls should be sent) ",(0,l.kt)("inlineCode",{parentName:"p"},"30301"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"31072"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"37730"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"40108")," , and ",(0,l.kt)("inlineCode",{parentName:"p"},"64470"),"."),(0,l.kt)("p",null,"Please refer to the dedicated ",(0,l.kt)("a",{parentName:"p",href:"/subnets/network-runner"},"Lux Network Runner documentation")," for more information."),(0,l.kt)("h2",{id:"manually"},"Manually"),(0,l.kt)("p",null,"The below commands assume you have ",(0,l.kt)("a",{parentName:"p",href:"/nodes/build/run-lux-node-manually#download-luxd"},"LuxGo")," installed at ",(0,l.kt)("inlineCode",{parentName:"p"},"$GOPATH/src/github.com/luxdefi/luxd"),". Each of the five nodes created is a validator. The staking keys for these nodes are in ",(0,l.kt)("inlineCode",{parentName:"p"},"$GOPATH/src/github.com/luxdefi/luxd/staking/local/staker1.crt"),", etc."),(0,l.kt)("p",null,"The 5 nodes will have HTTP ports (where API calls should be sent) ",(0,l.kt)("inlineCode",{parentName:"p"},"9650"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"9652"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"9654"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"9656")," , and ",(0,l.kt)("inlineCode",{parentName:"p"},"9658"),"."),(0,l.kt)("p",null,"To start the network:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd $GOPATH/src/github.com/luxdefi/luxd\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./scripts/build.sh\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./build/luxd --public-ip=127.0.0.1 --http-port=9650 --staking-port=9651 --db-dir=db/node1 --network-id=local --staking-tls-cert-file=$(pwd)/staking/local/staker1.crt --staking-tls-key-file=$(pwd)/staking/local/staker1.key\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./build/luxd --public-ip=127.0.0.1 --http-port=9652 --staking-port=9653 --db-dir=db/node2 --network-id=local --bootstrap-ips=127.0.0.1:9651 --bootstrap-ids=NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg --staking-tls-cert-file=$(pwd)/staking/local/staker2.crt --staking-tls-key-file=$(pwd)/staking/local/staker2.key\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./build/luxd --public-ip=127.0.0.1 --http-port=9654 --staking-port=9655 --db-dir=db/node3 --network-id=local --bootstrap-ips=127.0.0.1:9651 --bootstrap-ids=NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg --staking-tls-cert-file=$(pwd)/staking/local/staker3.crt --staking-tls-key-file=$(pwd)/staking/local/staker3.key\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./build/luxd --public-ip=127.0.0.1 --http-port=9656 --staking-port=9657 --db-dir=db/node4 --network-id=local --bootstrap-ips=127.0.0.1:9651 --bootstrap-ids=NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg --staking-tls-cert-file=$(pwd)/staking/local/staker4.crt --staking-tls-key-file=$(pwd)/staking/local/staker4.key\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"./build/luxd --public-ip=127.0.0.1 --http-port=9658 --staking-port=9659 --db-dir=db/node5 --network-id=local --bootstrap-ips=127.0.0.1:9651 --bootstrap-ids=NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg --staking-tls-cert-file=$(pwd)/staking/local/staker5.crt --staking-tls-key-file=$(pwd)/staking/local/staker5.key\n")),(0,l.kt)("h2",{id:"next-step"},"Next Step"),(0,l.kt)("p",null,"Check out ",(0,l.kt)("a",{parentName:"p",href:"/quickstart/fund-a-local-test-network"},"Fund a Local Test Network"),"."))}h.isMDXComponent=!0}}]);