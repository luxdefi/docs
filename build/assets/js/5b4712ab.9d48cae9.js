"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[2840],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return h}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(t),h=o,m=c["".concat(s,".").concat(h)]||c[h]||p[h]||i;return t?a.createElement(m,r(r({ref:n},d),{},{components:t})):a.createElement(m,r({ref:n},d))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var u=2;u<i;u++)r[u]=t[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5494:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var a=t(7462),o=t(3366),i=(t(7294),t(3905)),r=["components"],l={sidebar_position:1},s="Run an Lux Node Using the Install Script",u={unversionedId:"nodes/build/set-up-node-with-installer",id:"nodes/build/set-up-node-with-installer",title:"Run an Lux Node Using the Install Script",description:"We have a shell (bash) script that installs LuxGo on your computer. This script sets up full, running node in a matter of minutes with minimal user input required. Script can also be used for unattended, automated installs.",source:"@site/docs/nodes/build/set-up-node-with-installer.md",sourceDirName:"nodes/build",slug:"/nodes/build/set-up-node-with-installer",permalink:"/nodes/build/set-up-node-with-installer",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/nodes/build/set-up-node-with-installer.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"nodes",previous:{title:"Nodes Overview",permalink:"/nodes/"},next:{title:"Run an Lux Node Manually",permalink:"/nodes/build/run-lux-node-manually"}},d={},p=[{value:"Before You Start",id:"before-you-start",level:2},{value:"Environment Considerations",id:"environment-considerations",level:3},{value:"Node Running from Terminal",id:"node-running-from-terminal",level:4},{value:"Node Running as a Service",id:"node-running-as-a-service",level:4},{value:"Node Running in the Background",id:"node-running-in-the-background",level:4},{value:"Node Working Files",id:"node-working-files",level:4},{value:"Networking Considerations",id:"networking-considerations",level:3},{value:"Running on a Cloud Provider",id:"running-on-a-cloud-provider",level:4},{value:"Running on a Home Connection",id:"running-on-a-home-connection",level:4},{value:"Running the Script",id:"running-the-script",level:2},{value:"Post Installation",id:"post-installation",level:2},{value:"Stopping the Node",id:"stopping-the-node",level:2},{value:"Node Upgrade",id:"node-upgrade",level:2},{value:"Advanced Node Configuration",id:"advanced-node-configuration",level:2},{value:"Unattended Installation",id:"unattended-installation",level:3},{value:"Usage Examples",id:"usage-examples",level:3},{value:"Node Configuration",id:"node-configuration",level:2},{value:"Using a Previous Version",id:"using-a-previous-version",level:2},{value:"Reinstall and Script Update",id:"reinstall-and-script-update",level:2},{value:"Removing the Node Installation",id:"removing-the-node-installation",level:2},{value:"What Next?",id:"what-next",level:2}],c={toc:p};function h(e){var n=e.components,t=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"run-an-lux-node-using-the-install-script"},"Run an Lux Node Using the Install Script"),(0,i.kt)("p",null,"We have a shell (bash) script that installs LuxGo on your computer. This script sets up full, running node in a matter of minutes with minimal user input required. Script can also be used for unattended, ",(0,i.kt)("a",{parentName:"p",href:"#unattended-installation"},"automated installs"),"."),(0,i.kt)("h2",{id:"before-you-start"},"Before You Start"),(0,i.kt)("p",null,"Lux is an incredibly lightweight protocol, so nodes can run on commodity hardware with the following mimimum specifications. Note that as network usage increases, hardware requirements may change."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"CPU: Equivalent of 8 AWS vCPU"),(0,i.kt)("li",{parentName:"ul"},"RAM: 16 GiB"),(0,i.kt)("li",{parentName:"ul"},"Storage: 1 TB"),(0,i.kt)("li",{parentName:"ul"},"OS: Ubuntu 18.04/20.04 or MacOS ",">","= Catalina"),(0,i.kt)("li",{parentName:"ul"},"Network: sustained 5Mbps up/down bandwidth")),(0,i.kt)("p",null,"Please note that HW requirements shall scale with the amount of LUX staked on the node. Nodes with big stakes (100k+ LUX) will need more powerful machines than listed, and will use more bandwidth as well."),(0,i.kt)("p",null,"This install script assumes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"LuxGo is not running and not already installed as a service"),(0,i.kt)("li",{parentName:"ul"},"User running the script has superuser privileges (can run ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo"),")")),(0,i.kt)("h3",{id:"environment-considerations"},"Environment Considerations"),(0,i.kt)("p",null,"If you run a different flavor of Linux, the script might not work as intended. It assumes ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd")," is used to run system services. Other Linux flavors might use something else, or might have files in different places than is assumed by the script. It will probably work on any distribution that uses ",(0,i.kt)("inlineCode",{parentName:"p"},"systemd")," but it has been developed for and tested on Ubuntu."),(0,i.kt)("p",null,"If you have a node already running on the computer, stop it before running the script. Script won't touch the node working directory so you won't need to bootstrap the node again."),(0,i.kt)("h4",{id:"node-running-from-terminal"},"Node Running from Terminal"),(0,i.kt)("p",null,"If your node is running in a terminal stop it by pressing ",(0,i.kt)("inlineCode",{parentName:"p"},"ctrl+C"),"."),(0,i.kt)("h4",{id:"node-running-as-a-service"},"Node Running as a Service"),(0,i.kt)("p",null,"If your node is already running as a service, then you probably don't need this script. You're good to go."),(0,i.kt)("h4",{id:"node-running-in-the-background"},"Node Running in the Background"),(0,i.kt)("p",null,"If your node is running in the background (by running with ",(0,i.kt)("inlineCode",{parentName:"p"},"nohup"),", for example) then find the process running the node by running ",(0,i.kt)("inlineCode",{parentName:"p"},"ps aux | grep lux"),". This will produce output like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"ubuntu  6834  0.0  0.0   2828   676 pts/1    S+   19:54   0:00 grep lux\nubuntu  2630 26.1  9.4 2459236 753316 ?      Sl   Dec02 1220:52 /home/ubuntu/build/luxd\n")),(0,i.kt)("p",null,"Look for line that doesn't have ",(0,i.kt)("inlineCode",{parentName:"p"},"grep")," on it. In this example, that is the second line. It shows information about your node. Note the process id, in this case, ",(0,i.kt)("inlineCode",{parentName:"p"},"2630"),". Stop the node by running ",(0,i.kt)("inlineCode",{parentName:"p"},"kill -2 2630"),"."),(0,i.kt)("h4",{id:"node-working-files"},"Node Working Files"),(0,i.kt)("p",null,"If you previously ran an LuxGo node on this computer, you will have local node files stored in ",(0,i.kt)("inlineCode",{parentName:"p"},"$HOME/.luxd")," directory. Those files will not be disturbed, and node set up by the script will continue operation with the same identity and state it had before. That being said, for your node's security, back up ",(0,i.kt)("inlineCode",{parentName:"p"},"staker.crt")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"staker.key")," files, found in ",(0,i.kt)("inlineCode",{parentName:"p"},"$HOME/.luxd/staking")," and store them somewhere secure. You can use those files to recreate your node on a different computer if you ever need to. Check out this ",(0,i.kt)("a",{parentName:"p",href:"/nodes/maintain/node-backup-and-restore"},"tutorial")," for backup and restore procedure."),(0,i.kt)("h3",{id:"networking-considerations"},"Networking Considerations"),(0,i.kt)("p",null,"To run successfully, LuxGo needs to accept connections from the Internet on the network port ",(0,i.kt)("inlineCode",{parentName:"p"},"9651"),". Before you proceed with the installation, you need to determine the networking environment your node will run in."),(0,i.kt)("h4",{id:"running-on-a-cloud-provider"},"Running on a Cloud Provider"),(0,i.kt)("p",null,"If your node is running on a cloud provider computer instance, it will have a static IP. Find out what that static IP is, or set it up if you didn't already. The script will try to find out the IP by itself, but that might not work in all environments, so you will need to check the IP or enter it yourself."),(0,i.kt)("h4",{id:"running-on-a-home-connection"},"Running on a Home Connection"),(0,i.kt)("p",null,"If you're running a node on a computer that is on a residential internet connection, you have a dynamic IP; that is, your IP will change periodically. The install script will configure the node appropriately for that situation. But, for a home connection, you will need to set up inbound port forwarding of port ",(0,i.kt)("inlineCode",{parentName:"p"},"9651")," from the internet to the computer the node is installed on."),(0,i.kt)("p",null,"As there are too many models and router configurations, we cannot provide instructions on what exactly to do, but there are online guides to be found (like ",(0,i.kt)("a",{parentName:"p",href:"https://www.noip.com/support/knowledgebase/general-port-forwarding-guide/"},"this"),", or ",(0,i.kt)("a",{parentName:"p",href:"https://www.howtogeek.com/66214/how-to-forward-ports-on-your-router/"},"this")," ), and your service provider support might help too."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Please note that a fully connected Lux node maintains and communicates over a couple of thousand of live TCP connections. For some low-powered and older home routers that might be too much to handle. If that is the case you may experience lagging on other computers connected to the same router, node getting benched, failing to sync and similar issues.")),(0,i.kt)("h2",{id:"running-the-script"},"Running the Script"),(0,i.kt)("p",null,"So, now that you prepared your system and have the info ready, let's get to it."),(0,i.kt)("p",null,"To download and run the script, enter the following in the terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"wget -nd -m https://raw.githubusercontent.com/luxdefi/lux-docs/master/scripts/luxd-installer.sh;\\\nchmod 755 luxd-installer.sh;\\\n./luxd-installer.sh\n")),(0,i.kt)("p",null,"And we're off! The output should look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'LuxGo installer\n---------------------\nPreparing environment...\nFound arm64 architecture...\nLooking for the latest arm64 build...\nWill attempt to download:\n https://github.com/luxdefi/luxd/releases/download/v1.1.1/luxd-linux-arm64-v1.1.1.tar.gz\nluxd-linux-arm64-v1.1.1.tar.gz 100%[=========================================================================>]  29.83M  75.8MB/s    in 0.4s\n2020-12-28 14:57:47 URL:https://github-production-release-asset-2e65be.s3.amazonaws.com/246387644/f4d27b00-4161-11eb-8fb2-156a992fd2c8?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20201228%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20201228T145747Z&X-Amz-Expires=300&X-Amz-Signature=ea838877f39ae940a37a076137c4c2689494c7e683cb95a5a4714c062e6ba018&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=246387644&response-content-disposition=attachment%3B%20filename%3Dluxd-linux-arm64-v1.1.1.tar.gz&response-content-type=application%2Foctet-stream [31283052/31283052] -> "luxd-linux-arm64-v1.1.1.tar.gz" [1]\nUnpacking node files...\nluxd-v1.1.1/plugins/\nluxd-v1.1.1/plugins/evm\nluxd-v1.1.1/luxd\nNode files unpacked into /home/ubuntu/lux-node\n')),(0,i.kt)("p",null,"And then the script will prompt you for information about the network environment:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"To complete the setup some networking information is needed.\nWhere is the node installed:\n1) residential network (dynamic IP)\n2) cloud provider (static IP)\nEnter your connection type [1,2]:\n")),(0,i.kt)("p",null,"enter ",(0,i.kt)("inlineCode",{parentName:"p"},"1")," if you have dynamic IP, and ",(0,i.kt)("inlineCode",{parentName:"p"},"2")," if you have a static IP. If you are on a static IP, it will try to auto-detect the IP and ask for confirmation."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Detected '3.15.152.14' as your public IP. Is this correct? [y,n]:\n")),(0,i.kt)("p",null,"Confirm with ",(0,i.kt)("inlineCode",{parentName:"p"},"y"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," if the detected IP is wrong (or empty), and then enter the correct IP at the next prompt."),(0,i.kt)("p",null,"Next, you have to set up RPC port access for your node. Those are used to query the node for its internal state, to send commands to the node, or to interact with the platform and its chains (sending transactions, for example). You will be prompted:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Do you want the RPC port to be accessible to any or only local network interface? [any, local]:\n")),(0,i.kt)("p",null,"If you're ok with sending RPC requests only from the node machine itself, enter ",(0,i.kt)("inlineCode",{parentName:"p"},"local")," at the prompt. If you want to be able to send RPC requests to your node from a remote machine, enter ",(0,i.kt)("inlineCode",{parentName:"p"},"any"),". Please note that if you choose to allow RPC requests on any network interface you will need to set up a firewall to only let through RPC requests from known IP addresses, otherwise your node will be accessible to anyone and might be overwhelmed by RPC calls from malicious actors! If you do not plan to use your node to send RPC calls, enter ",(0,i.kt)("inlineCode",{parentName:"p"},"local")," for increased node security."),(0,i.kt)("p",null,"The script will then continue with system service creation and finish with starting the service:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Created symlink /etc/systemd/system/multi-user.target.wants/luxd.service \u2192 /etc/systemd/system/luxd.service.\n\nDone!\n\nYour node should now be bootstrapping.\nNode configuration file is /home/ubuntu/.luxd/configs/node.json\nC-Chain configuration file is /home/ubuntu/.luxd/configs/chains/C/config.json\nTo check that the service is running use the following command (q to exit):\nsudo systemctl status luxd\nTo follow the log use (ctrl-c to stop):\nsudo journalctl -u luxd -f\n\nReach us over on https://chat.lux.network if you're having problems.\n")),(0,i.kt)("p",null,"The script is finished, and you should see the system prompt again."),(0,i.kt)("h2",{id:"post-installation"},"Post Installation"),(0,i.kt)("p",null,"LuxGo should be running in the background as a service. You can check that it's running with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl status luxd\n")),(0,i.kt)("p",null,"This will print the node's latest logs, which should look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'\u25cf luxd.service - LuxGo systemd service\nLoaded: loaded (/etc/systemd/system/luxd.service; enabled; vendor preset: enabled)\nActive: active (running) since Tue 2021-01-05 10:38:21 UTC; 51s ago\nMain PID: 2142 (luxd)\nTasks: 8 (limit: 4495)\nMemory: 223.0M\nCGroup: /system.slice/luxd.service\n\u2514\u25002142 /home/ubuntu/lux-node/luxd --dynamic-public-ip=opendns --http-host=\n\nJan 05 10:38:45 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:38:45] <P Chain> luxd/vms/platformvm/vm.go#322: initializing last accepted block as 2FUFPVPxbTpKNn39moGSzsmGroYES4NZRdw3mJgNvMkMiMHJ9e\nJan 05 10:38:45 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:38:45] <P Chain> luxd/snow/engine/snowman/transitive.go#58: initializing consensus engine\nJan 05 10:38:45 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:38:45] luxd/api/server.go#143: adding route /ext/bc/11111111111111111111111111111111LpoYY\nJan 05 10:38:45 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:38:45] luxd/api/server.go#88: HTTP API server listening on ":9650"\nJan 05 10:38:58 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:38:58] <P Chain> luxd/snow/engine/common/bootstrapper.go#185: Bootstrapping started syncing with 1 vertices in the accepted frontier\nJan 05 10:39:02 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:39:02] <P Chain> luxd/snow/engine/snowman/bootstrap/bootstrapper.go#210: fetched 2500 blocks\nJan 05 10:39:04 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:39:04] <P Chain> luxd/snow/engine/snowman/bootstrap/bootstrapper.go#210: fetched 5000 blocks\nJan 05 10:39:06 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:39:06] <P Chain> luxd/snow/engine/snowman/bootstrap/bootstrapper.go#210: fetched 7500 blocks\nJan 05 10:39:09 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:39:09] <P Chain> luxd/snow/engine/snowman/bootstrap/bootstrapper.go#210: fetched 10000 blocks\nJan 05 10:39:11 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:39:11] <P Chain> luxd/snow/engine/snowman/bootstrap/bootstrapper.go#210: fetched 12500 blocks\n')),(0,i.kt)("p",null,"Note the ",(0,i.kt)("inlineCode",{parentName:"p"},"active (running)")," which indicates the service is running ok. You may need to press ",(0,i.kt)("inlineCode",{parentName:"p"},"q")," to return to the command prompt."),(0,i.kt)("p",null,"To find out your NodeID, which is used to identify your node to the network, run the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'sudo journalctl -u luxd | grep "NodeID"\n')),(0,i.kt)("p",null,"It will produce output like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Jan 05 10:38:38 ip-172-31-30-64 luxd[2142]: INFO [01-05|10:38:38] luxd/node/node.go#428: Set node's ID to 6seStrauyCnVV7NEVwRbfaT9B6EnXEzfY\n")),(0,i.kt)("p",null,"Prepend ",(0,i.kt)("inlineCode",{parentName:"p"},"NodeID-")," to the value to get, for example, ",(0,i.kt)("inlineCode",{parentName:"p"},"NodeID-6seStrauyCnVV7NEVwRbfaT9B6EnXEzfY"),". Store that; it will be needed for staking or looking up your node."),(0,i.kt)("p",null,"Your node should be in the process of bootstrapping now. You can monitor the progress by issuing the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo journalctl -u luxd -f\n")),(0,i.kt)("p",null,"Press ",(0,i.kt)("inlineCode",{parentName:"p"},"ctrl+C")," when you wish to stop reading node output."),(0,i.kt)("h2",{id:"stopping-the-node"},"Stopping the Node"),(0,i.kt)("p",null,"To stop LuxGo, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop luxd\n")),(0,i.kt)("p",null,"To start it again, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start luxd\n")),(0,i.kt)("h2",{id:"node-upgrade"},"Node Upgrade"),(0,i.kt)("p",null,"LuxGo is an ongoing project and there are regular version upgrades. Most upgrades are recommended but not required. Advance notice will be given for upgrades that are not backwards compatible. When a new version of the node is released, you will notice log lines like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Jan 08 10:26:45 ip-172-31-16-229 luxd[6335]: INFO [01-08|10:26:45] luxd/network/peer.go#526: beacon 9CkG9MBNavnw7EVSRsuFr7ws9gascDQy3 attempting to connect with newer version lux/1.1.1. You may want to update your client\n")),(0,i.kt)("p",null,"It is recommended to always upgrade to the latest version, because new versions bring bug fixes, new features and upgrades."),(0,i.kt)("p",null,"To upgrade your node, just run the installer script again:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./luxd-installer.sh\n")),(0,i.kt)("p",null,"It will detect that you already have LuxGo installed:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"LuxGo installer\n---------------------\nPreparing environment...\nFound 64bit Intel/AMD architecture...\nFound LuxGo systemd service already installed, switching to upgrade mode.\nStopping service...\n")),(0,i.kt)("p",null,"It will then upgrade your node to the latest version, and after it's done, start the node back up, and print out the information about the latest version:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Node upgraded, starting service...\nNew node version:\nlux/1.1.1 [network=mainnet, database=v1.0.0, commit=f76f1fd5f99736cf468413bbac158d6626f712d2]\nDone!\n")),(0,i.kt)("h2",{id:"advanced-node-configuration"},"Advanced Node Configuration"),(0,i.kt)("p",null,"Without any additional arguments, the script installs the node in a most common configuration. But the script also enables various advanced options to be configured, via the command line prompts. Following is a list of advanced options and their usage:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"admin")," - ",(0,i.kt)("a",{parentName:"li",href:"/apis/luxd/apis/admin"},"Admin API")," will be enabled"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"archival")," - disables database pruning and preserves the complete transaction history"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"db-dir")," - use to provide the full path to the location where the database will be stored"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fuji")," - node will connect to Fuji testnet instead of the mainnet"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"index")," - ",(0,i.kt)("a",{parentName:"li",href:"/apis/luxd/apis/index-api"},"Index API")," will be enabled"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ip")," - use ",(0,i.kt)("inlineCode",{parentName:"li"},"dynamic"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"static")," arguments, of enter a desired IP directly to be used as the public IP node will advertise to the network"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rpc")," - use ",(0,i.kt)("inlineCode",{parentName:"li"},"any")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"local")," argument to select any or local network interface to be used to listen for RPC calls"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"version")," - install a specific node version, instead of the latest. See ",(0,i.kt)("a",{parentName:"li",href:"/nodes/build/set-up-node-with-installer#using-a-previous-version"},"here")," for usage.")),(0,i.kt)("p",null,"Please note that configuring ",(0,i.kt)("inlineCode",{parentName:"p"},"index")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"archival")," options on an existing node will require a fresh bootstrap to recreate the database."),(0,i.kt)("p",null,"Complete script usage can be displayed by entering:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./luxd-installer.sh --help\n")),(0,i.kt)("h3",{id:"unattended-installation"},"Unattended Installation"),(0,i.kt)("p",null,"If you want to use the script in an automated environment where you cannot enter the data at the prompts you must provide at least the ",(0,i.kt)("inlineCode",{parentName:"p"},"rpc")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"ip")," options. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./luxd-installer.sh --ip 1.2.3.4 --rpc local\n")),(0,i.kt)("h3",{id:"usage-examples"},"Usage Examples"),(0,i.kt)("p",null,"To run a Fuji node with indexing enabled and autodetected static IP:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./luxd-installer.sh --fuji --ip static --index\n")),(0,i.kt)("p",null,"To run an archival mainnet node with dynamic IP and database located at ",(0,i.kt)("inlineCode",{parentName:"p"},"/home/node/db"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./luxd-installer.sh --archival --ip dynamic --db-dir /home/node/db\n")),(0,i.kt)("p",null,"To reinstall the node using node version 1.7.10 and use specific IP and local RPC only:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./luxd-installer.sh --reinstall --ip 1.2.3.4 --version v1.7.10 --rpc local\n")),(0,i.kt)("h2",{id:"node-configuration"},"Node Configuration"),(0,i.kt)("p",null,"File that configures node operation is ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.luxd/configs/node.json"),". You can edit it to add or change configuration options. The documentation of configuration options can be found ",(0,i.kt)("a",{parentName:"p",href:"/nodes/maintain/luxd-config-flags"},"here"),". Configuration may look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dynamic-public-ip": "opendns",\n  "http-host": ""\n}\n')),(0,i.kt)("p",null,"Note that configuration file needs to be a properly formatted ",(0,i.kt)("inlineCode",{parentName:"p"},"JSON")," file, so switches are formatted differently than for command line, so don't enter options like ",(0,i.kt)("inlineCode",{parentName:"p"},"--dynamic-public-ip=opendns")," but as in the example above."),(0,i.kt)("p",null,"Script also creates an empty C-Chain config file, located at ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.luxd/configs/chains/C/config.json"),". By editing that file you can configure the C-Chain, as described in detail ",(0,i.kt)("a",{parentName:"p",href:"/nodes/maintain/chain-config-flags"},"here"),"."),(0,i.kt)("h2",{id:"using-a-previous-version"},"Using a Previous Version"),(0,i.kt)("p",null,"The installer script can also be used to install a version of LuxGo other than the latest version."),(0,i.kt)("p",null,"To see a list of available versions for installation, run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./luxd-installer.sh --list\n")),(0,i.kt)("p",null,"It will print out a list, something like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"LuxGo installer\n---------------------\nAvailable versions:\nv1.3.2\nv1.3.1\nv1.3.0\nv1.2.4-arm-fix\nv1.2.4\nv1.2.3-signed\nv1.2.3\nv1.2.2\nv1.2.1\nv1.2.0\n")),(0,i.kt)("p",null,"To install a specific version, run the script with ",(0,i.kt)("inlineCode",{parentName:"p"},"--version")," followed by the tag of the version. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./luxd-installer.sh --version v1.3.1\n")),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Note that not all LuxGo versions are compatible. You should generally run the latest version. Running a version other than latest may lead to your node not working properly and, for validators, not receiving a staking reward.")),(0,i.kt)("p",null,"Thanks to community member ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/jzu"},"Jean Zundel")," for the inspiration and help implementing support for installing non-latest node versions."),(0,i.kt)("h2",{id:"reinstall-and-script-update"},"Reinstall and Script Update"),(0,i.kt)("p",null,"Installer script gets updated from time to time, with new features and capabilities added. To take advantage of new features or to recover from modifications that made the node fail, you may want to reinstall the node. To do that, fetch the latest version of the script from the web with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"wget -nd -m https://raw.githubusercontent.com/luxdefi/lux-docs/master/scripts/luxd-installer.sh\n")),(0,i.kt)("p",null,"After the script has updated, run it again with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--reinstall")," config flag:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./luxd-installer.sh --reinstall\n")),(0,i.kt)("p",null,"This will delete the existing service file, and run the installer from scratch, like it was started for the first time. Note that the database and NodeID will be left intact."),(0,i.kt)("h2",{id:"removing-the-node-installation"},"Removing the Node Installation"),(0,i.kt)("p",null,"If you want to remove the node installation from the machine, you can run the script with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--remove")," option, like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./luxd-installer.sh --remove\n")),(0,i.kt)("p",null,"This will remove the service, service definition file and node binaries. It will not remove the working directory, node ID definition or the node database. To remove those as well, you can type:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"rm -rf ~/.luxd/\n")),(0,i.kt)("p",null,"Please note that this is irreversible and the database and node ID will be deleted!"),(0,i.kt)("h2",{id:"what-next"},"What Next?"),(0,i.kt)("p",null,"That's it, you're running an LuxGo node! Congratulations! Let us know you did it on our ",(0,i.kt)("a",{parentName:"p",href:"https://twitter.com/luxlux"},"Twitter"),", ",(0,i.kt)("a",{parentName:"p",href:"https://t.me/luxlux"},"Telegram")," or ",(0,i.kt)("a",{parentName:"p",href:"https://t.me/luxlux"},"Reddit"),"!"),(0,i.kt)("p",null,"If you're on a residential network (dynamic IP), don't forget to set up port forwarding. If you're on a cloud service provider, you're good to go."),(0,i.kt)("p",null,"Now you can ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxd/apis/issuing-api-calls"},"interact with your node"),", ",(0,i.kt)("a",{parentName:"p",href:"/nodes/validate/staking"},"stake your tokens"),", or level up your installation by setting up ",(0,i.kt)("a",{parentName:"p",href:"/nodes/maintain/setting-up-node-monitoring"},"node monitoring")," to get a better insight into what your node is doing. Also, you might want to use our ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxd/postman-lux-collection"},"Postman Collection")," to more easily issue commands to your node."),(0,i.kt)("p",null,"Finally, if you haven't already, it is a good idea to ",(0,i.kt)("a",{parentName:"p",href:"/nodes/maintain/node-backup-and-restore"},"back up")," important files in case you ever need to restore your node to a different machine."),(0,i.kt)("p",null,"If you have any questions, or need help, feel free to contact us on our ",(0,i.kt)("a",{parentName:"p",href:"https://chat.lux.network/"},"Discord")," server."))}h.isMDXComponent=!0}}]);