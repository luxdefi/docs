"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5906],{4259:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var a=n(85893),r=n(11151);const o={},s="HardhatConfigAfterBalance.js",c={id:"deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes/hardhatConfigAfterBalance.js",title:"HardhatConfigAfterBalance.js",description:"",source:"@site/docs/deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes/hardhatConfigAfterBalance.js.md",sourceDirName:"deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes",slug:"/deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes/hardhatConfigAfterBalance.js",permalink:"/deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes/hardhatConfigAfterBalance.js",draft:!1,unlisted:!1,editUrl:"https://github.com/luxdefi/docs/edit/main/docs/deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes/hardhatConfigAfterBalance.js.md",tags:[],version:"current",frontMatter:{}},d={},i=[];function l(e){const t={code:"code",h1:"h1",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"hardhatconfigafterbalancejs",children:"HardhatConfigAfterBalance.js"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:'require("@nomicfoundation/hardhat-toolbox")\n/* Import task from hardhat config */\nconst { task } = require("hardhat/config")\n\n/* Import deploy function */\nrequire("./scripts/deploy")\n/* Import balance function */\nrequire("./scripts/balance")\n\n/* Create deploy task */\ntask(\n  "deploy",\n  "Deploy bridges on both networks and deploy LuxToken, also update the admins"\n).setAction(async (taskArgs, hre) => {\n  await deploy().catch((error) => {\n    console.error(error)\n    process.exitCode = 1\n  })\n})\n\n/* Create balance task  */\ntask("balance", "Get token balance from a network")\n  /* Add `from` parameter indication the used network which is either lux or subnet */\n  .addParam("from", "Network to get balance from")\n  .setAction(async (taskArgs, hre) => {\n    await balance(taskArgs.from).catch((error) => {\n      console.error(error)\n      process.exitCode = 1\n    })\n  })\n\n/** @type import(\'hardhat/config\').HardhatUserConfig */\nmodule.exports = {\n  solidity: "0.8.9",\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>s});var a=n(67294);const r={},o=a.createContext(r);function s(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);