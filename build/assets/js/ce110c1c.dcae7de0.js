"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[7392],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(n),c=o,m=p["".concat(l,".").concat(c)]||p[c]||h[c]||i;return n?a.createElement(m,r(r({ref:t},d),{},{components:n})):a.createElement(m,r({ref:t},d))}));function c(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var u=2;u<i;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4249:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return h}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],s={},l="Deploying Subnets on Production Infrastructure",u={unversionedId:"subnets/deploying-subnets-on-prod",id:"subnets/deploying-subnets-on-prod",title:"Deploying Subnets on Production Infrastructure",description:"Introduction",source:"@site/docs/subnets/deploying-subnets-on-prod.md",sourceDirName:"subnets",slug:"/subnets/deploying-subnets-on-prod",permalink:"/subnets/deploying-subnets-on-prod",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/subnets/deploying-subnets-on-prod.md",tags:[],version:"current",frontMatter:{},sidebar:"subnets",previous:{title:"Create an EVM Subnet on Fuji Testnet",permalink:"/subnets/create-a-fuji-subnet"},next:{title:"Run a Mainnet Node on DeFi Kingdoms Subnet",permalink:"/subnets/setup-dfk-node"}},d={},h=[{value:"Introduction",id:"introduction",level:2},{value:"Node Setup",id:"node-setup",level:2},{value:"Server OS",id:"server-os",level:3},{value:"Hardware Specification",id:"hardware-specification",level:3},{value:"Server Location",id:"server-location",level:3},{value:"Local Servers",id:"local-servers",level:4},{value:"Cloud Providers",id:"cloud-providers",level:4},{value:"Number of Validators",id:"number-of-validators",level:3},{value:"Node Bootstrap",id:"node-bootstrap",level:3},{value:"State Sync",id:"state-sync",level:4},{value:"Database Copy",id:"database-copy",level:4},{value:"Subnet Deploy",id:"subnet-deploy",level:2},{value:"Ledger HW Wallet",id:"ledger-hw-wallet",level:3},{value:"Genesis File",id:"genesis-file",level:3},{value:"Subnet-CLI Wizard",id:"subnet-cli-wizard",level:3},{value:"Validator Configuration",id:"validator-configuration",level:2},{value:"Subnet Whitelisting",id:"subnet-whitelisting",level:3},{value:"Subnet Bootstrapping",id:"subnet-bootstrapping",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Managing Validation",id:"managing-validation",level:3},{value:"Conclusion",id:"conclusion",level:2}],p={toc:h};function c(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"deploying-subnets-on-production-infrastructure"},"Deploying Subnets on Production Infrastructure"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"After architecting your Subnet environment on the ",(0,i.kt)("a",{parentName:"p",href:"/subnets/create-a-local-subnet"},"local machine"),", proving the design and testing it out on ",(0,i.kt)("a",{parentName:"p",href:"/subnets/create-a-fuji-subnet"},"the testnet"),", eventually you will need to deploy your Subnet to production environment. Running a Subnet in production is much more involved than local and testnet deploys, as your Subnet will have to take care of real world usage, maintaining uptime, upgrades and all of that in a potentially adversarial environment. The purpose of this document is to point out a set of general considerations and propose potential solutions to them."),(0,i.kt)("p",null,"The architecture of the environment your particular Subnet will use will be greatly influenced by the type of load and activity your Subnet is designed to support so your solution will most likely differ from what we propose here. Still, it might be useful to follow along, to build up the intuition for the type of questions you will need to consider."),(0,i.kt)("h2",{id:"node-setup"},"Node Setup"),(0,i.kt)("p",null,"Lux nodes are essential elements for running your Subnet in production. At a minimum, your Subnet will need validator nodes, potentially also nodes that act as RPC servers, indexers or explorers. Running a node is basically running an instance of ",(0,i.kt)("a",{parentName:"p",href:"/nodes/"},"LuxGo")," on a server."),(0,i.kt)("h3",{id:"server-os"},"Server OS"),(0,i.kt)("p",null,"Although LuxGo can run on a MacOS or a Windows computer, we strongly recommend running nodes on computers running Linux as they are designed specifically for server loads and all the tools and utilities needed for administering a server are native to Linux."),(0,i.kt)("h3",{id:"hardware-specification"},"Hardware Specification"),(0,i.kt)("p",null,"For running LuxGo as a validator on the Primary Network the recommended configuration is as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"CPU: Equivalent of 8 AWS vCPU"),(0,i.kt)("li",{parentName:"ul"},"RAM: 16 GiB"),(0,i.kt)("li",{parentName:"ul"},"Storage: 1TB with at least 3000 IOPS"),(0,i.kt)("li",{parentName:"ul"},"OS: Ubuntu 18.04/20.04"),(0,i.kt)("li",{parentName:"ul"},"Network: Reliable IPv4 or IPv6 network connection, with an open public port")),(0,i.kt)("p",null,"That is the configuration sufficient for running a Primary Network node. Any resource requirements for your Subnet come on top of this, so you should not go below this configuration, but may need to step up the specification if you expect your Subnet to handle a significant amount of transactions."),(0,i.kt)("p",null,"Be sure to set up monitoring of resource consumption for your nodes because resource exhaustion may cause your node to slow down or even halt, which may severely impact your Subnet negatively."),(0,i.kt)("h3",{id:"server-location"},"Server Location"),(0,i.kt)("p",null,"You can run a node on a physical computer that you own and run, or on a cloud instance. Although running on your own HW may seem like a good idea, unless you have a sizeable DevOps 24/7 staff we recommend using cloud service providers as they generally provide reliable computing resources that you can count on to be properly maintained and monitored."),(0,i.kt)("h4",{id:"local-servers"},"Local Servers"),(0,i.kt)("p",null,"If you plan on running nodes on your own hardware, make sure they satisfy the minimum HW specification as outlined earlier. Pay close attention to proper networking setup, making sure the p2p port (9651) is accessible and public IP properly configured on the node. Make sure the node is connected to the network physically (not over WiFi), and that the router is powerful enough to handle a couple of thousands of persistent TCP connections and that network bandwidth can accommodate at least 5Mbps of steady upstream and downstream network traffic."),(0,i.kt)("p",null,"When installing the LuxGo node on the machines, unless you have a dedicated DevOps staff that will take care of node setup and configuration, we recommend using the ",(0,i.kt)("a",{parentName:"p",href:"/nodes/build/set-up-node-with-installer"},"installer script")," to set up the nodes. It will abstract most of the setup process for you, set up the node as a system service and will enable easy node upgrades."),(0,i.kt)("h4",{id:"cloud-providers"},"Cloud Providers"),(0,i.kt)("p",null,"There are a number of different cloud providers. We have documents that show how to set up a node on the most popular ones:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/nodes/build/setting-up-an-lux-node-with-amazon-web-services-aws"},"Amazon Web Services")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/nodes/build/set-up-an-lux-node-with-microsoft-azure"},"Azure")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/nodes/build/set-up-an-lux-node-with-google-cloud-platform"},"Google Cloud Platform"))),(0,i.kt)("p",null,"There is a whole range of other cloud providers that may offer lower prices or better deals for your particular needs, so it makes sense to shop around."),(0,i.kt)("p",null,"Once you decide on a provider (or providers), if they offer instances in multiple data centers, it makes sense to spread the nodes geographically since that provides a better resilience and stability against outages."),(0,i.kt)("h3",{id:"number-of-validators"},"Number of Validators"),(0,i.kt)("p",null,"Number of validators on a subnet is a crucial decision you need to make. For stability and decentralization, you should strive to have as many validators as possible."),(0,i.kt)("p",null,"For stability reasons our recommendation is to have ",(0,i.kt)("strong",{parentName:"p"},"at least")," 5 full validators on your Subnet. If you have less than 5 validators your Subnet liveness will be at risk whenever a single validator goes offline, and if you have less than 4 even one offline node will halt your Subnet."),(0,i.kt)("p",null,"You should be aware that 5 is the minimum we recommend. But, from a decentralization standpoint having more validators is always better as it increases the stability of your Subnet and makes it more resilient to both technical failures and adversarial action. In a nutshell: run as many Subnet validators as you can."),(0,i.kt)("p",null,"Considering that at times you will have to take nodes offline, for routine maintenance (at least for node upgrades which happen with some regularity) or unscheduled outages and failures you need to be able to routinely handle at least one node being offline without your Subnet performance degrading."),(0,i.kt)("h3",{id:"node-bootstrap"},"Node Bootstrap"),(0,i.kt)("p",null,"Once you set up the server and install LuxGo on them, nodes will need to boostrap (sync with the network). This is a lengthy process, as the nodes need to catch up and replay all the network activity since the genesis up to the present moment. Full bootstrap on a node can take more than a week, but there are ways to shorten that process, depending on your circumstances."),(0,i.kt)("h4",{id:"state-sync"},"State Sync"),(0,i.kt)("p",null,"If the nodes you will be running as validators don't need to have the full transaction history, then you can use ",(0,i.kt)("a",{parentName:"p",href:"/nodes/maintain/chain-config-flags#state-sync-enabled-boolean"},"state sync"),". With this flag enabled, instead of replaying the whole history to get to the current state, nodes simply download only the current state from other network peers, shortening the bootstrap process from multiple days to a couple of hours. If the nodes will be used for subnet validation exclusively, you can use the state sync without any issues. Currently, state sync is only available for the C-Chain, but since the bulk of the transactions on the platform happen there it still has a significant impact on the speed of bootstrapping."),(0,i.kt)("h4",{id:"database-copy"},"Database Copy"),(0,i.kt)("p",null,"Good way to cut down on bootstrap times on multiple nodes is database copy. Database is identical across nodes, and as such can safely be copied from one node to another. Just make sure to that the node is not running during the copy process, as that can result in a corrupted database. Database copy procedure is explained in detail ",(0,i.kt)("a",{parentName:"p",href:"/nodes/maintain/node-backup-and-restore#database"},"here"),"."),(0,i.kt)("p",null,"Please make sure you don't reuse any node's node-id by accident, especially don't restore another node's ID, see ",(0,i.kt)("a",{parentName:"p",href:"/nodes/maintain/node-backup-and-restore#nodeid"},"here")," for details. Each node must has its own unique node id, otherwise, the nodes sharing the same id will not behave correctly, which will impact your validator's uptime, thus staking rewards, and the stability of your Subnet."),(0,i.kt)("h2",{id:"subnet-deploy"},"Subnet Deploy"),(0,i.kt)("p",null,"Once you have the nodes set up you are ready to deploy the actual Subnet. Right now, the recommended tool to do that is ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/subnet-cli"},"Subnet-CLI"),"."),(0,i.kt)("p",null,"Instructions for using the Subnet-CLI can be found ",(0,i.kt)("a",{parentName:"p",href:"/subnets/subnet-cli"},"here"),". We will highlight the main steps below."),(0,i.kt)("h3",{id:"ledger-hw-wallet"},"Ledger HW Wallet"),(0,i.kt)("p",null,"When creating the Subnet, you will be required to have a private key that will control the administrative functions of the Subnet (adding validators, managing the configuration). Needless to say, whoever has this private key has complete control over the Subnet and the way it runs. Therefore, protecting that key is of the utmost operational importance. Which is why we strongly recommend using a hardware wallet such as a ",(0,i.kt)("a",{parentName:"p",href:"https://www.ledger.com/"},"Ledger HW Wallet")," to store and access that private key."),(0,i.kt)("p",null,"Of course, Subnet-CLI supports the usage of a Ledger HW wallet. Take advantage of that because losing control of the managing would be catastrophic. General instruction on how to use a Ledger device with Lux can be found ",(0,i.kt)("a",{parentName:"p",href:"https://support.lux.network/en/articles/6150237-how-to-use-a-ledger-nano-s-or-nano-x-with-lux"},"here"),"."),(0,i.kt)("h3",{id:"genesis-file"},"Genesis File"),(0,i.kt)("p",null,"The structure that defines the most important parameters in a Subnet is found in the genesis file, which is a ",(0,i.kt)("inlineCode",{parentName:"p"},"json")," formatted, human-readable file. Describing the contents and the options available in the genesis file is beyond the scope of this document, and if you're ready to deploy your Subnet to production you probably have it mapped out already."),(0,i.kt)("p",null,"If you want to review, we have a description of the genesis file in our document on ",(0,i.kt)("a",{parentName:"p",href:"/subnets/customize-a-subnet"},"customizing EVM Subnets"),"."),(0,i.kt)("h3",{id:"subnet-cli-wizard"},"Subnet-CLI Wizard"),(0,i.kt)("p",null,"Creating a Subnet is a multistep process. You need to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"create a ",(0,i.kt)("inlineCode",{parentName:"li"},"VMID")),(0,i.kt)("li",{parentName:"ul"},"create the Subnet"),(0,i.kt)("li",{parentName:"ul"},"create the blockchain in the Subnet"),(0,i.kt)("li",{parentName:"ul"},"add validators to Subnet")),(0,i.kt)("p",null,"Fortunately, to minimize potential errors and streamline the process Subnet-CLi has a Wizard command that does most of the work for you snd guides you through the process."),(0,i.kt)("p",null,"Before running the wizard you will need to ",(0,i.kt)("a",{parentName:"p",href:"/subnets/subnet-cli#subnet-cli-create-vmid"},"create the ",(0,i.kt)("inlineCode",{parentName:"a"},"VMID")),", have the validator NodeIDs ready, as well as the genesis ",(0,i.kt)("inlineCode",{parentName:"p"},"json")," file."),(0,i.kt)("p",null,"An example of wizard command line could look like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"subnet-cli wizard \\\n--ledger \\\n--node-ids=NodeID-741aqvs6R4iuHDyd1qT1NrFTmsgu78dc4,NodeID-K7Y79oAmBntAcdkyY1CLxCim8QuqcZbBp,NodeID-C3EY6u4v7DDi6YEbYf1wmXdvkEFXYuXNW,NodeID-AiLGeqQfh9gZY3Y8wLMD15tuJtsJHq5Qi \\\n--vm-genesis-path=prod-genesis.json \\\n--vm-id=tGas3T58KzdjLHhBDMnH2TvrddhqTji5iZAMZ3RXs2NLpSnhH \\\n--chain-name=prodSubnet\n")),(0,i.kt)("p",null,"Please refer to the Subnet-CLI docs for ",(0,i.kt)("a",{parentName:"p",href:"/subnets/subnet-cli#subnet-cli-wizard"},"detailed instructions"),"."),(0,i.kt)("p",null,"If the wizard completes correctly your Subnet will now be created, deployed and available to see in ",(0,i.kt)("a",{parentName:"p",href:"https://subnets.lux.network/subnets"},"the Subnet explorer"),". Congrats!"),(0,i.kt)("p",null,"You can also use Subnet-CLI to manage your Subnet after the initial deploy, to add new validators, renew ones that expired and so on. Familiarize yourself with Subnet-CLI, you be using it often!"),(0,i.kt)("h2",{id:"validator-configuration"},"Validator Configuration"),(0,i.kt)("p",null,"Running nodes as Subnet validators warrants some additional considerations, above those when running a regular node or a Primary Network-only validator."),(0,i.kt)("h3",{id:"subnet-whitelisting"},"Subnet Whitelisting"),(0,i.kt)("p",null,"For a node to join a subnet, there are two prerequisites:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Primary Network validation"),(0,i.kt)("li",{parentName:"ul"},"Subnet whitelisting")),(0,i.kt)("p",null,"Primary Network validation means that a node cannot join a Subnet as a validator before becoming a validator on the Primary Network itself. So, after you add the node to the validator set on the Primary Network, node can join a Subnet. Of course, this is valid only for Subnet validators, if you need a non-validating Subnet node, then the node doesn't need to be a validator at all."),(0,i.kt)("p",null,"To have a node start syncing the Subnet, you need to add the ",(0,i.kt)("inlineCode",{parentName:"p"},"--whitelisted-subnets")," command line option, or ",(0,i.kt)("inlineCode",{parentName:"p"},"whitelisted-subnets")," key to the node config file (found at ",(0,i.kt)("inlineCode",{parentName:"p"},".luxd/configs/node.json")," for installer-script created nodes). A single node can sync multiple subnets, so you can add them as a comma-separated list of subnet IDs."),(0,i.kt)("p",null,"An example of a node config syncing two subnets:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dynamic-public-ip": "opendns",\n  "http-host": "",\n  "whitelisted-subnets": "28nrH5T2BMvNrWecFcV3mfccjs6axM1TVyqe79MCv2Mhs8kxiY,Ai42MkKqk8yjXFCpoHXw7rdTWSHiKEMqh5h8gbxwjgkCUfkrk"\n}\n')),(0,i.kt)("p",null,"But that is not all. Besides the whitelist containing the SubnetID, node also needs to have the plugin that contains the VM instance the blockchain in the Subnet will run. You should have already been through that on testnet and Fuji, but for a refresher, you can refer to ",(0,i.kt)("a",{parentName:"p",href:"/subnets/create-a-fuji-subnet"},"this tutorial"),"."),(0,i.kt)("p",null,"So, name the VM plugin binary as the ",(0,i.kt)("inlineCode",{parentName:"p"},"VMID")," of the Subnet chain and place it in the ",(0,i.kt)("inlineCode",{parentName:"p"},"plugins")," directory where the node binary is (for installer-script created nodes that would be ",(0,i.kt)("inlineCode",{parentName:"p"},"~/lux-node/plugins/"),")."),(0,i.kt)("h3",{id:"subnet-bootstrapping"},"Subnet Bootstrapping"),(0,i.kt)("p",null,"After you have added the whitelist and placed the VM binary in the correct directory, your node is ready to start syncing with the Subnet. Restart the node and monitor the log output. You should notice something similar to:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Jul 30 18:26:31 node-fuji luxd[1728308]: [07-30|18:26:31.422] INFO chains/manager.go:262 creating chain:\nJul 30 18:26:31 node-fuji luxd[1728308]:     ID: 2ebCneCbwthjQ1rYT41nhd7M76Hc6YmosMAQrTFhBq8qeqh6tt\nJul 30 18:26:31 node-fuji luxd[1728308]:     VMID:srEXiWaHuhNyGwPUi444Tu47ZEDwxTWrbQiuD7FmgSAQ6X7Dy\n")),(0,i.kt)("p",null,"That means the node has detected the subnet, and is attempting to initialize it and start bootstrapping the Subnet. It might take some time (if there are already transactions on the Subnet), and eventually it will finish the bootstrap with a message like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Jul 30 18:27:21 node-fuji luxd[1728308]: [07-30|18:27:21.055] INFO <2ebCneCbwthjQ1rYT41nhd7M76Hc6YmosMAQrTFhBq8qeqh6tt Chain> snowman/transitive.go:333 consensus starting with J5wjmotMCrM2DKxeBTBPfwgCPpvsjtuqWNozLog2TomTjSuGK as the last accepted block\n")),(0,i.kt)("p",null,"That means the node has successfully bootstrapped the Subnet and is now in sync. If the node is one of the validators, it will start validating any transactions that get posted to the Subnet."),(0,i.kt)("h3",{id:"monitoring"},"Monitoring"),(0,i.kt)("p",null,"If you want to inspect the process of Subnet syncing, you can use the RPC call to check for the ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxd/apis/p-chain#platformgetblockchainstatus"},"blockchain status"),"."),(0,i.kt)("p",null,"For a more in-depth look into Subnet operation, check out the blockchain log. By default, the log can be found in ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.luxd/logs/ChainID.log")," where you replace the ",(0,i.kt)("inlineCode",{parentName:"p"},"ChainID")," with the actual ID of the blockchain in your Subnet."),(0,i.kt)("p",null,"For an even more thorough (and pretty!) insight into how the node and the Subnet is behaving, you can install the Prometheus+Grafana monitoring system with the custom dashboards for the regular node operation, as well as a dedicated dashboard for Subnet data. Check out the ",(0,i.kt)("a",{parentName:"p",href:"/nodes/maintain/setting-up-node-monitoring"},"tutorial")," for information on how to set it up."),(0,i.kt)("h3",{id:"managing-validation"},"Managing Validation"),(0,i.kt)("p",null,"On Lux all validations are limited in time and can range from two weeks up to one year. Furthermore, subnet validations are always a subset of the Primary Network validation period (must be shorter or the same). That means that periodically your validators will expire and you will need to submit a new validation transaction for both the Primary Network and your Subnet."),(0,i.kt)("p",null,"Unless managed properly and in a timely manner, that can be disruptive for your Subnet (if all validators expire at the same time your Subnet will halt). To avoid that, keep notes on when a particular validation is set to expire and be ready to renew it as soon as possible. Also, when initially setting up the nodes, make sure to stagger the validator expiry so they don't all expire on the same date. Setting end dates at least a day apart is a good practice, as well as setting reminders for each expiry."),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"Hopefully, by reading this document you have a better picture of the requirements and considerations you need to make when deploying your Subnet to production and you are now better prepared to launch your Subnet successfully."),(0,i.kt)("p",null,"Keep in mind, running a Subnet in production is not a one-and-done kind of situation, it is in fact running a fleet of servers 24/7. And as with any real time service, you should have a robust logging, monitoring and alerting systems to constantly check the nodes and Subnet health and alert you if anything out of the ordinary happens."),(0,i.kt)("p",null,"If you have any questions, doubts or would like to chat, please check out our ",(0,i.kt)("a",{parentName:"p",href:"https://chat.lux.network/"},"Discord server"),", where we host a dedicated ",(0,i.kt)("inlineCode",{parentName:"p"},"#subnet-chat")," channel dedicated to talking about all things Subnet."),(0,i.kt)("p",null,"We hope to see you there!"))}c.isMDXComponent=!0}}]);