"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[9365],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(n),h=r,f=p["".concat(l,".").concat(h)]||p[h]||u[h]||s;return n?a.createElement(f,i(i({ref:t},d),{},{components:n})):a.createElement(f,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3204:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var a=n(7462),r=n(3366),s=(n(7294),n(3905)),i=["components"],o={},l="Fuji Workflow",c={unversionedId:"quickstart/fuji-workflow",id:"quickstart/fuji-workflow",title:"Fuji Workflow",description:"Introduction",source:"@site/docs/quickstart/fuji-workflow.md",sourceDirName:"quickstart",slug:"/quickstart/fuji-workflow",permalink:"/quickstart/fuji-workflow",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/quickstart/fuji-workflow.md",tags:[],version:"current",frontMatter:{},sidebar:"quickStart",previous:{title:"Fund a Local Test Network",permalink:"/quickstart/fund-a-local-test-network"},next:{title:"Transfer LUX Tokens Between Chains",permalink:"/quickstart/cross-chain-transfers"}},d={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Set up Fuji Network on Metamask (optional)",id:"set-up-fuji-network-on-metamask-optional",level:2},{value:"Generate a Mnemonic",id:"generate-a-mnemonic",level:2},{value:"Derive Addresses",id:"derive-addresses",level:2},{value:"Generate private keys from a mnemonic",id:"generate-private-keys-from-a-mnemonic",level:4},{value:"Get a Drip from the Fuji Faucet",id:"get-a-drip-from-the-fuji-faucet",level:2},{value:"Check the Transaction Details",id:"check-the-transaction-details",level:3},{value:"Get the Balance",id:"get-the-balance",level:3},{value:"Sending LUX",id:"sending-lux",level:2},{value:"Verify Success",id:"verify-success",level:3},{value:"Get the Balance",id:"get-the-balance-1",level:4},{value:"Sign into the Web Wallet",id:"sign-into-the-web-wallet",level:3},{value:"Summary",id:"summary",level:2},{value:"Resources",id:"resources",level:2},{value:"Faucet",id:"faucet",level:3},{value:"Wallet",id:"wallet",level:3},{value:"Explorer",id:"explorer",level:3},{value:"Public API",id:"public-api",level:3},{value:"LuxJS Examples",id:"luxjs-examples",level:3}],p={toc:u};function h(e){var t=e.components,o=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"fuji-workflow"},"Fuji Workflow"),(0,s.kt)("h2",{id:"introduction"},"Introduction"),(0,s.kt)("p",null,"Fuji is the Lux network's test network. You can use it to test your dapp or smart contract after you've developed it locally. (You can use ",(0,s.kt)("a",{parentName:"p",href:"/subnets/network-runner"},"Lux Network Runner")," to test things locally.) Fuji is typically on the same version as the Lux Mainnet, but sometimes it is running an unreleased version of LuxGo. In general, you can expect Fuji's behavior to be about the same as Lux Mainnet. Tools such as a explorers and wallets should work with the Fuji Testnet."),(0,s.kt)("p",null,"In this tutorial, we\u2019ll go through an example Fuji workflow to show how it can be used. We'll do the following:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Set up Fuji network on Metamask (optional)"),(0,s.kt)("li",{parentName:"ol"},"Generate a 24 word english mnemonic via LuxJS"),(0,s.kt)("li",{parentName:"ol"},"Derive external C-Chain addresses via LuxJS"),(0,s.kt)("li",{parentName:"ol"},"Get LUX from the Fuji faucet"),(0,s.kt)("li",{parentName:"ol"},"Send LUX via ethersJS"),(0,s.kt)("li",{parentName:"ol"},"Examine the resulting transaction on the Lux Explorer"),(0,s.kt)("li",{parentName:"ol"},"Use a private key derived from a mnemonic to sign into the web wallet")),(0,s.kt)("h2",{id:"set-up-fuji-network-on-metamask-optional"},"Set up Fuji Network on Metamask (optional)"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Network Name"),": Lux FUJI C-Chain"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"New RPC URL"),": ",(0,s.kt)("a",{parentName:"li",href:"https://api.lux-test.network/ext/bc/C/rpc"},"https://api.lux-test.network/ext/bc/C/rpc")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"ChainID"),": ",(0,s.kt)("inlineCode",{parentName:"li"},"43113")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Symbol"),": ",(0,s.kt)("inlineCode",{parentName:"li"},"LUX")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Explorer"),": ",(0,s.kt)("a",{parentName:"li",href:"https://testnet.snowtrace.io/"},"https://testnet.snowtrace.io/"))),(0,s.kt)("h2",{id:"generate-a-mnemonic"},"Generate a Mnemonic"),(0,s.kt)("p",null,"To begin, we'll create a mnemonic phrase with ",(0,s.kt)("a",{parentName:"p",href:"/apis/luxjs/"},"LuxJS"),". Mnemonics enable us to encode strong security into a human-readable phrase. LuxJS supports 10 languages including English, Japanese, Spanish, Italian, French, Korean, Czech, Portuguese, Chinese Simplified and Chinese Traditional."),(0,s.kt)("p",null,"First, generate a 24 word english ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki"},"BIP39"),"-compliant mnemonic via LuxJS."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Mnemonic } from "lux"\nconst mnemonic: Mnemonic = Mnemonic.getInstance()\nconst strength: number = 256\nconst wordlist = mnemonic.getWordlists("english") as string[]\nconst m: string = mnemonic.generateMnemonic(strength, randomBytes, wordlist)\nconsole.log(m)\n// "chimney asset heavy ecology accuse window gold weekend annual oil emerge alley retreat rabbit seed advance define off amused board quick wealth peasant disorder"\n')),(0,s.kt)("h2",{id:"derive-addresses"},"Derive Addresses"),(0,s.kt)("p",null,"After generating a mnemonic we can use LuxJS to derive ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki"},"BIP32"),"-compliant hierarchical deterministic (HD) keypairs."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'import HDNode from "lux/dist/utils/hdnode"\nimport { Lux, Mnemonic, Buffer } from "lux"\nimport { EVMAPI, KeyChain } from "lux/dist/apis/evm"\nimport { ethers } from "ethers"\n\nconst ip: string = "api.lux-test.network"\nconst port: number = 443\nconst protocol: string = "https"\nconst networkID: number = 5\nconst lux: Lux = new Lux(ip, port, protocol, networkID)\nconst cchain: EVMAPI = lux.CChain()\n\nconst mnemonic: Mnemonic = Mnemonic.getInstance()\nconst m: string =\n  "chimney asset heavy ecology accuse window gold weekend annual oil emerge alley retreat rabbit seed advance define off amused board quick wealth peasant disorder"\nconst seed: Buffer = mnemonic.mnemonicToSeedSync(m)\nconst hdnode: HDNode = new HDNode(seed)\n\nconst keyChain: KeyChain = cchain.newKeyChain()\n\nconst cAddresses: string[] = []\n\nfor (let i: number = 0; i <= 2; i++) {\n  const child: HDNode = hdnode.derive(`m/44\'/60\'/0\'/0/${i}`)\n  keyChain.importKey(child.privateKey)\n  const cchainAddress = ethers.utils.computeAddress(child.privateKey)\n  cAddresses.push(cchainAddress)\n}\nconsole.log(cAddresses)\n// [\n//   \'0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559\',\n//   \'0x25d83F090D842c1b4645c1EFA46B15093d4CaC7C\',\n//   \'0xa14dFb7d8593c44a47A07298eCEA774557036ff3\'\n// ]\n')),(0,s.kt)("h4",{id:"generate-private-keys-from-a-mnemonic"},"Generate private keys from a mnemonic"),(0,s.kt)("p",null,"As long as you have the mnemonic phrase, you can re-generate your private keys and the addresses they control."),(0,s.kt)("p",null,"For example, if you want to generate the private keys for the first 3 address in the C Chain keychain:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://testnet.snowtrace.io/address/0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559"},"0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://testnet.snowtrace.io/address/0x25d83F090D842c1b4645c1EFA46B15093d4CaC7C"},"0x25d83F090D842c1b4645c1EFA46B15093d4CaC7C")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://testnet.snowtrace.io/address/0xa14dFb7d8593c44a47A07298eCEA774557036ff3"},"0xa14dFb7d8593c44a47A07298eCEA774557036ff3"))),(0,s.kt)("p",null,"you might update the example script above to the following:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"const cAddresses: string[] = []\nconst privateKeys: string[] = []\nfor (let i: number = 0; i <= 2; i++) {\n  // Deriving the _i_th external BIP44 C-Chain address\n  const child: HDNode = hdnode.derive(`m/44'/60'/0'/0/${i}`)\n  keyChain.importKey(child.privateKey)\n  // Converting the BIP44 addresses to hexadecimal addresses\n  const cchainAddress = ethers.utils.computeAddress(child.privateKey)\n  privateKeys.push(child.privateKey.toString(\"hex\"))\n  cAddresses.push(cchainAddress)\n}\nconsole.log({ cAddresses, privateKeys })\n// {\n//   cAddresses: [\n//     '0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559',\n//     '0x25d83F090D842c1b4645c1EFA46B15093d4CaC7C',\n//     '0xa14dFb7d8593c44a47A07298eCEA774557036ff3'\n//   ],\n//   privateKeys: [\n//     'cd30aef1af167238c627593537e162ecf5aad1d4ab4ea98ed2f96ad4e47006dc',\n//     'b85479b26bc8fbada4737e90ab2133204f2fa2a9ea33c1e0de4452cbf8fa3be4',\n//     'c72e18ea0f9aa5457396e3bf810e9de8df0177c8e4e5bf83a85f871512d645a9'\n//   ]\n// }\n")),(0,s.kt)("h2",{id:"get-a-drip-from-the-fuji-faucet"},"Get a Drip from the Fuji Faucet"),(0,s.kt)("p",null,'We can get a "drip" of LUX from the Fuji faucet. Paste the address into the ',(0,s.kt)("a",{parentName:"p",href:"https://faucet.lux.network"},"Fuji faucet website"),". These LUX are for the Fuji Testnet and have no monetary value."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Requesting LUX",src:n(8086).Z,width:"965",height:"890"})),(0,s.kt)("p",null,"The faucet will send some LUX to the address and return a transaction ID (txID). This txID can be used with the Fuji Testnet Explorer to learn more about the transaction."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Receiving LUX",src:n(7040).Z,width:"1000",height:"893"})),(0,s.kt)("h3",{id:"check-the-transaction-details"},"Check the Transaction Details"),(0,s.kt)("p",null,"The txID, ",(0,s.kt)("inlineCode",{parentName:"p"},"0x1419b04559bf140ab82216f7696110936fb7d4bc1f147e3b85fef7ca1008a19e"),", can be seen on the ",(0,s.kt)("a",{parentName:"p",href:"https://testnet.snowtrace.io/tx/0x1419b04559bf140ab82216f7696110936fb7d4bc1f147e3b85fef7ca1008a19e"},"Fuji Testnet Explorer"),". Lux also has a ",(0,s.kt)("a",{parentName:"p",href:"https://explorer.lux.network"},"Mainnet Explorer"),"."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Transaction details",src:n(8211).Z,width:"880",height:"564"})),(0,s.kt)("h3",{id:"get-the-balance"},"Get the Balance"),(0,s.kt)("p",null,"We can also use the Fuji Explorer to get the balance for the 1st address\u2014",(0,s.kt)("a",{parentName:"p",href:"https://explorer.lux-test.network/address/0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559"},"0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559"),"."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"1st derived address balance",src:n(8471).Z,width:"1386",height:"459"})),(0,s.kt)("p",null,"Alternatively, we can use ",(0,s.kt)("a",{parentName:"p",href:"https://docs.ethers.io/v5/"},"ethersJS")," to get the balance."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'const ethers = require("ethers")\nconst network = "https://api.lux-test.network/ext/bc/C/rpc"\nconst provider = ethers.getDefaultProvider(network)\nconst address = "0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559"\n\nconst main = async (): Promise<any> => {\n  provider.getBalance(address).then((balance) => {\n    // convert a currency unit from wei to ether\n    const balanceInLux = ethers.utils.formatEther(balance)\n    console.log(`balance: ${balanceInLux} LUX`)\n    // balance: 2 LUX\n  })\n}\n\nmain()\n')),(0,s.kt)("h2",{id:"sending-lux"},"Sending LUX"),(0,s.kt)("p",null,"The faucet sent 2 LUX to the first address we generated. Let's send LUX from the 1st address to the 2nd address."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'// import ethers.js\nimport { ethers } from "ethers"\n// network: using the Fuji testnet\nconst network = "https://api.lux-test.network/ext/bc/C/rpc"\n// provider: establish and RPC connection to the network\nconst provider = new ethers.providers.JsonRpcProvider(network)\n\n// Sender private key:\n// corresponding address 0x0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559\nlet privateKey =\n  "cd30aef1af167238c627593537e162ecf5aad1d4ab4ea98ed2f96ad4e47006dc"\n// Create a wallet instance\nlet wallet = new ethers.Wallet(privateKey, provider)\n// Receiver Address\nlet receiverAddress = "0x25d83F090D842c1b4645c1EFA46B15093d4CaC7C"\n// LUX amount to send\nlet amountInLux = "0.01"\n// Create a transaction object\nlet tx = {\n  to: receiverAddress,\n  // Convert currency unit from ether to wei\n  value: ethers.utils.parseEther(amountInLux),\n}\n// Send a transaction\nwallet.sendTransaction(tx).then((txObj) => {\n  console.log(`"tx, https://testnet.snowtrace.io/tx/${txObj.hash}`)\n  // A transaction result can be checked in a snowtrace with a transaction link which can be obtained here.\n})\n')),(0,s.kt)("h3",{id:"verify-success"},"Verify Success"),(0,s.kt)("p",null,"We can verify that the transaction, ",(0,s.kt)("inlineCode",{parentName:"p"},"0x3a5f4198b3be8d24b272f8255912aae4dcf2fb1f97f70d1787434de7b3097aac"),", was successful using the Fuji Testnet Explorer. The transaction can be seen ",(0,s.kt)("a",{parentName:"p",href:"https://testnet.snowtrace.io/tx/0x3a5f4198b3be8d24b272f8255912aae4dcf2fb1f97f70d1787434de7b3097aac"},"here"),"."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Transaction details",src:n(6014).Z,width:"875",height:"559"})),(0,s.kt)("h4",{id:"get-the-balance-1"},"Get the Balance"),(0,s.kt)("p",null,"We can also use the Fuji Explorer to get the balance for the 2nd address\u2014",(0,s.kt)("a",{parentName:"p",href:"https://testnet.snowtrace.io/address/0x25d83F090D842c1b4645c1EFA46B15093d4CaC7C"},"0x25d83F090D842c1b4645c1EFA46B15093d4CaC7C"),"."),(0,s.kt)("p",null,"Alternatively, we can use ethersJS to get the balance."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'const ethers = require("ethers")\nconst network = "https://api.lux-test.network/ext/bc/C/rpc"\nconst provider = ethers.getDefaultProvider(network)\nconst address = "0x25d83F090D842c1b4645c1EFA46B15093d4CaC7C"\n\nconst main = async (): Promise<any> => {\n  provider.getBalance(address).then((balance) => {\n    // convert a currency unit from wei to ether\n    const balanceInLux = ethers.utils.formatEther(balance)\n    console.log(`balance: ${balanceInLux} LUX`)\n    // balance: 0.02 LUX\n  })\n}\n\nmain()\n')),(0,s.kt)("h3",{id:"sign-into-the-web-wallet"},"Sign into the Web Wallet"),(0,s.kt)("p",null,"Lastly, we can ",(0,s.kt)("a",{parentName:"p",href:"#generate-private-keys-from-a-mnemonic"},"use the mnemonic to generate a private key")," to access the ",(0,s.kt)("a",{parentName:"p",href:"https://wallet.lux.network"},"Lux Web Wallet"),". We'll see that it has the LUX balance and that it derives the hexadecimal address from the private key."),(0,s.kt)("p",null,"Use the private key to access the Web Wallet."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Access the wallet",src:n(9929).Z,width:"377",height:"222"})),(0,s.kt)("p",null,"The balance is correct and the address is the 1st derived address."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Web wallet balance",src:n(7009).Z,width:"521",height:"283"})," ",(0,s.kt)("img",{alt:"3rd derived BIP44 address",src:n(2588).Z,width:"358",height:"280"})),(0,s.kt)("p",null,"We can repeat this login process using the private keys from the remaining 2 addresses in the ",(0,s.kt)("a",{parentName:"p",href:"#generate-private-keys-from-a-mnemonic"},"script above"),"."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Wallet derived addresses",src:n(8350).Z,width:"357",height:"282"})," ",(0,s.kt)("img",{alt:"Wallet derived addresses2",src:n(4204).Z,width:"358",height:"281"}),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("img",{alt:"Wallet derived addresses3",src:n(4572).Z,width:"964",height:"194"})),(0,s.kt)("h2",{id:"summary"},"Summary"),(0,s.kt)("p",null,"The Fuji Testnet plays a critical role in testing and QAing dapps, smart contracts and financial products before deploying to the Mainnet. Tooling like LuxJS, the public API, faucet, and explorer helps to ensure that your testing and QA environment is close to Mainnet so that you can be confident when you launch on Mainnet."),(0,s.kt)("h2",{id:"resources"},"Resources"),(0,s.kt)("p",null,"For additional and valuable resources please see below."),(0,s.kt)("h3",{id:"faucet"},"Faucet"),(0,s.kt)("p",null,"The ",(0,s.kt)("a",{parentName:"p",href:"https://faucet.lux.network"},"Fuji Faucet")," sends LUX to X-Chain or C-Chain addresses to help you test. (This testnet Lux has no value.)"),(0,s.kt)("h3",{id:"wallet"},"Wallet"),(0,s.kt)("p",null,"The ",(0,s.kt)("a",{parentName:"p",href:"https://wallet.lux.network"},"Lux Web Wallet")," is a simple, secure, non-custodial wallet for storing Lux assets. It supports Mainnet, Fuji and custom networks."),(0,s.kt)("h3",{id:"explorer"},"Explorer"),(0,s.kt)("p",null,"The Lux Explorer allows you to explore the network on ",(0,s.kt)("a",{parentName:"p",href:"https://explorer.lux.network"},"Mainnet")," and ",(0,s.kt)("a",{parentName:"p",href:"https://explorer.lux-test.network"},"Fuji"),"."),(0,s.kt)("h3",{id:"public-api"},"Public API"),(0,s.kt)("p",null,"See ",(0,s.kt)("a",{parentName:"p",href:"/apis/luxd/public-api-server"},"here.")),(0,s.kt)("h3",{id:"luxjs-examples"},"LuxJS Examples"),(0,s.kt)("p",null,"There are over ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/tree/master/examples"},"60 example LuxJS scripts")," which demonstrate how to assets and NFTs, send transactions, add validators and more."))}h.isMDXComponent=!0},8471:function(e,t,n){t.Z=n.p+"assets/images/faucet-fuji-wf-alt-balance-aff8e57e2d37fc8c3f3fcc2fc612d386.png"},7040:function(e,t,n){t.Z=n.p+"assets/images/faucet-fuji-wf-alt-receipt-08096d9bd16e8c571b098bceeda4fd71.png"},8211:function(e,t,n){t.Z=n.p+"assets/images/faucet-fuji-wf-alt-tx1-876eba60fd2507b1d26ac69d284bc114.png"},8086:function(e,t,n){t.Z=n.p+"assets/images/faucet-fuji-wf-alt-33f152785d7915f3f9c4d3e712dbc2e8.png"},9929:function(e,t,n){t.Z=n.p+"assets/images/fuji-wf-alt-enter-key-0f2a6f01fca372229d866d03725e1ce5.png"},6014:function(e,t,n){t.Z=n.p+"assets/images/fuji-wf-alt-tx-2-58e54a7ce13c35279d74ace7088c89e9.png"},8350:function(e,t,n){t.Z=n.p+"assets/images/fuji-wf-alt-wallet-address-2-f70e73a83ea9c796fb73a4d8fb60775e.png"},4204:function(e,t,n){t.Z=n.p+"assets/images/fuji-wf-alt-wallet-address-3-e00467df0915d8b5a2a74e21e20399a0.png"},2588:function(e,t,n){t.Z=n.p+"assets/images/fuji-wf-alt-wallet-address-e0da535b424e5d29d9dbc9936e0c3bc5.png"},4572:function(e,t,n){t.Z=n.p+"assets/images/fuji-wf-alt-wallet-addresses-8ed1c0fb517a2abd98f1b5de86d422ea.png"},7009:function(e,t,n){t.Z=n.p+"assets/images/fuji-wf-wallet-alt-info-b3c9a84bdc847ba4ea9782f040df0409.png"}}]);