"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[1e3],{3905:function(e,t,a){a.d(t,{Zo:function(){return h},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},h=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),c=p(a),u=r,k=c["".concat(s,".").concat(u)]||c[u]||m[u]||o;return a?n.createElement(k,i(i({ref:t},h),{},{components:a})):n.createElement(k,i({ref:t},h))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},9655:function(e,t,a){a.r(t),a.d(t,{assets:function(){return h},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],l={},s="Transfer LUX Tokens Between Chains",p={unversionedId:"quickstart/cross-chain-transfers",id:"quickstart/cross-chain-transfers",title:"Transfer LUX Tokens Between Chains",description:"Introduction",source:"@site/docs/quickstart/cross-chain-transfers.md",sourceDirName:"quickstart",slug:"/quickstart/cross-chain-transfers",permalink:"/quickstart/cross-chain-transfers",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/quickstart/cross-chain-transfers.md",tags:[],version:"current",frontMatter:{},sidebar:"quickStart",previous:{title:"Fuji Workflow",permalink:"/quickstart/fuji-workflow"},next:{title:"Multi Signature UTXOs with LuxJS",permalink:"/quickstart/multisig-utxos-with-luxjs"}},h={},m=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Transferring LUX using LuxJS",id:"transferring-lux-using-luxjs",level:2},{value:"Example Code",id:"example-code",level:3},{value:"Transaction Fee",id:"transaction-fee",level:3},{value:"Fuji Workflow",id:"fuji-workflow",level:2},{value:"Transfer from the X-Chain to the C-Chain",id:"transfer-from-the-x-chain-to-the-c-chain",level:3},{value:"Export the Lux Token From X-Chain to C-Chain",id:"export-the-lux-token-from-x-chain-to-c-chain",level:4},{value:"Private Key",id:"private-key",level:5},{value:"Network Setting",id:"network-setting",level:5},{value:"Verify the Transaction",id:"verify-the-transaction",level:4},{value:"Import the Lux Token From X-Chain to C-Chain",id:"import-the-lux-token-from-x-chain-to-c-chain",level:4},{value:"Transfer from the C-Chain to the X-Chain",id:"transfer-from-the-c-chain-to-the-x-chain",level:3},{value:"Export the Lux Token From C-Chain to X-Chain",id:"export-the-lux-token-from-c-chain-to-x-chain",level:4},{value:"Import the Lux Token From C-Chain to X-Chain",id:"import-the-lux-token-from-c-chain-to-x-chain",level:4},{value:"Mainnet Workflow",id:"mainnet-workflow",level:2},{value:"Local Workflow",id:"local-workflow",level:2},{value:"Start the Local Network",id:"start-the-local-network",level:3},{value:"Locate the Example Code and Make Necessary Changes",id:"locate-the-example-code-and-make-necessary-changes",level:3}],c={toc:m};function u(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"transfer-lux-tokens-between-chains"},"Transfer LUX Tokens Between Chains"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"This article shows how to transfer LUX tokens programmatically between any two chains (X/P/C chains) of the Primary Network."),(0,o.kt)("p",null,"If you are looking for how to transfter LUX tokens using the web wallet, please check out ",(0,o.kt)("a",{parentName:"p",href:"https://support.lux.network/en/articles/6169872-how-to-make-a-cross-chain-transfer-in-the-lux-wallet"},"this article"),"."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You are familiar with ",(0,o.kt)("a",{parentName:"li",href:"/overview/getting-started/lux-platform"},"Lux's architecture"),"."),(0,o.kt)("li",{parentName:"ul"},"You have completed ",(0,o.kt)("a",{parentName:"li",href:"/nodes/build/run-lux-node-manually"},"Run an Lux Node"),"."),(0,o.kt)("li",{parentName:"ul"},"You are faimilar with ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/luxdefi/LuxJS"},"LuxJS"),"."),(0,o.kt)("li",{parentName:"ul"},"You have installed ",(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/ts-node#installation"},"ts-node")," so that you can follow examples in this tutorial.")),(0,o.kt)("h2",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"To use LuxJS, you can clone the repo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"$ git clone https://github.com/luxdefi/luxjs.git\n")),(0,o.kt)("p",null,"or add it to an existing project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"$ yarn add --dev lux\n")),(0,o.kt)("p",null,"For this tutorial we will use ",(0,o.kt)("inlineCode",{parentName:"p"},"ts-node")," to run the example scripts directly from an LuxJS directory."),(0,o.kt)("p",null,"In order to send LUX, you need to have some LUX. You can use a pre-funded account on local network or get testnet LUX from the ",(0,o.kt)("a",{parentName:"p",href:"https://faucet.lux.network"},"Lux Faucet"),", which is an easy way to get to play around with Lux. After getting comfortable with your code, you can run the code on Mainnet after making necessary changes."),(0,o.kt)("h2",{id:"transferring-lux-using-luxjs"},"Transferring LUX using LuxJS"),(0,o.kt)("p",null,"The easiest way to transfer LUX between chains is to use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/LuxJS"},"LuxJS")," which is a programmatic way to access and move LUX."),(0,o.kt)("p",null,"LuxJS allows you to create and sign transactions locally which is why it is the recommended way to transfer LUX between chains. We are moving away from using LuxGo's keystore because it requires you to keep your keys on a full node which makes them a target for malicious hackers."),(0,o.kt)("h3",{id:"example-code"},"Example Code"),(0,o.kt)("p",null,"Following files can be found under the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/tree/master/examples"},"examples")," directory of the LuxJS project."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Transfer From >> To"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Export"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Import"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},(0,o.kt)("em",{parentName:"strong"},"X-Chain >> C-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/avm/buildExportTx-cchain-lux.ts"},(0,o.kt)("strong",{parentName:"a"},"X-Chain : Export Lux to C-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/evm/buildImportTx-xchain.ts"},(0,o.kt)("strong",{parentName:"a"},"C-Chain : Import Lux from X-Chain")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},(0,o.kt)("em",{parentName:"strong"},"X-Chain >> P-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/avm/buildExportTx-PChain.ts"},(0,o.kt)("strong",{parentName:"a"},"X-Chain : Export Lux to P-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/platformvm/buildImportTx-XChain.ts"},(0,o.kt)("strong",{parentName:"a"},"P-Chain : Import Lux from X-Chain")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},(0,o.kt)("em",{parentName:"strong"},"P-Chain >> X-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/platformvm/buildExportTx-XChain.ts"},(0,o.kt)("strong",{parentName:"a"},"P-Chain : Export Lux to X-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/avm/buildImportTx-PChain.ts"},(0,o.kt)("strong",{parentName:"a"},"X-Chain : Import Lux from P-Chain")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},(0,o.kt)("em",{parentName:"strong"},"P-Chain >> C-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/platformvm/buildExportTx-CChain.ts"},(0,o.kt)("strong",{parentName:"a"},"P-Chain : Export Lux to C-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/evm/buildImportTx-PChain.ts"},(0,o.kt)("strong",{parentName:"a"},"C-Chain : Import Lux from P-Chain")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},(0,o.kt)("em",{parentName:"strong"},"C-Chain >> X-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/evm/buildExportTx-xchain-lux.ts"},(0,o.kt)("strong",{parentName:"a"},"C-Chain : Export Lux to X-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/avm/buildImportTx-cchain.ts"},(0,o.kt)("strong",{parentName:"a"},"X-Chain : Import Lux from C-Chain")))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},(0,o.kt)("em",{parentName:"strong"},"C-Chain >> P-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/evm/buildExportTx-pchain.ts"},(0,o.kt)("strong",{parentName:"a"},"C-Chain : Export Lux to P-Chain"))),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("a",{parentName:"td",href:"https://github.com/luxdefi/luxjs/blob/master/examples/platformvm/buildImportTx-CChain.ts"},(0,o.kt)("strong",{parentName:"a"},"P-Chain : Import Lux from C-Chain")))))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The naming convention in the file and directory names are:"),(0,o.kt)("p",{parentName:"admonition"},"AVM is for X-Chain, EVM for C-Chain, and PlatformVM for P-Chain.")),(0,o.kt)("h3",{id:"transaction-fee"},"Transaction Fee"),(0,o.kt)("p",null,"Transaction fees are fixed on X-Chain and P-Chain, while dynamic on C-Chain, see ",(0,o.kt)("a",{parentName:"p",href:"/quickstart/transaction-fees#fee-schedule"},"this article")," for details. When transfering tokens, please take fee into consideration in calculating total amount to be transferred."),(0,o.kt)("h2",{id:"fuji-workflow"},"Fuji Workflow"),(0,o.kt)("p",null,"This tutorial uses ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/avm/buildExportTx-cchain-lux.ts"},(0,o.kt)("strong",{parentName:"a"},"X-Chain <-> C-Chain"))," transfers as an example. Transferring between other chains are very similar."),(0,o.kt)("h3",{id:"transfer-from-the-x-chain-to-the-c-chain"},"Transfer from the X-Chain to the C-Chain"),(0,o.kt)("p",null,"To transfer a specified amount token from X-Chain to C-Chain, the token needs to be first exported from the X-Chain to the atomic memory, from where it is then imported to C-Chain."),(0,o.kt)("h4",{id:"export-the-lux-token-from-x-chain-to-c-chain"},"Export the Lux Token From X-Chain to C-Chain"),(0,o.kt)("p",null,"Select the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/tree/master/examples/avm"},(0,o.kt)("strong",{parentName:"a"},(0,o.kt)("inlineCode",{parentName:"strong"},"examples/avm")))," folder to view the LuxJS X-Chain examples. To export LUX from the X-Chain to the C-Chain, select ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/avm/buildExportTx-cchain-lux.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"avm/buildExportTx-cchain-lux.ts")),"."),(0,o.kt)("h5",{id:"private-key"},"Private Key"),(0,o.kt)("p",null,"Locate this line in the file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const privKey: string = `${PrivateKeyPrefix}${DefaultLocalGenesisPrivateKey}`\n")),(0,o.kt)("p",null,"and replace this with a private key that you control."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const privKey: string = "<YOUR-PRIVATE-KEY-HERE>"\n')),(0,o.kt)("h5",{id:"network-setting"},"Network Setting"),(0,o.kt)("p",null,"The following settings work when using a local node started with ",(0,o.kt)("a",{parentName:"p",href:"/nodes/maintain/luxd-config-flags#network-id"},(0,o.kt)("inlineCode",{parentName:"a"},"--network-id=fuji")),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const ip: string = "localhost"\nconst port: number = 9650\nconst protocol: string = "http"\nconst networkID: number = 5\n')),(0,o.kt)("p",null,"However, to connect directly to the ",(0,o.kt)("a",{parentName:"p",href:"/apis/luxd/public-api-server"},"Lux Fuji Testnet API server"),", the following changes are needed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const ip: string = "api.lux-test.network"\nconst port: number = 443\nconst protocol: string = "https"\nconst networkID: number = 5\n')),(0,o.kt)("p",null,"Depending on the networkID passed in when instantiating Lux, the encoded addresses used will have a distinctive Human Readable Part(HRP) per each network."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Example Address: 5 - X-",(0,o.kt)("inlineCode",{parentName:"em"},"fuji"),"19rknw8l0grnfunjrzwxlxync6zrlu33yxqzg0h")),(0,o.kt)("p",null,"For Fuji Testnet, 5 is the correct value to use."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const networkID: number = 5\n")),(0,o.kt)("p",null,"To learn more about encoded addresses, click ",(0,o.kt)("a",{parentName:"p",href:"/apis/luxjs/manage-x-chain-keys#encode-bech32-addresses"},"here"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Set the Correct Amount To Send:")),(0,o.kt)("p",null,"By default the scripts send the wallet's entire LUX balance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const balance: BN = new BN(getBalanceResponse.balance)\nconst amount: BN = balance.sub(fee)\n")),(0,o.kt)("p",null,"To send a different amount, please replace the code above with the following. Below sets a new value of 0.01 LUX (",(0,o.kt)("inlineCode",{parentName:"p"},"10000000")," GWEI). Value is set in GWEI format where ",(0,o.kt)("inlineCode",{parentName:"p"},"1,000,000,000")," GWEI = 1 LUX"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const value: BN = new BN("10000000")\nconst amount: BN = value.sub(fee)\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Snowtrace provides a ",(0,o.kt)("a",{parentName:"p",href:"https://snowtrace.io/unitconverter"},"unit converter")," between different units")),(0,o.kt)("p",null,"Run the export script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"$ ts-node examples/avm/buildExportTx-cchain-lux.ts\n")),(0,o.kt)("p",null,"This returns:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"Success! TXID: 2uQvMcPZjmPXAyvz9cdKBphDDSmnxxx3vsUrxqpj3U92hsfQcc\n")),(0,o.kt)("h4",{id:"verify-the-transaction"},"Verify the Transaction"),(0,o.kt)("p",null,"You can now pass this txID ",(0,o.kt)("inlineCode",{parentName:"p"},"2uQvMcPZjmPXAyvz9cdKBphDDSmnxxx3vsUrxqpj3U92hsfQcc")," into ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/avm/getTx.ts"},"examples/avm/getTx.ts"),", plus other similar network settings, then you can run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"$ ts-node examples/avm/getTx.ts\n")),(0,o.kt)("p",null,"which returns:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  unsignedTx: {\n    networkID: 5,\n    blockchainID: '2JVSBoinj9C2J33VntvzYtVJNZdN2NKiwwKjcumHUWEb5DbBrm',\n    outputs: [ [Object] ],\n    inputs: [ [Object], [Object] ],\n    memo: '0x41564d207574696c697479206d6574686f64206275696c644578706f7274547820746f206578706f7274204156415820746f2074686520432d436861696e2066726f6d2074686520582d436861696e',\n    destinationChain: 'yH8D7ThNJkxmtkuv2jgBa4P1Rn3Qpr4pPr7QYNfcdoS6k6HWp',\n    exportedOutputs: [ [Object] ]\n  },\n  credentials: [\n    {\n      fxID: 'spdxUxVJQbX85MGxMHbKw1sHxMnSqJ3QBzDyDYEP3h6TLuxqQ',\n      credential: [Object]\n    },\n    {\n      fxID: 'spdxUxVJQbX85MGxMHbKw1sHxMnSqJ3QBzDyDYEP3h6TLuxqQ',\n      credential: [Object]\n    }\n  ]\n}\n")),(0,o.kt)("h4",{id:"import-the-lux-token-from-x-chain-to-c-chain"},"Import the Lux Token From X-Chain to C-Chain"),(0,o.kt)("p",null,"Select the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/tree/master/examples/evm"},(0,o.kt)("strong",{parentName:"a"},(0,o.kt)("inlineCode",{parentName:"strong"},"examples/evm")))," folder to view the LuxJS C-Chain examples. To import LUX to the C-Chain from the X-Chain, select ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/evm/buildImportTx-xchain.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"evm/buildImportTx-xchain.ts"))),(0,o.kt)("p",null,"Copy the ",(0,o.kt)("a",{parentName:"p",href:"#network-setting"},"network setting from above")," into ",(0,o.kt)("inlineCode",{parentName:"p"},"evm/buildImportTx-xchain.ts"),"."),(0,o.kt)("p",null,"Navigate to this part of the code and ensure that the ",(0,o.kt)("inlineCode",{parentName:"p"},"cHexAddress"),"(",(0,o.kt)("em",{parentName:"p"},"Your C-Chain wallet address"),") and ",(0,o.kt)("inlineCode",{parentName:"p"},"private key")," are correct:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const cHexAddress: string = "<YOUR-CCHAIN-WALLET-ADDRESS-HERE>"\nconst privKey: string = "<YOUR-PRIVATE-KEY-HERE>"\n')),(0,o.kt)("p",null,"Run the import script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"$ ts-node examples/evm/buildImportTx-xchain.ts\n")),(0,o.kt)("p",null,"This returns:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"Success! TXID: 2uQvMcPZjmPXAyvz9cdKBphDDSmnxxx3vsUrxqpj3U92hsfQcc\n")),(0,o.kt)("p",null,"That's it! You've transferred LUX from the X-Chain to C-Chain!"),(0,o.kt)("p",null,"You can verify this TX by copy / pasting the import TXID into ",(0,o.kt)("a",{parentName:"p",href:"https://testnet.luxscan.io/blockchain/c/tx/2uQvMcPZjmPXAyvz9cdKBphDDSmnxxx3vsUrxqpj3U92hsfQcc"},"Luxscan"),"."),(0,o.kt)("h3",{id:"transfer-from-the-c-chain-to-the-x-chain"},"Transfer from the C-Chain to the X-Chain"),(0,o.kt)("p",null,"To return the LUX back to the X-Chain, you need to do the transfer in the opposite direction."),(0,o.kt)("h4",{id:"export-the-lux-token-from-c-chain-to-x-chain"},"Export the Lux Token From C-Chain to X-Chain"),(0,o.kt)("p",null,"Select the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/tree/master/examples/evm"},(0,o.kt)("strong",{parentName:"a"},(0,o.kt)("inlineCode",{parentName:"strong"},"examples/evm")))," folder to view the LuxJS C-Chain examples. To export LUX from the X-Chain to the C-Chain, select ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/evm/buildExportTx-xchain-lux.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"evm/buildExportTx-xchain-lux.ts")),"."),(0,o.kt)("p",null,"Make necessary changes as above for private key and network settings."),(0,o.kt)("p",null,"You can change the amount of LUX to send by editing the ",(0,o.kt)("em",{parentName:"p"},"BN")," variable: ",(0,o.kt)("inlineCode",{parentName:"p"},"luxAmount"),". The sample code assigns this as ",(0,o.kt)("inlineCode",{parentName:"p"},"1e7")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"10000000")," (0.01 LUX)"),(0,o.kt)("p",null,"The fee here will only be for exporting the asset. The import fees will be deducted from the UTXOs present on the Exported Atomic Memory, a memory location where UTXOs stay after getting exported but before being imported."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"let luxAmount: BN = new BN(1e7)\nlet fee: BN = baseFee.div(new BN(1e9))\nfee = fee.add(new BN(1e6))\n")),(0,o.kt)("p",null,"Run the export script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"luxjs $ ts-node examples/evm/buildExportTx-xchain-lux.ts\nSuccess! TXID: UAez3DTv26qmhKKFDvmQTayaXTPAVahHenDKe6xnUMhJbKuxc\n")),(0,o.kt)("h4",{id:"import-the-lux-token-from-c-chain-to-x-chain"},"Import the Lux Token From C-Chain to X-Chain"),(0,o.kt)("p",null,"Before we run the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/avm/buildImportTx-cchain.ts"},"example import script"),", we need to make some changes to the code:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Change the ",(0,o.kt)("a",{parentName:"li",href:"#network-setting"},"Network Setting")," to meet Fuji network requirements."),(0,o.kt)("li",{parentName:"ol"},"Import your Private Key by following the steps listed ",(0,o.kt)("a",{parentName:"li",href:"#private-key"},"here"),"."),(0,o.kt)("li",{parentName:"ol"},"Run the Script!")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"luxjs $ ts-node examples/avm/buildImportTx-cchain.ts\nSuccess! TXID: Sm6Ec2GyguWyG3Li1pARmTpaZ6qLEPuVAHV8QBGL9JWwWAEgM\n")),(0,o.kt)("h2",{id:"mainnet-workflow"},"Mainnet Workflow"),(0,o.kt)("p",null,"The Fuji workflow above can be adapted to Mainnet with the following modifications:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The correct private key."),(0,o.kt)("li",{parentName:"ul"},"Network setting should be to a Mainnet node, either ",(0,o.kt)("a",{parentName:"li",href:"/nodes/maintain/luxd-config-flags#network-id"},"a local node on Mainnet")," or ",(0,o.kt)("a",{parentName:"li",href:"/apis/luxd/public-api-server#using-the-public-api-nodes"},"Lux Mainnet API server")," where ",(0,o.kt)("inlineCode",{parentName:"li"},"api.lux.network")," should be used for the ",(0,o.kt)("inlineCode",{parentName:"li"},"ip"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"const networkID: number = 1")," based on ",(0,o.kt)("a",{parentName:"li",href:"/apis/luxjs/manage-x-chain-keys#encode-bech32-addresses"},"this"),"."),(0,o.kt)("li",{parentName:"ul"},"Set the correct amount to send."),(0,o.kt)("li",{parentName:"ul"},"The correct receiving address.")),(0,o.kt)("h2",{id:"local-workflow"},"Local Workflow"),(0,o.kt)("h3",{id:"start-the-local-network"},"Start the Local Network"),(0,o.kt)("p",null,"Follow ",(0,o.kt)("a",{parentName:"p",href:"/quickstart/create-a-local-test-network#lux-network-runner"},"Create a Local Test Network")," to start a 5-node local network. Make sure that you get one of the port number by following ",(0,o.kt)("a",{parentName:"p",href:"/quickstart/create-a-local-test-network#retrieve-all-nodes"},"this"),". In this tutorial, we will assume one of the ports is 30301."),(0,o.kt)("h3",{id:"locate-the-example-code-and-make-necessary-changes"},"Locate the Example Code and Make Necessary Changes"),(0,o.kt)("p",null,"Most of the code are already set to run it on a local network. Do check the following values to make sure they are correct."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const ip: string = "localhost"\nconst port: number = 30301 // Change this to the correct value\nconst protocol: string = "http"\nconst networkID: number = 1337\n')),(0,o.kt)("p",null,"Then run the export and import scripts to transfer tokens across chains."))}u.isMDXComponent=!0}}]);