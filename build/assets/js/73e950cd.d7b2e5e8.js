"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[4486],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return h}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),h=r,f=u["".concat(i,".").concat(h)]||u[h]||d[h]||o;return a?n.createElement(f,s(s({ref:t},c),{},{components:a})):n.createElement(f,s({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var p=2;p<o;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1917:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return h},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),s=["components"],l={},i="Deploy a Gnosis Safe on Your Subnet EVM",p={unversionedId:"subnets/deploy-a-gnosis-safe-on-your-evm",id:"subnets/deploy-a-gnosis-safe-on-your-evm",title:"Deploy a Gnosis Safe on Your Subnet EVM",description:"Introduction",source:"@site/docs/subnets/deploy-a-gnosis-safe-on-your-evm.md",sourceDirName:"subnets",slug:"/subnets/deploy-a-gnosis-safe-on-your-evm",permalink:"/subnets/deploy-a-gnosis-safe-on-your-evm",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/subnets/deploy-a-gnosis-safe-on-your-evm.md",tags:[],version:"current",frontMatter:{},sidebar:"subnets",previous:{title:"Lux Network Runner",permalink:"/subnets/network-runner"},next:{title:"Spaces: Experimental Implementation",permalink:"/subnets/spaces"}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Custom Network Workflow",id:"custom-network-workflow",level:2},{value:"Setup",id:"setup",level:3},{value:"Deploy the Safe Contracts",id:"deploy-the-safe-contracts",level:3},{value:"Interacting with the Safe",id:"interacting-with-the-safe",level:2},{value:"Using Safe Tasks",id:"using-safe-tasks",level:3},{value:"Create a Safe",id:"create-a-safe",level:3},{value:"Add an Owner",id:"add-an-owner",level:3},{value:"Sign",id:"sign",level:4},{value:"Submit",id:"submit",level:4},{value:"Send Native Currency from Your Safe",id:"send-native-currency-from-your-safe",level:3},{value:"Sign with Two Owners",id:"sign-with-two-owners",level:4},{value:"Submit",id:"submit-1",level:4},{value:"Other Functions",id:"other-functions",level:3},{value:"Managing a Proxy Using Gnosis Safe",id:"managing-a-proxy-using-gnosis-safe",level:2},{value:"Setup",id:"setup-1",level:3},{value:"Deploy the Proxy",id:"deploy-the-proxy",level:3},{value:"Transfer the Proxy Admin Role to a Safe",id:"transfer-the-proxy-admin-role-to-a-safe",level:3},{value:"Upgrade the Contract",id:"upgrade-the-contract",level:3},{value:"Deploy a New Logic Contract",id:"deploy-a-new-logic-contract",level:4},{value:"Use Hardhat to Interact with the Proxy",id:"use-hardhat-to-interact-with-the-proxy",level:4},{value:"Create the Upgrade Tx",id:"create-the-upgrade-tx",level:4},{value:"Create the Proposal",id:"create-the-proposal",level:4},{value:"Sign",id:"sign-1",level:4},{value:"Submit",id:"submit-2",level:4},{value:"Use Hardhat to Interact With the Upgraded Proxy",id:"use-hardhat-to-interact-with-the-upgraded-proxy",level:4},{value:"Local Workflow",id:"local-workflow",level:2},{value:"Start the Local Network",id:"start-the-local-network",level:3},{value:"Locate the Hardhat Network Configuration and Make Necessary Changes",id:"locate-the-hardhat-network-configuration-and-make-necessary-changes",level:3}],u={toc:d};function h(e){var t=e.components,l=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deploy-a-gnosis-safe-on-your-subnet-evm"},"Deploy a Gnosis Safe on Your Subnet EVM"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"This article shows how to deploy and interact with a ",(0,o.kt)("a",{parentName:"p",href:"https://gnosis-safe.io/"},"Gnosis Safe")," programmatically on any ",(0,o.kt)("a",{parentName:"p",href:"/subnets/"},"Subnet EVM"),"."),(0,o.kt)("p",null,"If you are looking for more information regarding the Gnosis Safe protocol, please check out ",(0,o.kt)("a",{parentName:"p",href:"https://docs.gnosis-safe.io/"},"these developer docs"),"."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"This tutorial assumes that:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A Subnet and EVM blockchain has been created. Lux tools allow users to do this on ",(0,o.kt)("a",{parentName:"li",href:"../subnets/subnet-cli"},"Mainnet"),", ",(0,o.kt)("a",{parentName:"li",href:"../subnets/create-a-fuji-subnet"},"Fuji")," or a ",(0,o.kt)("a",{parentName:"li",href:"../subnets/create-a-local-subnet"},"Local network"),"."),(0,o.kt)("li",{parentName:"ul"},"Your node is currently validating your target Subnet."),(0,o.kt)("li",{parentName:"ul"},"Your wallet has a balance of the Subnet native token (specified under ",(0,o.kt)("em",{parentName:"li"},"alloc")," in your ",(0,o.kt)("a",{parentName:"li",href:"/subnets/customize-a-subnet#genesis"},"Genesis File"),").")),(0,o.kt)("p",null,"The entirety of this tutorial will require you to work with 3 projects (4 if running locally)"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/safe-global/safe-contracts.git"},"safe-contracts")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/5afe/safe-tasks.git"},"safe-tasks")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/luxdefi/lux-smart-contract-quickstart"},"lux-smart-contract-quickstart")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../quickstart/create-a-local-test-network#lux-network-runner"},"lux-network-runner")," (Local Workflow)")),(0,o.kt)("h2",{id:"custom-network-workflow"},"Custom Network Workflow"),(0,o.kt)("h3",{id:"setup"},"Setup"),(0,o.kt)("p",null,"Set up the safe-contracts repository by running the following Commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"git https://github.com/safe-global/safe-contracts.git\ncd safe-contracts\nyarn\n")),(0,o.kt)("p",null,"Next, change ",(0,o.kt)("inlineCode",{parentName:"p"},".env.example")," to ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," and set the variable,",(0,o.kt)("inlineCode",{parentName:"p"},"PK")," to your wallet's ",(0,o.kt)("em",{parentName:"p"},"private key"),". Here, we can also add our node's RPC endpoint as our ",(0,o.kt)("inlineCode",{parentName:"p"},"NODE_URL"),". "),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-env"},'PK="<YOUR-PRIVATE-KEY-HERE>"\nPK2=""\nINFURA_KEY=""\n# Used for custom network\nNODE_URL="<YOUR-SUBNET-NODE-RPC-URL-HERE>"\n')),(0,o.kt)("p",null,"Next, add your Subnet Network parameters to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/safe-global/safe-contracts/blob/main/hardhat.config.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"hardhat.config.ts")),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'networks: {\n  subnet: {\n    url: `${NODE_URL}`,\n    chainId: 99999,\n    gasPrice: "auto",\n    accounts: [`${PK}`, ],\n  },\n}\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"}," ",(0,o.kt)("inlineCode",{parentName:"p"},"chainId")," is set to 99999 for demonstration purposes only. Please be sure to use the correct ",(0,o.kt)("inlineCode",{parentName:"p"},"chainId")," when following this workflow.")),(0,o.kt)("h3",{id:"deploy-the-safe-contracts"},"Deploy the Safe Contracts"),(0,o.kt)("p",null,"At this point we have set up the Subnet and can make calls to the RPC endpoint. You can use the RPC URL value to define ",(0,o.kt)("inlineCode",{parentName:"p"},"NODE_URL")," in your ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," file. We can execute the workflow on a local or remote node as long as we have the ",(0,o.kt)("a",{parentName:"p",href:"../apis/luxd/apis/issuing-api-calls#endpoints"},"proper IP address"),"."),(0,o.kt)("p",null,"Finally, deploy the contracts by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn hardhat --network subnet deploy\n")),(0,o.kt)("p",null,"This will deploy the Safe contracts to your Subnet EVM!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},'deploying "SimulateTxAccessor" (tx: 0xb2104e7067e35e1d2176ee53f6030bbcef4a12051505daca603d097d87ebd3e2)...: deployed at 0x52C84043CD9c865236f11d9Fc9F56aa003c1f922 with 237301 gas\ndeploying "GnosisSafeProxyFactory" (tx: 0x8faec24dda341141e02d1b898ceefe445b2893b3f600f1f79a5e04e3a91396cd)...: deployed at 0x17aB05351fC94a1a67Bf3f56DdbB941aE6c63E25 with 865918 gas\ndeploying "DefaultCallbackHandler" (tx: 0xa1a48e8869c71cb10e9ca5f2ce20420c44ce09dc32aa13efbd2ebc3796bcf145)...: deployed at 0x5aa01B3b5877255cE50cc55e8986a7a5fe29C70e with 541390 gas\ndeploying "CompatibilityFallbackHandler" (tx: 0x05d1f9ef7cafd2dbc5d4b9621d15e15f2416e6917371355718e6194d6e39871a)...: deployed at 0x5DB9A7629912EBF95876228C24A848de0bfB43A9 with 1235752 gas\ndeploying "CreateCall" (tx: 0xbb40c1594dc5cdb1a37b8890e2a0e610c0339af157d094d008e8eebcf3eb3275)...: deployed at 0x4Ac1d98D9cEF99EC6546dEd4Bd550b0b287aaD6D with 294075 gas\ndeploying "MultiSend" (tx: 0x075067ca5e4755c31e8dbe5e16cd597f86fb141f45de254d39b050568ef2a3a6)...: deployed at 0xA4cD3b0Eb6E5Ab5d8CE4065BcCD70040ADAB1F00 with 189518 gas\ndeploying "MultiSendCallOnly" (tx: 0xa237e18fb2561c2081341f3621ff559063bd07c6b9f77aefdaf103f976751353)...: deployed at 0xa4DfF80B4a1D748BF28BC4A271eD834689Ea3407 with 141745 gas\ndeploying "SignMessageLib" (tx: 0x1cc1322268015fee470529682dbc9bfc8aa068554df841de824524cdfb8bc2e8)...: deployed at 0xe336d36FacA76840407e6836d26119E1EcE0A2b4 with 261758 gas\ndeploying "GnosisSafeL2" (tx: 0x341ec664d3a5c2c98f1c3f5862651ba82e0c2d12875d69ad3bdf8d1d5e3e074b)...: deployed at 0x95CA0a568236fC7413Cd2b794A7da24422c2BBb6 with 5268965 gas\ndeploying "GnosisSafe" (tx: 0x10dcf8c5f53ae698c77d7f60d6756b4b24f2f8224e14e21658c421e158a84cd4)...: deployed at 0x789a5FDac2b37FCD290fb2924382297A6AE65860 with 5086960 gas\n\u2728  Done in 26.90s.\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Please record your GnosisSafeL2 and GnosisSafeProxyFactory addresses to complete this tutorial")),(0,o.kt)("p",null,"The deployment of the contracts is using a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/safe-global/safe-contracts/blob/v1.3.0/contracts/proxies/GnosisSafeProxyFactory.sol"},"proxy factory"),", therefore the address is depending on the bytecode. If the address is the same then the deployment bytecode of the contract is also the same (assuming that the target chain follows the EVM specifications set in the Ethereum Yellowpaper)."),(0,o.kt)("h2",{id:"interacting-with-the-safe"},"Interacting with the Safe"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/safe-global/safe-deployments"},"safe-deployments")," repository contains the ABI files for the different versions of the Safe that can be used with all common Ethereum tools to interact with the Safe."),(0,o.kt)("p",null,"The important part is how to create the signature to confirm a transaction. More information on this can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.gnosis-safe.io/contracts/signatures"},"Safe docs"),"."),(0,o.kt)("p",null,"To make this easier the Safe team provides multiple CLIs (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/5afe/safe-cli#safe-cli"},"safe-cli")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/5afe/safe-tasks#gnosis-safe-tasks"},"safe-tasks"),") and the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/safe-global/safe-core-sdk/tree/main/packages/safe-core-sdk#safe-core-sdk"},"safe-core-sdk"),"."),(0,o.kt)("h3",{id:"using-safe-tasks"},"Using Safe Tasks"),(0,o.kt)("p",null,"Let's take a look on how to create a Safe and propose transactions on a Subnet using Safe Tasks, a Hardhat task collection for the Safe contracts."),(0,o.kt)("p",null,"First, in a new directory, clone and navigate to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/5afe/safe-tasks"},"safe-tasks repository")," by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"git clone https://github.com/5afe/safe-tasks.git\ncd safe-tasks\nyarn\n")),(0,o.kt)("p",null,"Implement the environment and network setup ",(0,o.kt)("a",{parentName:"p",href:"#setup"},"above")," to prepare the Safe-Tasks project."),(0,o.kt)("h3",{id:"create-a-safe"},"Create a Safe"),(0,o.kt)("p",null,"Now let's create a Safe using the previously deployed ",(0,o.kt)("inlineCode",{parentName:"p"},"GnosisSafeL2")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"GnosisSafeProxyFactory")," addresses:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},'yarn safe create --network subnet --singleton "<YOUR-GnosisSafeL2-ADDRESS-HERE>" --factory "<YOUR-GnosisSafeProxyFactory-ADDRESS-HERE>"\n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Deploy Safe to 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114\nSingleton: 0x95CA0a568236fC7413Cd2b794A7da24422c2BBb6\nSetup data: 0xb63e800ddb97c7cece249c2b98bdc0226cc4c2a57bf52fc0000000000000000000000000000000000000000000000000000000000000000\nNonce: 1658256419254\nTo (factory): 0x17aB05351fC94a1a67Bf3f56DdbB941aE6c63E25\nData: 0x1688f0b900000000000000000000000095ca0a568236fc7413cd2b794a7da24422c2bbb600000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000018217c8e9b60000000000000000000000000000000000000000000000000000000000000164b63e800ddb97c7cece249c2b98bdc0226cc4c2a57bf52fc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n")),(0,o.kt)("p",null,'Notice the line, "',(0,o.kt)("em",{parentName:"p"},"Deploy Safe to 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114"),'", informs us that our safe contract lives at the address ',(0,o.kt)("inlineCode",{parentName:"p"},"0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114"),". For demonstration purposes, we will utilize this address for this section of the article."),(0,o.kt)("p",null,"Let's inspect our Safe details by running the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe info --network subnet 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114 \n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Checking Safe at 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114\nSingleton: 0x95CA0a568236fC7413Cd2b794A7da24422c2BBb6\nVersion: 1.3.0\nOwners: 0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC\nThreshold: 1\nNonce: 0\nFallback Handler: 0x0000000000000000000000000000000000000000\nModules: \n")),(0,o.kt)("p",null,"The output above illustrates a few things:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Singleton")," - This is the contract that holds the logic for our Safe to interact with. In this case, the Smart Contract we are using is ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/safe-global/safe-contracts/blob/main/contracts/GnosisSafeL2.sol"},(0,o.kt)("inlineCode",{parentName:"a"},"GnosisSafeL2.sol")),", A multisignature wallet with support for confirmations using signed messages based on ",(0,o.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-191"},"ERC191"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Owners")," - The addresses that are allowed to sign and submit proposals. These can be can either be EOAs or other smart contract accounts."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Threshold")," - The amount of signatures required to submit a proposal.")),(0,o.kt)("h3",{id:"add-an-owner"},"Add an Owner"),(0,o.kt)("p",null,"To add an owner we must first generate the data required to submit a proposal."),(0,o.kt)("p",null,"Navigate to the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/5afe/safe-tasks/blob/master/examples/add_owner.json"},"add_owner.json")," file in the examples directory and an address that you control to ",(0,o.kt)("inlineCode",{parentName:"p"},"params"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "to": "0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114",\n        "value": "0",\n        "method": "addOwnerWithThreshold(address,uint256)",\n        "params": [\n            "0x82DdaF3f1fcd3c18F5664cD7fb12bD8C38D5d4ba",\n            "2"\n        ],\n        "operation": 0\n    }\n]\n')),(0,o.kt)("p",null,"Next, we will call the ",(0,o.kt)("inlineCode",{parentName:"p"},"propose-multi")," task to create a transaction based on the sample tx input json that adds an owner to the Safe."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe propose-multi --network subnet 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114 examples/add_owner.json --export example/addOwner.json\n")),(0,o.kt)("p",null,"This will create a new file, ",(0,o.kt)("inlineCode",{parentName:"p"},"addOwner.json"),", in the examples directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "version": "1.0",\n  "chainId": "99999",\n  "createdAt": 1658276969641,\n  "meta": {\n    "name": "Custom Transactions"\n  },\n  "transactions": [\n    {\n      "to": "0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114",\n      "value": "0",\n      "data": "0x0d582f1300000000000000000000000082ddaf3f1fcd3c18f5664cd7fb12bd8c38d5d4ba0000000000000000000000000000000000000000000000000000000000000002",\n      "operation": 0\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"Notice the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," value has the parameters encoded as a single hexadecimal string."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"addOwnerWithThreshold")," has the function signature ",(0,o.kt)("inlineCode",{parentName:"li"},"0d582f13")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"address")," appears in the data as ",(0,o.kt)("inlineCode",{parentName:"li"},"82ddaf3f1fcd3c18f5664cd7fb12bd8c38d5d4ba")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"threshold")," appears at the end of the data as ",(0,o.kt)("inlineCode",{parentName:"li"},"2"))),(0,o.kt)("p",null,"Now we can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--data")," flag and pass in the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," above as an argument for our proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe propose --network subnet 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114 --to 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114 --data 0x0d582f1300000000000000000000000082ddaf3f1fcd3c18f5664cd7fb12bd8c38d5d4ba0000000000000000000000000000000000000000000000000000000000000002\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Running on subnet\nUsing Safe at 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114\nSafe transaction hash: 0x2837eb329c41078c97e2450eabf0b73caae94d08db06a5d9fe2084d33ef3f4cc\n")),(0,o.kt)("p",null,"As you can see, creating a proposal generates a ",(0,o.kt)("inlineCode",{parentName:"p"},"Safe transaction hash")," which we will use to complete this tutorial."),(0,o.kt)("p",null,"Next, we will sign and submit our proposal's tx hash, ",(0,o.kt)("inlineCode",{parentName:"p"},"0x2837eb329c41078c97e2450eabf0b73caae94d08db06a5d9fe2084d33ef3f4cc"),", with the tasks, ",(0,o.kt)("inlineCode",{parentName:"p"},"sign-proposal")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"submit-proposal"),"."),(0,o.kt)("h4",{id:"sign"},"Sign"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe sign-proposal 0x2837eb329c41078c97e2450eabf0b73caae94d08db06a5d9fe2084d33ef3f4cc\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Using Safe at 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114 with 0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC\nSignature: 0x094e84aab062cb03f9abca3b80fb9931934c83920024fb8fa83b7b8d1a2aab305ab1f4d54e3a59ad7633f3f36d5db9b9976db268e05e0559c1c017fd3836540020\n")),(0,o.kt)("h4",{id:"submit"},"Submit"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe submit-proposal 0x2837eb329c41078c97e2450eabf0b73caae94d08db06a5d9fe2084d33ef3f4cc\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Running on subnet\nUsing Safe at 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114 with 0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC\nEthereum transaction hash: 0x99b35740246b91e5137f0128427e220ec7772aab17b20b6b9d4bcc7e0c73685f\n")),(0,o.kt)("p",null,"Now that we've successfully submitted a proposal, let's check the owners of our Safe by using the ",(0,o.kt)("inlineCode",{parentName:"p"},"info")," task:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe info --network subnet 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Checking Safe at 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114\nSingleton: 0x95CA0a568236fC7413Cd2b794A7da24422c2BBb6\nVersion: 1.3.0\nOwners: 0x82DdaF3f1fcd3c18F5664cD7fb12bD8C38D5d4ba,0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC\nThreshold: 2\nNonce: 1\nFallback Handler: 0x0000000000000000000000000000000000000000\nModules: \n")),(0,o.kt)("p",null,"It is worth noting that you can also check the owners of the Safe by using ",(0,o.kt)("a",{parentName:"p",href:"https://docs.lux.network/dapps/smart-contracts/using-hardhat-with-the-lux-c-chain#interact-with-smart-contract"},"Hardhat with your Custom EVM"),"."),(0,o.kt)("p",null,"As shown above, ",(0,o.kt)("inlineCode",{parentName:"p"},"Owners")," now includes a new address and ",(0,o.kt)("inlineCode",{parentName:"p"},"threshold"),", the amount of signatures needed to execute a transaction, has increased to 2."),(0,o.kt)("h3",{id:"send-native-currency-from-your-safe"},"Send Native Currency from Your Safe"),(0,o.kt)("p",null,"Let's apply the very same steps above to a workflow where we send the Native Currency of your Subnet to an EOA.\nThis part of the tutorial requires that your Safe holds at least 1000 native tokens. You can send assets to your Safe the same way you would send Lux using ",(0,o.kt)("a",{parentName:"p",href:"https://metamask.zendesk.com/hc/en-us/articles/360015488931-How-to-send-tokens-from-your-MetaMask-wallet"},"Metamask"),". To add your Subnet to MetaMask, ",(0,o.kt)("a",{parentName:"p",href:"../subnets/create-a-fuji-subnet#connect-with-metamask"},"please read this excerpt"),"."),(0,o.kt)("p",null,"Just as before, we will sign and submit the transaction hash. This example uses two signers due to an increased ",(0,o.kt)("inlineCode",{parentName:"p"},"threshold")," from our previous Safe transaction."),(0,o.kt)("p",null,"To include our second signer, we will have to import another ",(0,o.kt)("em",{parentName:"p"},"private key")," into the project by adding it to ",(0,o.kt)("inlineCode",{parentName:"p"},".env")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"hardhat.config.ts")," in our ",(0,o.kt)("inlineCode",{parentName:"p"},"safe-tasks")," project."),(0,o.kt)("p",null,"Example ",(0,o.kt)("inlineCode",{parentName:"p"},".env"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'PK="56289e99c94b6912bfc12adc093c9b51124f0dc54ac7a766b2bc5ccf558d8027"\nPK2="cd30aef1af167238c627593537e162ecf5aad1d4ab4ea98ed2f96ad4e47006dc"\nINFURA_KEY=""\n# Used for custom network\nNODE_URL="http://127.0.0.1:49435/ext/bc/2Ek1MWR7jiEJr3o9tuJAH79JkuERzKqQDcR2s6R2e5Dyz54Wit/rpc"\n')),(0,o.kt)("p",null,"Example ",(0,o.kt)("inlineCode",{parentName:"p"},"hardhat.config.ts")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// Load environment variables.\ndotenv.config();\nconst {\n  NETWORK,\n  NODE_URL,\n  INFURA_KEY,\n  MNEMONIC,\n  PK,\n  PK2,\n  SOLIDITY_VERSION,\n  SOLIDITY_SETTINGS,\n} = process.env;\n\n...\nnetworks: {\n  subnet: {\n        url: `${NODE_URL}`,\n        chainId: 99999,\n        gasPrice: "auto",\n        accounts: [`${PK}`, `${PK2}` ],\n      },\n    },\n')),(0,o.kt)("p",null,"In this example, we're sending 1000 ",(0,o.kt)("em",{parentName:"p"},"LEVM")," (which is the native token on the Subnet we are working with) from our Safe to the address ",(0,o.kt)("inlineCode",{parentName:"p"},"0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC"),"."),(0,o.kt)("p",null,"Let's ensure that our Safe has enough funds by using a simple curl request."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},'curl -X POST localhost:49435/ext/bc/2Ek1MWR7jiEJr3o9tuJAH79JkuERzKqQDcR2s6R2e5Dyz54Wit/rpc -H "Content-Type: application/json" --data \'\n{\n  "jsonrpc": "2.0",\n  "method": "eth_getBalance",\n  "params": ["0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114", "latest"],\n  "id": 1\n}\n\'\n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},'{"jsonrpc":"2.0","id":1,"result":"0x3e8"}\n')),(0,o.kt)("p",null,"Now that we've verified that our Safe has enough native tokens(1000), let's create a proposal to send some to an EOA."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe propose  --network subnet 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114 --value 1000 --to 0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559\n")),(0,o.kt)("p",null,"Notice that we've added the ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," flag and passed in our target amount. We've also changed our ",(0,o.kt)("inlineCode",{parentName:"p"},"to")," flag to be our our target address. You can find the other flags and parameters for this task ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/5afe/safe-tasks/blob/52067e3ac5b8a1db3a4ab54fec0ee628c0bd4f3a/src/execution/proposing.ts"},"here"),"."),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Running on subnet\nUsing Safe at 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114\nSafe transaction hash: 0x5134dc35909ff592c55a64c1a5947dd4844b1bca2a45df68ed9c3019133bf44d\n")),(0,o.kt)("h4",{id:"sign-with-two-owners"},"Sign with Two Owners"),(0,o.kt)("p",null,"Follow the same workflow from before to sign a proposal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe sign-proposal 0x5134dc35909ff592c55a64c1a5947dd4844b1bca2a45df68ed9c3019133bf44d\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Using Safe at 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114 with 0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC\nSignature: 0x636ba2a89023b1e81032a43dd1172743f7916e31647eb87ec95c541c091ebf1873605d39d8039431a7dceeeab691e48b96b50f93e91acde5e67295e9f051e7031f\n")),(0,o.kt)("p",null,"By default, Hardhat uses ",(0,o.kt)("em",{parentName:"p"},"account 0")," to sign transactions. Since we've imported another private key and added it to our ",(0,o.kt)("em",{parentName:"p"},"accounts")," parameter in ",(0,o.kt)("inlineCode",{parentName:"p"},"hardhat.config.ts")," we can now specify which account we want to sign with by adding the flag ",(0,o.kt)("inlineCode",{parentName:"p"},"--signer-index")," to our ",(0,o.kt)("inlineCode",{parentName:"p"},"sign-proposal")," task "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe sign-proposal 0x5134dc35909ff592c55a64c1a5947dd4844b1bca2a45df68ed9c3019133bf44d --signer-index 1\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Using Safe at 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114 with 0x82DdaF3f1fcd3c18F5664cD7fb12bD8C38D5d4ba\nSignature: 0x11d7e983417280bdf1c55da51359eb06262f0feadad1c6ebdf497a6e6db92c5e506536c1c2b6bd3ef726d163c710d5adcbe787a2440be5ad79cac52e950407b21f\n")),(0,o.kt)("h4",{id:"submit-1"},"Submit"),(0,o.kt)("p",null,"Now that both owners have signed the proposal, the ",(0,o.kt)("inlineCode",{parentName:"p"},"threshold")," requirement has been met and we can now submit the proposal. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe submit-proposal 0x5134dc35909ff592c55a64c1a5947dd4844b1bca2a45df68ed9c3019133bf44d\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Using Safe at 0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114 with 0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC\nEthereum transaction hash: 0x074d823b8d111af9e87d0e4374e3a5382a4de9952df4f49db5ee4b52f945760b\n")),(0,o.kt)("p",null,"Now let's check the balances of the Safe and EOA addresses using curl."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Safe balance(0)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},'curl -X POST localhost:49435/ext/bc/2Ek1MWR7jiEJr3o9tuJAH79JkuERzKqQDcR2s6R2e5Dyz54Wit/rpc -H "Content-Type: application/json" --data \'\n{\n  "jsonrpc": "2.0",\n  "method": "eth_getBalance",\n  "params": ["0x1DE5B48F80eC78Bf74644EFdCbB5750Cb7B25114", "latest"],\n  "id": 1\n}\n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},'{"jsonrpc":"2.0","id":1,"result":"0x0"}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"EOA Balance(1,000)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},'curl -X POST "http://127.0.0.1:17773/ext/bc/8ttPWTKt2FEs256fJkV2Yj5nJS1JPSfhN2ghAr8aboZWF2gXF/rpc" -H "Content-Type: application/json" --data \'\n{\n  "jsonrpc": "2.0",\n  "method": "eth_getBalance",\n  "params": ["0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559", "latest"],\n  "id": 1\n}\n')),(0,o.kt)("p",null,"Output"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},'{"jsonrpc":"2.0","id":1,"result":"0x3635c9adc5dea00000"}\n')),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"We can reformat ",(0,o.kt)("inlineCode",{parentName:"p"},"BigNumber")," values to human readable values by using hardhat console."),(0,o.kt)("p",{parentName:"admonition"},"Example:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"npx hardhat console --network subnet\nethers.utils.formatUnits(await ethers.BigNumber.from('0x3635c9adc5dea00000'))\n")),(0,o.kt)("p",{parentName:"admonition"},"Output"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"'1000.0'\n"))),(0,o.kt)("p",null,"And there you have it! We've transferred 1000 ",(0,o.kt)("em",{parentName:"p"},"LEVM")," from our Safe to address, ",(0,o.kt)("inlineCode",{parentName:"p"},"0x2d1d87fF3Ea2ba6E0576bCA4310fC057972F2559"),"."),(0,o.kt)("h3",{id:"other-functions"},"Other Functions"),(0,o.kt)("p",null,"As long as you have the ABI for a contract, you can apply the workflow outlined above to call other functions."),(0,o.kt)("p",null,"For instance, if we wanted to approve a spend, we would create a transaction json file with the necessary data such as the example below."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/5afe/safe-tasks/blob/master/tx_input.sample.json"},(0,o.kt)("inlineCode",{parentName:"a"},"tx_input.sample.json:"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'[\n    {\n        "to": "0xc778417E063141139Fce010982780140Aa0cD5Ab",\n        "value": "0.1",\n        "operation": 0\n    },\n    {\n        "to": "0xc778417E063141139Fce010982780140Aa0cD5Ab",\n        "value": "0",\n        "method": "approve(address,uint256)",\n        "params": [\n            "0xd0Dab4E640D95E9E8A47545598c33e31bDb53C7c",\n            "1000000000000"\n        ],\n        "operation": 0\n    }\n]\n')),(0,o.kt)("p",null,"Then we would use the same tasks from before:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Generate the txn data with ",(0,o.kt)("inlineCode",{parentName:"li"},"yarn safe propose-multi"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe propose-multi --network subnet <SAFE-ADDRESS> <TX-FILE> --export <TX-DATA-FILE-NAME>\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Create a proposal with ",(0,o.kt)("inlineCode",{parentName:"li"},"yarn safe propose"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe propose --network subnet <SAFE-ADDRESS> --data <TX-DATA> --to <TARGET-ADDRESS>\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Sign the proposal with ",(0,o.kt)("inlineCode",{parentName:"li"},"yarn safe sign-proposal"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn safe sign-proposal <SAFE-TX-HASH>\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Submit the proposal with ",(0,o.kt)("inlineCode",{parentName:"li"},"yarn safe submit-proposal"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn submit <SAFE-TX-HASH>\n")),(0,o.kt)("h2",{id:"managing-a-proxy-using-gnosis-safe"},"Managing a Proxy Using Gnosis Safe"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This part of the tutorial is better suited for advanced users as the operations from each project work together asynchronously which may lead to errors if the user misses a step."),(0,o.kt)("p",{parentName:"admonition"},"Please pay careful attention to which project and which step of the workflow you are in when following this part of the tutorial.")),(0,o.kt)("p",null,"This part of the article aims to illustrate the use of a Multi-Signature Safe Protocol to manage an ",(0,o.kt)("a",{parentName:"p",href:"https://docs.openzeppelin.com/contracts/4.x/api/proxy"},"Upgradeable Proxy Smart Contract"),". For this tutorial we will use a ",(0,o.kt)("a",{parentName:"p",href:"https://blog.openzeppelin.com/the-transparent-proxy-pattern/"},"Transparent Upgradeable Proxy"),". To learn more about proxy upgrade patterns, please review the Open Zeppelin docs ",(0,o.kt)("a",{parentName:"p",href:"https://docs.openzeppelin.com/upgrades-plugins/1.x/proxies"},"here")," and see the diagram below."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Proxy",src:a(9286).Z,width:"766",height:"92"})),(0,o.kt)("p",null,"Some use cases may apply such as:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Upgrading a Vault")," - Point the proxy implementation to a new treasury smart contract."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Upgrading a Registry")," - Migrate a database of user addresses and privileges to a new smart contract. This may include Owners, Stakers, Validators, Token holders, Whitelists. ")),(0,o.kt)("h3",{id:"setup-1"},"Setup"),(0,o.kt)("p",null,"For this part of the tutorial, we will need to clone the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/lux-smart-contract-quickstart/tree/proxy-contract-implementation"},"Lux Smart Contract Quickstart repository")," and switch to the ",(0,o.kt)("inlineCode",{parentName:"p"},"proxy-contract-implementation")," branch the by running the following Commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"git clone https://github.com/luxdefi/lux-smart-contract-quickstart\ncd lux-smart-contract-quickstart\ngit switch proxy-contract-implementation \nyarn\n")),(0,o.kt)("p",null,"Next, implement the environment and network setup ",(0,o.kt)("a",{parentName:"p",href:"#setup"},"above")," to prepare the Proxy Smart Contract project."),(0,o.kt)("h3",{id:"deploy-the-proxy"},"Deploy the Proxy"),(0,o.kt)("p",null,"Let's deploy the proxy contracts by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"npx hardhat run --network subnet scripts/deployStorage.ts\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Deploying Storage...\nStorage deployed to: 0x5dda6Fa725248D95d2086F4fcEb6bA6bdfEbc45b\n{ number: '42' }\n")),(0,o.kt)("p",null,"This command actually executed 3 operations:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Deployed a Proxy Admin contract and assigned the deployer's address as the owner"),(0,o.kt)("li",{parentName:"ul"},"Deployed the ",(0,o.kt)("inlineCode",{parentName:"li"},"Storage")," contract and set the ",(0,o.kt)("inlineCode",{parentName:"li"},"number")," to 42"),(0,o.kt)("li",{parentName:"ul"},"Deployed a Transparent upgradeable proxy and added the ",(0,o.kt)("inlineCode",{parentName:"li"},"Storage")," contract's address as its ",(0,o.kt)("inlineCode",{parentName:"li"},"implementation"))),(0,o.kt)("p",null,"Notice the line ",(0,o.kt)("em",{parentName:"p"},"Storage deployed to:")," in our deployment output includes the address ",(0,o.kt)("inlineCode",{parentName:"p"},"0x5dda6Fa725248D95d2086F4fcEb6bA6bdfEbc45b")),(0,o.kt)("p",null,"This is our proxy address which you can also find in ",(0,o.kt)("inlineCode",{parentName:"p"},".openzeppelin"),", a session file that includes all of the project's proxy contract information."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "manifestVersion": "3.2",\n  "admin": {\n    "address": "0xd8215b138ef5eA0ecFc49fBaD1a30A18a109A06c",\n    "txHash": "0xf0457a8ca950fe526cc9d60fb578761538d037ea2f939758c6810a3b1e6b95d4"\n  },\n  "proxies": [\n    {\n      "address": "0x5dda6Fa725248D95d2086F4fcEb6bA6bdfEbc45b",\n      "txHash": "0x10480134bfe1709277e4e03aeed2825355c87f6a35633c6ed06a114fc9ce06a6",\n      "kind": "transparent"\n    }\n  ],\n  "impls": {\n    "cba9f8cf52e3c449631a04ea218a6cedcaf7c366669cfc257c89a008266c768f": {\n      "address": "0x42420054623f00CE5F04Ae4Fb8905f3Dd04DD27a",\n      "txHash": "0x6494655b779015d7cac8f32b7fa1d6437616de71e71312cbf17cf9cc1054ea35",\n      "layout": {\n        "storage": [\n          {\n            "label": "number",\n            "offset": 0,\n            "slot": "0",\n            "type": "t_uint256",\n            "contract": "Storage",\n            "src": "contracts/Storage.sol:7"\n          }\n        ],\n        "types": {\n          "t_uint256": {\n            "label": "uint256",\n            "numberOfBytes": "32"\n          }\n        }\n      }\n    }\n  }\n}\n')),(0,o.kt)("h3",{id:"transfer-the-proxy-admin-role-to-a-safe"},"Transfer the Proxy Admin Role to a Safe"),(0,o.kt)("p",null,"Next, let's transfer proxy admin privileges to our Gnosis Safe by adding it's address to our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/lux-smart-contract-quickstart/blob/proxy-contract-implementation/scripts/transferProxyOwnership.ts"},(0,o.kt)("inlineCode",{parentName:"a"},"transferProxyOwnership.ts"))," script."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// transferProxyOwnership.ts\n  const gnosisSafe = "<YOUR-SAFE-ADDRESS-HERE>"\n')),(0,o.kt)("p",null,"Next run the script to execute the transfer."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"npx hardhat run --network subnet scripts/transferProxyOwnership.ts\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Transferring ownership of ProxyAdmin...\n\u2714 0x1189D8E94cAD398612cc4638f80B18d421e74a31 (transparent) proxy ownership transfered through admin proxy\nTransferred ownership of ProxyAdmin to: 0xCA2922E98339C359D818b8f7ad3c897C0e18a7ff\n")),(0,o.kt)("p",null,"Now that we have transferred ownership to our Gnosis Safe, we can upgrade the proxy implementation. "),(0,o.kt)("h3",{id:"upgrade-the-contract"},"Upgrade the Contract"),(0,o.kt)("h4",{id:"deploy-a-new-logic-contract"},"Deploy a New Logic Contract"),(0,o.kt)("p",null,"For this step we will deploy a new implementation for the proxy contract to interact with."),(0,o.kt)("p",null,"Run the following command to deploy ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/lux-smart-contract-quickstart/blob/076f191ca74cd1d15304f7fb945aa53e860ab506/contracts/StorageV2.sol"},(0,o.kt)("inlineCode",{parentName:"a"},"StorageV2")),", an upgraded version of our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/lux-smart-contract-quickstart/blob/076f191ca74cd1d15304f7fb945aa53e860ab506/contracts/Storage.sol"},(0,o.kt)("inlineCode",{parentName:"a"},"Storage"))," contract:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"npx hardhat run --network subnet scripts/deployStorageV2.ts\n")),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Deploying Storage2...\nStorageV2 deployed to: 0x32CaF0D54B0578a96A1aDc7269F19e7398358174\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"0x32CaF0D54B0578a96A1aDc7269F19e7398358174")," will be our new ",(0,o.kt)("inlineCode",{parentName:"p"},"implementation")," address, the logic contract consumed by the proxy contract."),(0,o.kt)("h4",{id:"use-hardhat-to-interact-with-the-proxy"},"Use Hardhat to Interact with the Proxy"),(0,o.kt)("p",null,"Now is a good time for us to use Hardhat to interact with the proxy to ensure that we are on the right track."),(0,o.kt)("p",null,"First setup Hardhat console to run on your subnet."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"npx hardhat console --network subnet\n")),(0,o.kt)("p",null,"Then connect to the contracts with the following steps:"),(0,o.kt)("p",null,"Connect hardhat to an instance of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Storage")," contract at the deployed address."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"> const storage = await ethers.getContractAt('Storage','<YOUR-PROXY-ADDRESS-HERE>')\n")),(0,o.kt)("p",null,"You can reference your proxy address from the ",(0,o.kt)("inlineCode",{parentName:"p"},"Storage")," contract deployment or ",(0,o.kt)("inlineCode",{parentName:"p"},".openzeppelin"),"."),(0,o.kt)("p",null,"Retrieve the stored number set during deployment."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},">(await storage.retrieve()).toString()\n'42'\n")),(0,o.kt)("h4",{id:"create-the-upgrade-tx"},"Create the Upgrade Tx"),(0,o.kt)("p",null,"Next we will use the ",(0,o.kt)("inlineCode",{parentName:"p"},"propose-multi")," task to create an upgrade tx. "),(0,o.kt)("p",null,"Create a new file, ",(0,o.kt)("inlineCode",{parentName:"p"},"upgrade.json"),", in the ",(0,o.kt)("inlineCode",{parentName:"p"},"examples")," directory of your ",(0,o.kt)("inlineCode",{parentName:"p"},"safe-task")," project."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// examples/upgrade.json\n[\n    {\n        "to": "<YOUR-PROXY-ADMIN-ADDRESS-HERE>",\n        "value": "0",\n        "method": "upgrade(address,address)",\n        "params": [\n            "<YOUR-PROXY-ADDRESS-HERE>",\n            "<YOUR-IMPLEMENTATION-ADDRESS-HERE>"\n        ],\n        "operation": 0\n    }\n]\n')),(0,o.kt)("p",null,"Ensure that the following parameters are set correctly:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"to")," - Should be set to the proxy admin address found in ",(0,o.kt)("inlineCode",{parentName:"li"},'lux-smart-contract-quickstart/.openzeppelin/"<YOUR-NETWORK-SESSION>".json'),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"method")," - Ensure that you have the function name and argument types correct."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"params")," - An ",(0,o.kt)("inlineCode",{parentName:"li"},"upgrade")," call needs both a ",(0,o.kt)("inlineCode",{parentName:"li"},"proxy address")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"implementation address")," to be passed in as arguments. In this case we, our implementation address will be our ",(0,o.kt)("inlineCode",{parentName:"li"},"StorageV2")," contract address.")),(0,o.kt)("p",null,"Next create the Tx data by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},'yarn safe propose-multi "<YOUR-SAFE-ADDRESS>" examples/upgrade.json --export examples/upgradeData.json\n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "version": "1.0",\n  "chainId": "99999",\n  "createdAt": 1658795403593,\n  "meta": {\n    "name": "Custom Transactions"\n  },\n  "transactions": [\n    {\n      "to": "0xd8215b138ef5eA0ecFc49fBaD1a30A18a109A06c",\n      "value": "0",\n      "data": "0x99a88ec40000000000000000000000005dda6fa725248d95d2086f4fceb6ba6bdfebc45b00000000000000000000000032caf0d54b0578a96a1adc7269f19e7398358174",\n      "operation": 0\n    }\n  ]\n}\n')),(0,o.kt)("p",null,"Notice that the ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," value consists of the calldata we will use to call the ",(0,o.kt)("inlineCode",{parentName:"p"},"upgrade")," function."),(0,o.kt)("h4",{id:"create-the-proposal"},"Create the Proposal"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},'yarn safe propose --network subnet "<YOUR-SAFE-ADDRESS-HERE>" --to "<YOUR-PROXY-ADMIN-ADDRESS-HERE>" --data "<YOUR-TX-DATA-HERE>"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Running on subnet\nUsing Safe at 0xCA2922E98339C359D818b8f7ad3c897C0e18a7ff\nSafe transaction hash: 0xd9a5d0e57eaa1763f36cb7208c227e9ee2d6ec03ae4a4947bb8a99a96eef6376\n")),(0,o.kt)("h4",{id:"sign-1"},"Sign"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'yarn safe sign-proposal "<YOUR-SAFE-TX-HASH-HERE>" \n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Using Safe at 0xCA2922E98339C359D818b8f7ad3c897C0e18a7ff with 0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC\nSignature: 0x702f6f29903e434ea5fee10a79541a463a2c18d730f32c0b61a1101960aa802d317974c0d3d6cbe2fff53a65b911906613aad8da23da2be74afaea688d1bd49220\n")),(0,o.kt)("h4",{id:"submit-2"},"Submit"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'yarn safe submit-proposal "<YOUR-SAFE-TX-HASH-HERE>" \n')),(0,o.kt)("p",null,"Output:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"Running on subnet\nUsing Safe at 0xCA2922E98339C359D818b8f7ad3c897C0e18a7ff with 0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC\nEthereum transaction hash: 0x48f142e5174532c32b191cf3eee6a5d93320330b2c0e8dfff61d53c46064e3c4\n")),(0,o.kt)("p",null,"Our transaction hash let's us know that the EVM has mined the transaction!"),(0,o.kt)("h4",{id:"use-hardhat-to-interact-with-the-upgraded-proxy"},"Use Hardhat to Interact With the Upgraded Proxy"),(0,o.kt)("p",null,"Now we will use hardhat to ensure that our proxy was successfully upgraded."),(0,o.kt)("p",null,"First, navigate back to hardhat console in your ",(0,o.kt)("inlineCode",{parentName:"p"},"lux-smart-contract-quickstart-project")," and instantiate ",(0,o.kt)("inlineCode",{parentName:"p"},"StorageV2")," at our proxy address."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"> const storageV2 = await ethers.getContractAt('StorageV2','YOUR-PROXY-ADDRESS-HERE')\n")),(0,o.kt)("p",null,"Notice that we are now using ",(0,o.kt)("inlineCode",{parentName:"p"},"StorageV2")," at our original proxy address. Since, we've upgraded our implementation, our we can call the original address but interact with the new contract. "),(0,o.kt)("p",null,"Let's check the stored value to ensure that we have retained the data from the previous implementation.."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"> (await storageV2.retrieve()).toString()\n'42'\n")),(0,o.kt)("p",null,"Great! We've successfully retrieved the previously stored value from the contract!"),(0,o.kt)("p",null,"Now let's call our upgraded contract's new function ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/lux-smart-contract-quickstart/blob/964129dfb7cb9271b396927e9ea8b009e321cda1/contracts/StorageV2.sol#L24-L27"},(0,o.kt)("inlineCode",{parentName:"a"},"increment"))," which adds 1 to the stored value:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"> await storageV2.increment()\n{\n  hash: '0x2ed9dff3f909a50f191d41ff59ab423907fbc23b4cf7b3721907d933a710b848',\n  type: 0,\n  accessList: null,\n  blockHash: '0x70be069ddf5c353cef0f6e3047b20e9e8c52b837228c131d3e0ad8c84b4c39f4',\n  blockNumber: 124,\n  transactionIndex: 0,\n  confirmations: 1,\n  from: '0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC',\n  gasPrice: BigNumber { _hex: '0x05d21dba00', _isBigNumber: true },\n  gasLimit: BigNumber { _hex: '0x8931', _isBigNumber: true },\n  to: '0x5dda6Fa725248D95d2086F4fcEb6bA6bdfEbc45b',\n  value: BigNumber { _hex: '0x00', _isBigNumber: true },\n  nonce: 125,\n  data: '0xd09de08a',\n  r: '0xd5ee62766bf7f88946c0d565dbb90b80e2a93df42137b1c13ac44808f7727297',\n  s: '0x4f46a263fdd6f5518ca2cfd43440ee14b5dfec2322e045a3eebdd1d51558c6db',\n  v: 200034,\n  creates: null,\n  chainId: 99999,\n  wait: [Function (anonymous)]\n}\n")),(0,o.kt)("p",null,"The transaction data shows us that the operation was successful!"),(0,o.kt)("p",null,"Now, let's check the stored number."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"> (await storageV2.retrieve()).toString()\n'43'\n")),(0,o.kt)("p",null,"And there you have it.\nWe have successfully done the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Deployed a ",(0,o.kt)("a",{parentName:"li",href:"https://blog.openzeppelin.com/the-transparent-proxy-pattern/"},"Transparent Upgradeable Proxy"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/contracts/4.x/api/access#Ownable-transferOwnership-address-"},"Transferred proxy admin ownership")," to a Gnosis Safe."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.openzeppelin.com/contracts/4.x/api/proxy#ProxyAdmin-upgrade-contract-TransparentUpgradeableProxy-address-"},"Upgraded our proxy")," to a new implementation.")),(0,o.kt)("h2",{id:"local-workflow"},"Local Workflow"),(0,o.kt)("h3",{id:"start-the-local-network"},"Start the Local Network"),(0,o.kt)("p",null,"Follow ",(0,o.kt)("a",{parentName:"p",href:"/subnets/create-a-local-subnet"},"Create a Local Test Network")," to start a local Subnet EVM. Make sure that you get one of the port numbers by following running the command: ",(0,o.kt)("a",{parentName:"p",href:"../subnets/create-a-local-subnet#checking-network-status"},(0,o.kt)("inlineCode",{parentName:"a"},"lux network status")),". In this tutorial, we will assume one of the ports is 49435."),(0,o.kt)("h3",{id:"locate-the-hardhat-network-configuration-and-make-necessary-changes"},"Locate the Hardhat Network Configuration and Make Necessary Changes"),(0,o.kt)("p",null,"Most of the code is already set to follow this tutorial on a local network. Do check the following values in ",(0,o.kt)("inlineCode",{parentName:"p"},"hardhat.config.ts")," to make sure they are correct."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'networks: {\n  subnet: {\n    url: `http://127.0.0.1:49435/ext/bc/2Ek1MWR7jiEJr3o9tuJAH79JkuERzKqQDcR2s6R2e5Dyz54Wit/rpc`,\n    chainId: 99999,\n    gasPrice: "auto",\n    accounts: [\n      "56289e99c94b6912bfc12adc093c9b51124f0dc54ac7a766b2bc5ccf558d8027",\n    ],\n  },\n}\n')),(0,o.kt)("p",null,"Then run the deployment and interaction methods to follow the exercises in this tutorial."))}h.isMDXComponent=!0},9286:function(e,t,a){t.Z=a.p+"assets/images/Proxy-IMG-06c72d242440e9003e2d7b432d0ac511.png"}}]);