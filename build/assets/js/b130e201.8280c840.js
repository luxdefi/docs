"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3101],{68326:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var n=t(85893),o=t(11151);const a={},s="HardhatConfigAfterBurnOrLock.js",c={id:"deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes/hardhatConfigAfterBurnOrLock.js",title:"HardhatConfigAfterBurnOrLock.js",description:"",source:"@site/docs/deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes/hardhatConfigAfterBurnOrLock.js.md",sourceDirName:"deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes",slug:"/deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes/hardhatConfigAfterBurnOrLock.js",permalink:"/deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes/hardhatConfigAfterBurnOrLock.js",draft:!1,unlisted:!1,editUrl:"https://github.com/luxdefi/docs/edit/main/docs/deprecated/tutorials-contest/2022/erc20-as-subnet-gas-token/codes/hardhatConfigAfterBurnOrLock.js.md",tags:[],version:"current",frontMatter:{}},d={},i=[];function u(e){const r={code:"code",h1:"h1",pre:"pre",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"hardhatconfigafterburnorlockjs",children:"HardhatConfigAfterBurnOrLock.js"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-javascript",children:'require("@nomicfoundation/hardhat-toolbox")\n/* Import task from hardhat config */\nconst { task } = require("hardhat/config")\n\n/* Import deploy function */\nrequire("./scripts/deploy")\n/* Import balance function */\nrequire("./scripts/balance")\n/* Import burnOrLock function */\nrequire("./scripts/burnOrLock")\n\n/* Create deploy task */\ntask(\n  "deploy",\n  "Deploy bridges on both networks and deploy LuxToken, also update the admins"\n).setAction(async (taskArgs, hre) => {\n  await deploy().catch((error) => {\n    console.error(error)\n    process.exitCode = 1\n  })\n})\n\n/* Create balance task  */\ntask("balance", "Get token balance from a network")\n  /* Add `from` parameter indication the used network which is either lux or subnet */\n  .addParam("from", "Network to get balance from")\n  .setAction(async (taskArgs, hre) => {\n    await balance(taskArgs.from).catch((error) => {\n      console.error(error)\n      process.exitCode = 1\n    })\n  })\n\n/* Create burnOrRelease task  */\ntask("burnOrLock", "Burn or lock token from a network")\n  /* Add `from` parameter indication the used network which is either lux or subnet */\n  .addParam("from", "Network to burn or lock from")\n  /* Add `amount` parameter indication the amount to burn or lock */\n  .addParam("amount", "Amount to burn or lock")\n  .setAction(async (taskArgs, hre) => {\n    await burnOrLock(taskArgs.from, taskArgs.amount).catch((error) => {\n      console.error(error)\n      process.exitCode = 1\n    })\n  })\n\n/** @type import(\'hardhat/config\').HardhatUserConfig */\nmodule.exports = {\n  solidity: "0.8.9",\n}\n'})})]})}function l(e={}){const{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},11151:(e,r,t)=>{t.d(r,{Z:()=>c,a:()=>s});var n=t(67294);const o={},a=n.createContext(o);function s(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);