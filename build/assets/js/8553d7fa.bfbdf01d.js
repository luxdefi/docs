"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[3653],{3905:function(e,a,t){t.d(a,{Zo:function(){return d},kt:function(){return c}});var n=t(7294);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=n.createContext({}),p=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(o.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(t),c=i,h=u["".concat(o,".").concat(c)]||u[c]||m[c]||l;return t?n.createElement(h,r(r({ref:a},d),{},{components:t})):n.createElement(h,r({ref:a},d))}));function c(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=u;var s={};for(var o in a)hasOwnProperty.call(a,o)&&(s[o]=a[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var p=2;p<l;p++)r[p]=t[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5479:function(e,a,t){t.r(a),t.d(a,{assets:function(){return d},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var n=t(7462),i=t(3366),l=(t(7294),t(3905)),r=["components"],s={description:"More information available regarding Lux Go APIs and learning how to interact with the C-Chain.",sidebar_position:4},o="Contract Chain (C-Chain) API",p={unversionedId:"apis/luxd/apis/c-chain",id:"apis/luxd/apis/c-chain",title:"Contract Chain (C-Chain) API",description:"More information available regarding Lux Go APIs and learning how to interact with the C-Chain.",source:"@site/docs/apis/luxd/apis/c-chain.md",sourceDirName:"apis/luxd/apis",slug:"/apis/luxd/apis/c-chain",permalink:"/apis/luxd/apis/c-chain",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/apis/luxd/apis/c-chain.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{description:"More information available regarding Lux Go APIs and learning how to interact with the C-Chain.",sidebar_position:4},sidebar:"apis",previous:{title:"Platform Chain (P-Chain) API",permalink:"/apis/luxd/apis/p-chain"},next:{title:"Exchange Chain (X-Chain) API",permalink:"/apis/luxd/apis/x-chain"}},d={},m=[{value:"Deploying a Smart Contract",id:"deploying-a-smart-contract",level:2},{value:"Ethereum APIs",id:"ethereum-apis",level:2},{value:"Ethereum API Endpoints",id:"ethereum-api-endpoints",level:3},{value:"JSON-RPC Endpoints",id:"json-rpc-endpoints",level:4},{value:"WebSocket Endpoints",id:"websocket-endpoints",level:4},{value:"Methods",id:"methods",level:3},{value:"Standard Ethereum APIs",id:"standard-ethereum-apis",level:4},{value:"eth_getAssetBalance",id:"eth_getassetbalance",level:4},{value:"eth_baseFee",id:"eth_basefee",level:3},{value:"<strong>Signature</strong>",id:"signature",level:4},{value:"<strong>Example Call</strong>",id:"example-call",level:4},{value:"<strong>Example Response</strong>",id:"example-response",level:4},{value:"eth_maxPriorityFeePerGas",id:"eth_maxpriorityfeepergas",level:3},{value:"<strong>Signature</strong>",id:"signature-1",level:4},{value:"<strong>Example Call</strong>",id:"example-call-1",level:4},{value:"<strong>Example Response</strong>",id:"example-response-1",level:4},{value:"Lux Specific APIs",id:"lux-specific-apis",level:2},{value:"Endpoints",id:"endpoints",level:3},{value:"lux.getAtomicTx",id:"luxgetatomictx",level:3},{value:"Signature",id:"signature-2",level:4},{value:"Example Call",id:"example-call-2",level:4},{value:"Example Response",id:"example-response-2",level:4},{value:"lux.export",id:"luxexport",level:3},{value:"Signature",id:"signature-3",level:4},{value:"Example Call",id:"example-call-3",level:4},{value:"Example Response",id:"example-response-3",level:4},{value:"lux.exportLUX",id:"luxexportlux",level:3},{value:"Signature",id:"signature-4",level:4},{value:"Example Call",id:"example-call-4",level:4},{value:"Example Response",id:"example-response-4",level:4},{value:"lux.exportKey",id:"luxexportkey",level:3},{value:"Signature",id:"signature-5",level:4},{value:"Example Call",id:"example-call-5",level:4},{value:"Example Response",id:"example-response-5",level:4},{value:"lux.getUTXOs",id:"luxgetutxos",level:3},{value:"<strong>Signature</strong>",id:"signature-6",level:4},{value:"<strong>Example</strong>",id:"example",level:4},{value:"lux.import",id:"luximport",level:3},{value:"Signature",id:"signature-7",level:4},{value:"Example Call",id:"example-call-6",level:4},{value:"Example Response",id:"example-response-6",level:4},{value:"lux.importLUX",id:"luximportlux",level:3},{value:"Signature",id:"signature-8",level:4},{value:"Example Call",id:"example-call-7",level:4},{value:"Example Response",id:"example-response-7",level:4},{value:"lux.importKey",id:"luximportkey",level:3},{value:"Signature",id:"signature-9",level:4},{value:"Example Call",id:"example-call-8",level:4},{value:"Example Response",id:"example-response-8",level:4},{value:"lux.issueTx",id:"luxissuetx",level:3},{value:"<strong>Signature</strong>",id:"signature-10",level:4},{value:"<strong>Example Call</strong>",id:"example-call-9",level:4},{value:"<strong>Example Response</strong>",id:"example-response-9",level:4},{value:"lux.getAtomicTxStatus",id:"luxgetatomictxstatus",level:3},{value:"<strong>Signature</strong>",id:"signature-11",level:4},{value:"<strong>Example Call</strong>",id:"example-call-10",level:4},{value:"<strong>Example Response</strong>",id:"example-response-10",level:4},{value:"Admin API",id:"admin-api",level:2},{value:"Endpoint",id:"endpoint",level:3},{value:"Methods",id:"methods-1",level:3},{value:"admin.setLogLevel",id:"adminsetloglevel",level:4},{value:"<strong>Signature</strong>",id:"signature-12",level:4},{value:"<strong>Example Call</strong>",id:"example-call-11",level:4},{value:"<strong>Example Response</strong>",id:"example-response-11",level:4},{value:"admin.startCPUProfiler",id:"adminstartcpuprofiler",level:4},{value:"<strong>Signature</strong>",id:"signature-13",level:4},{value:"<strong>Example Call</strong>",id:"example-call-12",level:4},{value:"<strong>Example Response</strong>",id:"example-response-12",level:4},{value:"admin.stopCPUProfiler",id:"adminstopcpuprofiler",level:4},{value:"<strong>Signature</strong>",id:"signature-14",level:4},{value:"<strong>Example Call</strong>",id:"example-call-13",level:4},{value:"<strong>Example Response</strong>",id:"example-response-13",level:4},{value:"admin.memoryProfile",id:"adminmemoryprofile",level:4},{value:"<strong>Signature</strong>",id:"signature-15",level:4},{value:"<strong>Example Call</strong>",id:"example-call-14",level:4},{value:"<strong>Example Response</strong>",id:"example-response-14",level:4},{value:"admin.lockProfile",id:"adminlockprofile",level:4},{value:"<strong>Signature</strong>",id:"signature-16",level:4},{value:"<strong>Example Call</strong>",id:"example-call-15",level:4},{value:"<strong>Example Response</strong>",id:"example-response-15",level:4}],u={toc:m};function c(e){var a=e.components,t=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"contract-chain-c-chain-api"},"Contract Chain (C-Chain) API"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"Ethereum has its own notion of ",(0,l.kt)("inlineCode",{parentName:"p"},"networkID")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"chainID"),". These have no relationship to Lux\u2019s view of networkID and chainID and are purely internal to the ",(0,l.kt)("a",{parentName:"p",href:"/overview/getting-started/lux-platform#contract-chain-c-chain"},"C-Chain"),". On Mainnet, the C-Chain uses ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"43114")," for these values. On the Fuji Testnet, it uses ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"43113")," for these values. ",(0,l.kt)("inlineCode",{parentName:"p"},"networkID")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"chainID")," can also be obtained using the ",(0,l.kt)("inlineCode",{parentName:"p"},"net_version")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"eth_chainId")," methods.")),(0,l.kt)("h2",{id:"deploying-a-smart-contract"},"Deploying a Smart Contract"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/dapps/smart-contracts/deploy-a-smart-contract-on-lux-using-remix-and-metamask"},"Deploy a Smart Contract on Lux Using Remix and MetaMask")),(0,l.kt)("h2",{id:"ethereum-apis"},"Ethereum APIs"),(0,l.kt)("h3",{id:"ethereum-api-endpoints"},"Ethereum API Endpoints"),(0,l.kt)("h4",{id:"json-rpc-endpoints"},"JSON-RPC Endpoints"),(0,l.kt)("p",null,"To interact with C-Chain via the JSON-RPC endpoint:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"/ext/bc/C/rpc\n")),(0,l.kt)("p",null,"To interact with other instances of the EVM via the JSON-RPC endpoint:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"/ext/bc/blockchainID/rpc\n")),(0,l.kt)("p",null,"where ",(0,l.kt)("inlineCode",{parentName:"p"},"blockchainID")," is the ID of the blockchain running the EVM."),(0,l.kt)("h4",{id:"websocket-endpoints"},"WebSocket Endpoints"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"On the ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/public-api-server#supported-apis"},"public api node"),", it only supports C-Chain websocket API calls for API methods that don't exist on the C-Chain's HTTP API")),(0,l.kt)("p",null,"To interact with C-Chain via the websocket endpoint:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"/ext/bc/C/ws\n")),(0,l.kt)("p",null,"For example, to interact with the C-Chain's Ethereum APIs via websocket on localhost you can use:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"ws://127.0.0.1:9650/ext/bc/C/ws\n")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"On localhost, use ",(0,l.kt)("inlineCode",{parentName:"p"},"ws://"),". When using the ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/public-api-server"},"Public API")," or another host that supports encryption, use ",(0,l.kt)("inlineCode",{parentName:"p"},"wss://"),".")),(0,l.kt)("p",null,"To interact with other instances of the EVM via the websocket endpoint:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"/ext/bc/blockchainID/ws\n")),(0,l.kt)("p",null,"where ",(0,l.kt)("inlineCode",{parentName:"p"},"blockchainID")," is the ID of the blockchain running the EVM."),(0,l.kt)("h3",{id:"methods"},"Methods"),(0,l.kt)("h4",{id:"standard-ethereum-apis"},"Standard Ethereum APIs"),(0,l.kt)("p",null,"Lux offers an API interface identical to Geth's API except that it only supports the following services:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"web3_")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"net_")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"eth_")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"personal_")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txpool_")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"debug_")," (note: this is turned off on the public api node.)")),(0,l.kt)("p",null,"You can interact with these services the same exact way you\u2019d interact with Geth. See the ",(0,l.kt)("a",{parentName:"p",href:"https://eth.wiki/json-rpc/API"},"Ethereum Wiki\u2019s JSON-RPC Documentation")," and ",(0,l.kt)("a",{parentName:"p",href:"https://geth.ethereum.org/docs/rpc/server"},"Geth\u2019s JSON-RPC Documentation")," for a full description of this API."),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"For batched requests on the ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/public-api-server"},"public api node")," , the maximum number of items is 40. We are working on to support a larger batch size.")),(0,l.kt)("h4",{id:"eth_getassetbalance"},"eth_getAssetBalance"),(0,l.kt)("p",null,"In addition to the standard Ethereum APIs, Lux offers ",(0,l.kt)("inlineCode",{parentName:"p"},"eth_getAssetBalance")," to retrieve the balance of first class Lux Native Tokens on the C-Chain (excluding LUX, which must be fetched with ",(0,l.kt)("inlineCode",{parentName:"p"},"eth_getBalance"),")."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"eth_getAssetBalance({\n    address: string,\n    blk: BlkNrOrHash,\n    assetID: string,\n}) -> {balance: int}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address")," owner of the asset"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blk")," is the block number or hash at which to retrieve the balance"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetID")," id of the asset for which the balance is requested")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Call")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "eth_getAssetBalance",\n    "params": [\n        "0x8723e5773847A4Eb5FeEDabD9320802c5c812F46",\n        "latest",\n        "3RvKBAmQnfYionFXMfW5P8TDZgZiogKbHjM8cjpu16LKAgF5T"\n    ],\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/rpc\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": "0x1388"\n}\n')),(0,l.kt)("h3",{id:"eth_basefee"},"eth_baseFee"),(0,l.kt)("p",null,"Get the base fee for the next block."),(0,l.kt)("h4",{id:"signature"},(0,l.kt)("strong",{parentName:"h4"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"eth_baseFee() -> {}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result")," is the hex value of the base fee for the next block."),(0,l.kt)("h4",{id:"example-call"},(0,l.kt)("strong",{parentName:"h4"},"Example Call")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"eth_baseFee",\n    "params" :[]\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/rpc\n')),(0,l.kt)("h4",{id:"example-response"},(0,l.kt)("strong",{parentName:"h4"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": "0x34630b8a00"\n}\n')),(0,l.kt)("h3",{id:"eth_maxpriorityfeepergas"},"eth_maxPriorityFeePerGas"),(0,l.kt)("p",null,"Get the priority fee needed to be included in a block."),(0,l.kt)("h4",{id:"signature-1"},(0,l.kt)("strong",{parentName:"h4"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"eth_maxPriorityFeePerGas() -> {}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"result")," is hex value of the priority fee needed to be included in a block."),(0,l.kt)("h4",{id:"example-call-1"},(0,l.kt)("strong",{parentName:"h4"},"Example Call")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"eth_maxPriorityFeePerGas",\n    "params" :[]\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/rpc\n')),(0,l.kt)("h4",{id:"example-response-1"},(0,l.kt)("strong",{parentName:"h4"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": "0x2540be400"\n}\n')),(0,l.kt)("p",null,"For more information on dynamic fees see the ",(0,l.kt)("a",{parentName:"p",href:"/quickstart/transaction-fees#c-chain-fees"},"C-Chain section of the transaction fee documentation"),"."),(0,l.kt)("h2",{id:"lux-specific-apis"},"Lux Specific APIs"),(0,l.kt)("h3",{id:"endpoints"},"Endpoints"),(0,l.kt)("p",null,"To interact with the ",(0,l.kt)("inlineCode",{parentName:"p"},"lux")," specific RPC calls on the C-Chain:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"/ext/bc/C/lux\n")),(0,l.kt)("p",null,"To interact with other instances of the EVM LUX endpoints:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"/ext/bc/blockchainID/lux\n")),(0,l.kt)("h3",{id:"luxgetatomictx"},"lux.getAtomicTx"),(0,l.kt)("p",null,"Gets a transaction by its ID. Optional encoding parameter to specify the format for the returned transaction. Can only be ",(0,l.kt)("inlineCode",{parentName:"p"},"hex")," when a value is provided."),(0,l.kt)("h4",{id:"signature-2"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"lux.getAtomicTx({\n    txID: string,\n    encoding: string, //optional\n}) -> {\n    tx: string,\n    encoding: string,\n    blockHeight: string\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txID")," is the transacion ID. It should be in cb58 format."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"encoding")," is the encoding format to use. Can only be ",(0,l.kt)("inlineCode",{parentName:"li"},"hex")," when a value is provided.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tx")," is the transaction encoded to ",(0,l.kt)("inlineCode",{parentName:"li"},"encoding"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"encoding")," is the ",(0,l.kt)("inlineCode",{parentName:"li"},"encoding"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHeight")," is the height of the block which the transaction was included in.")),(0,l.kt)("h4",{id:"example-call-2"},"Example Call"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"lux.getAtomicTx",\n    "params" :{\n        "txID":"2GD5SRYJQr2kw5jE73trBFiAgVQyrCaeg223TaTyJFYXf2kPty",\n        "encoding": "hex"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/lux\n')),(0,l.kt)("h4",{id:"example-response-2"},"Example Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "tx": "0x000000000000000030399d0775f450604bd2fbc49ce0c5c1c6dfeb2dc2acb8c92c26eeae6e6df4502b19d891ad56056d9c01f18f43f58b5c784ad07a4a49cf3d1f11623804b5cba2c6bf000000018212d6807a0ec9c1b26321418fe7a548180b5be728ce53fe7e98ab5755ed316100000001dbcf890f77f49b96857648b72b77f9f82937f28a68704af05da0dc12ba53f2db00000005000003a352a382400000000100000000000000018db97c7cece249c2b98bdc0226cc4c2a57bf52fc000003a3529edd17dbcf890f77f49b96857648b72b77f9f82937f28a68704af05da0dc12ba53f2db000000010000000900000001ead19377f015422fbb8731204fcf6d6879dd05146c2d5b5594e2fea2cb420b2f40bd457b71e279e547790b28fe5482f278c76cf39b2dce5c2e6c53352fe6827d002cc7d20d",\n    "encoding": "hex",\n    "blockHeight": "1"\n  },\n  "id": 1\n}\n')),(0,l.kt)("h3",{id:"luxexport"},"lux.export"),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Not recommended for use on Mainnet. See warning notice in ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/keystore"},"Keystore API"),".")),(0,l.kt)("p",null,"Export an asset from the C-Chain to X-Chain or P-Chain. After calling this method, you must call the X-Chain's ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/x-chain#avmimport"},(0,l.kt)("inlineCode",{parentName:"a"},"avm.import"))," or P-Chain's ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/p-chain#platformimportlux"},(0,l.kt)("inlineCode",{parentName:"a"},"platform.import")),"."),(0,l.kt)("h4",{id:"signature-3"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"lux.export({\n    to: string,\n    amount: int,\n    assetID: string,\n    baseFee: int,\n    username: string,\n    password:string,\n}) -> {txID: string}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"to")," is the X-Chain or P-Chain address the asset is sent to."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"amount")," is the amount of the asset to send."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"assetID")," is the ID of the asset. To export LUX use ",(0,l.kt)("inlineCode",{parentName:"li"},'"LUX"')," as the ",(0,l.kt)("inlineCode",{parentName:"li"},"assetID"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"baseFee")," is the base fee that should be used when creating the transaction. If ommitted, a suggested fee will be used."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"username")," is the user that controls the address that transaction will be sent from."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"password")," is ",(0,l.kt)("inlineCode",{parentName:"li"},"username"),"\u2018s password.")),(0,l.kt)("h4",{id:"example-call-3"},"Example Call"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"lux.export",\n    "params" :{\n        "to":"X-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n        "amount": 500,\n        "assetID": "2nzgmhZLuVq8jc7NNu2eahkKwoJcbFWXWJCxHBVWAJEZkhquoK",\n        "username":"myUsername",\n        "password":"myPassword"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/lux\n')),(0,l.kt)("h4",{id:"example-response-3"},"Example Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "2W5JuFENitZKTpJsy9igBpTcEeBKxBHHGAUkgsSUnkjVVGQ9i8"\n  },\n  "id": 1\n}\n')),(0,l.kt)("h3",{id:"luxexportlux"},"lux.exportLUX"),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Not recommended for use on Mainnet. See warning notice in ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/keystore"},"Keystore API"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"DEPRECATED\u2014instead use")," ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/c-chain#luxexport"},(0,l.kt)("strong",{parentName:"a"},"lux.export")),"."),(0,l.kt)("p",null,"Send LUX from the C-Chain to X-Chain or P-Chain. After calling this method, you must call the X-Chain's ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/x-chain#avmimport"},(0,l.kt)("inlineCode",{parentName:"a"},"avm.import"))," or P-Chain's ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/p-chain#platformimportlux"},(0,l.kt)("inlineCode",{parentName:"a"},"platform.import"))," with assetID ",(0,l.kt)("inlineCode",{parentName:"p"},"LUX")," on the X-Chain to complete the transfer."),(0,l.kt)("h4",{id:"signature-4"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"lux.exportLUX({\n    to: string,\n    amount: int,\n    baseFee: int,\n    username: string,\n    password:string,\n}) -> {txID: string}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"to")," is X-Chain or P-Chain address the asset is sent to."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"amount")," is the amount of the asset to send."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"baseFee")," is the base fee that should be used when creating the transaction. If ommitted, a suggested fee will be used."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"username")," is the user that controls the address that transaction will be sent from."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"password")," is ",(0,l.kt)("inlineCode",{parentName:"li"},"username"),"\u2018s password.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txID")," is the txid of the completed ExportTx.")),(0,l.kt)("h4",{id:"example-call-4"},"Example Call"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"lux.exportLUX",\n    "params" :{\n        "from": ["0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC"],\n        "to":"X-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n        "amount": 500,\n        "changeAddr": "0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC",\n        "username":"myUsername",\n        "password":"myPassword"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/lux\n')),(0,l.kt)("h4",{id:"example-response-4"},"Example Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "2ffcxdkiKXXA4JdyRoS38dd7zoThkapNPeZuGPmmLBbiuBBHDa"\n  },\n  "id": 1\n}\n')),(0,l.kt)("h3",{id:"luxexportkey"},"lux.exportKey"),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Not recommended for use on Mainnet. See warning notice in ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/keystore"},"Keystore API"),".")),(0,l.kt)("p",null,"Get the private key that controls a given address. The returned private key can be added to a user with ",(0,l.kt)("inlineCode",{parentName:"p"},"lux.importKey"),"."),(0,l.kt)("h4",{id:"signature-5"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"lux.exportKey({\n    username: string,\n    password:string,\n    address:string\n}) -> {privateKey: string}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"username")," must control ",(0,l.kt)("inlineCode",{parentName:"li"},"address"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address")," is the address for which you want to export the corresponding private key. It should be in hex format.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"privateKey")," is the CB58 endcoded string representation of the private key that controls ",(0,l.kt)("inlineCode",{parentName:"li"},"address"),". It has a ",(0,l.kt)("inlineCode",{parentName:"li"},"PrivateKey-")," prefix and can be used to import a key via ",(0,l.kt)("inlineCode",{parentName:"li"},"lux.importKey"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"privateKeyHex")," is the hex string representation of the private key that controls ",(0,l.kt)("inlineCode",{parentName:"li"},"address"),". It can be used to import an account into Metamask.")),(0,l.kt)("h4",{id:"example-call-5"},"Example Call"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"lux.exportKey",\n    "params" :{\n        "username" :"myUsername",\n        "password":"myPassword",\n        "address": "0xc876DF0F099b3eb32cBB78820d39F5813f73E18C"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/lux\n')),(0,l.kt)("h4",{id:"example-response-5"},"Example Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "result": {\n        "privateKey": "PrivateKey-2o2uPgTSf3aR5nW6yLHjBEAiatAFKEhApvYzsjvAJKRXVWCYkE",\n        "privateKeyHex": "0xec381fb8d32168be4cf7f8d4ce9d8ca892d77ba574264f3665ad5edb89710157"\n    },\n    "id": 1\n}}\n')),(0,l.kt)("h3",{id:"luxgetutxos"},"lux.getUTXOs"),(0,l.kt)("p",null,"Gets the UTXOs that reference a given address."),(0,l.kt)("h4",{id:"signature-6"},(0,l.kt)("strong",{parentName:"h4"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"lux.getUTXOs(\n    {\n        addresses: string,\n        limit: int, //optional\n        startIndex: { //optional\n            address: string,\n            utxo: string\n        },\n        sourceChain: string,\n        encoding: string, //optional\n    },\n) ->\n{\n    numFetched: int,\n    utxos: []string,\n    endIndex: {\n        address: string,\n        utxo: string\n    }\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"utxos")," is a list of UTXOs such that each UTXO references at least one address in ",(0,l.kt)("inlineCode",{parentName:"li"},"addresses"),"."),(0,l.kt)("li",{parentName:"ul"},"At most ",(0,l.kt)("inlineCode",{parentName:"li"},"limit")," UTXOs are returned. If ",(0,l.kt)("inlineCode",{parentName:"li"},"limit")," is omitted or greater than 1024, it is set to 1024."),(0,l.kt)("li",{parentName:"ul"},"This method supports pagination. ",(0,l.kt)("inlineCode",{parentName:"li"},"endIndex")," denotes the last UTXO returned. To get the next set of UTXOs, use the value of ",(0,l.kt)("inlineCode",{parentName:"li"},"endIndex")," as ",(0,l.kt)("inlineCode",{parentName:"li"},"startIndex")," in the next call."),(0,l.kt)("li",{parentName:"ul"},"If ",(0,l.kt)("inlineCode",{parentName:"li"},"startIndex")," is omitted, will fetch all UTXOs up to ",(0,l.kt)("inlineCode",{parentName:"li"},"limit"),"."),(0,l.kt)("li",{parentName:"ul"},"When using pagination (ie when ",(0,l.kt)("inlineCode",{parentName:"li"},"startIndex")," is provided), UTXOs are not guaranteed to be unique across multiple calls. That is, a UTXO may appear in the result of the first call, and then again in the second call."),(0,l.kt)("li",{parentName:"ul"},"When using pagination, consistency is not guaranteed across multiple calls. That is, the UTXO set of the addresses may have changed between calls."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"encoding")," sets the format for the returned UTXOs. Can only be ",(0,l.kt)("inlineCode",{parentName:"li"},"hex")," when a value is provided.")),(0,l.kt)("h4",{id:"example"},(0,l.kt)("strong",{parentName:"h4"},"Example")),(0,l.kt)("p",null,"Suppose we want all UTXOs that reference at least one of ",(0,l.kt)("inlineCode",{parentName:"p"},"C-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"lux.getUTXOs",\n    "params" :{\n        "addresses":["C-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"],\n        "sourceChain": "X",\n        "startIndex": {\n            "address": "C-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n            "utxo": "22RXW7SWjBrrxu2vzDkd8uza7fuEmNpgbj58CxBob9UbP37HSB"\n        },\n        "encoding": "hex"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/lux\n')),(0,l.kt)("p",null,"This gives response:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "numFetched": "3",\n    "utxos": [\n      "0x0000a799e7448acf74ca9223159a04f93b948f99cf28509f908839532b2f85baffc300000001dbcf890f77f49b96857648b72b77f9f82937f28a68704af05da0dc12ba53f2db00000007000003a352a38240000000000000000000000001000000013cb7d3842e8cee6a0ebd09f1fe884f6861e1b29c22d23171",\n      "0x00006385c683d43bdbe754c224be36c5004ea7ce49c0849cadeaea6af93dae18cc7700000001dbcf890f77f49b96857648b72b77f9f82937f28a68704af05da0dc12ba53f2db00000007000003a352a38240000000000000000000000001000000013cb7d3842e8cee6a0ebd09f1fe884f6861e1b29cb81cc877",\n      "0x000038137283c94582351b86c3e90808312636769e3f5c14fbf1152d6634f770695c00000001dbcf890f77f49b96857648b72b77f9f82937f28a68704af05da0dc12ba53f2db00000007000003a352a38240000000000000000000000001000000013cb7d3842e8cee6a0ebd09f1fe884f6861e1b29c7412490e"\n    ],\n    "endIndex": {\n      "address": "C-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n      "utxo": "0x9333ef8a05f26acf2d8766f94723f749870fa2ca80c19c33cc945d79013d7c50fd023beb"\n    },\n    "encoding": "hex"\n  },\n  "id": 1\n}\n')),(0,l.kt)("h3",{id:"luximport"},"lux.import"),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Not recommended for use on Mainnet. See warning notice in ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/keystore"},"Keystore API"),".")),(0,l.kt)("p",null,"Finalize the transfer of a non-LUX or LUX from X-Chain or P-Chain to the C-Chain. Before this method is called, you must call the X-Chain\u2019s ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/x-chain#avmexport"},(0,l.kt)("inlineCode",{parentName:"a"},"avm.export"))," or P-Chain\u2019s ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/p-chain#platformexportlux"},(0,l.kt)("inlineCode",{parentName:"a"},"platform.exportLUX"))," with assetID ",(0,l.kt)("inlineCode",{parentName:"p"},"LUX")," to initiate the transfer."),(0,l.kt)("h4",{id:"signature-7"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"lux.import({\n    to: string,\n    sourceChain: string,\n    baseFee: int, // optional\n    username: string,\n    password:string,\n}) -> {txID: string}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"to")," is the address the asset is sent to. This must be the same as the ",(0,l.kt)("inlineCode",{parentName:"li"},"to")," argument in the corresponding call to the X-Chain's or P-Chain's ",(0,l.kt)("inlineCode",{parentName:"li"},"export"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"sourceChain")," is the ID or alias of the chain the asset is being imported from. To import funds from the X-Chain, use ",(0,l.kt)("inlineCode",{parentName:"li"},'"X"'),"; for the P-Chain, use ",(0,l.kt)("inlineCode",{parentName:"li"},'"P"'),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"baseFee")," is the base fee that should be used when creating the transaction. If omitted, a suggested fee will be used."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"username")," is the user that controls the address that transaction will be sent from."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"password")," is ",(0,l.kt)("inlineCode",{parentName:"li"},"username"),"\u2018s password.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txID")," is the ID of the completed ImportTx.")),(0,l.kt)("h4",{id:"example-call-6"},"Example Call"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"lux.import",\n    "params" :{\n        "to":"0x4b879aff6b3d24352Ac1985c1F45BA4c3493A398",\n        "sourceChain":"X",\n        "username":"myUsername",\n        "password":"myPassword"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/lux\n')),(0,l.kt)("h4",{id:"example-response-6"},"Example Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "6bJq9dbqhiQvoshT3uSUbg9oB24n7Ei6MLnxvrdmao78oHR9t"\n  },\n  "id": 1\n}\n')),(0,l.kt)("h3",{id:"luximportlux"},"lux.importLUX"),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Not recommended for use on Mainnet. See warning notice in ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/keystore"},"Keystore API"),".")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"DEPRECATED\u2014instead use")," ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/c-chain#luximport"},(0,l.kt)("strong",{parentName:"a"},"lux.import"))),(0,l.kt)("p",null,"Finalize a transfer of LUX from the X-Chain or P-Chain to the C-Chain. Before this method is called, you must call the X-Chain\u2019s ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/x-chain#avmexport"},(0,l.kt)("inlineCode",{parentName:"a"},"avm.export"))," or P-Chain\u2019s ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/p-chain#platformexportlux"},(0,l.kt)("inlineCode",{parentName:"a"},"platform.exportLUX"))," with assetID ",(0,l.kt)("inlineCode",{parentName:"p"},"LUX")," to initiate the transfer."),(0,l.kt)("h4",{id:"signature-8"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"lux.importLUX({\n    to: string,\n    sourceChain: string,\n    baseFee: int, // optional\n    username: string,\n    password:string,\n}) -> {txID: string}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"to")," is the address the LUX is sent to. It should be in hex format."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"sourceChain")," is the ID or alias of the chain the LUX is being imported from. To import funds from the X-Chain, use ",(0,l.kt)("inlineCode",{parentName:"li"},'"X"'),"; for the P-Chain, use ",(0,l.kt)("inlineCode",{parentName:"li"},'"P"'),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"baseFee")," is the base fee that should be used when creating the transaction. If omitted, a suggested fee will be used."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"username")," is the user that controls the address that transaction will be sent from."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"password")," is ",(0,l.kt)("inlineCode",{parentName:"li"},"username"),"\u2018s password.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"txID")," is the ID of the completed ImportTx.")),(0,l.kt)("h4",{id:"example-call-7"},"Example Call"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"lux.importLUX",\n    "params" :{\n        "to":"0x4b879aff6b3d24352Ac1985c1F45BA4c3493A398",\n        "sourceChain":"X",\n        "username":"myUsername",\n        "password":"myPassword"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/lux\n')),(0,l.kt)("h4",{id:"example-response-7"},"Example Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "LWTRsiKnEUJC58y8ezAk6hhzmSMUCtemLvm3LZFw8fxDQpns3"\n  },\n  "id": 1\n}\n')),(0,l.kt)("h3",{id:"luximportkey"},"lux.importKey"),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Not recommended for use on Mainnet. See warning notice in ",(0,l.kt)("a",{parentName:"p",href:"/apis/luxd/apis/keystore"},"Keystore API"),".")),(0,l.kt)("p",null,"Give a user control over an address by providing the private key that controls the address."),(0,l.kt)("h4",{id:"signature-9"},"Signature"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"lux.importKey({\n    username: string,\n    password:string,\n    privateKey:string\n}) -> {address: string}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Request")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Add ",(0,l.kt)("inlineCode",{parentName:"li"},"privateKey")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"username"),"'s set of private keys.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address")," is the address ",(0,l.kt)("inlineCode",{parentName:"li"},"username")," now controls with the private key. It will be in hex format.")),(0,l.kt)("h4",{id:"example-call-8"},"Example Call"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"lux.importKey",\n    "params" :{\n        "username" :"myUsername",\n        "password":"myPassword",\n        "privateKey":"PrivateKey-2o2uPgTSf3aR5nW6yLHjBEAiatAFKEhApvYzsjvAJKRXVWCYkE"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/lux\n')),(0,l.kt)("h4",{id:"example-response-8"},"Example Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "address": "0xc876DF0F099b3eb32cBB78820d39F5813f73E18C"\n  },\n  "id": 1\n}\n')),(0,l.kt)("h3",{id:"luxissuetx"},"lux.issueTx"),(0,l.kt)("p",null,"Send a signed transaction to the network. ",(0,l.kt)("inlineCode",{parentName:"p"},"encoding")," specifies the format of the signed transaction. Can only be ",(0,l.kt)("inlineCode",{parentName:"p"},"hex")," when a value is provided."),(0,l.kt)("h4",{id:"signature-10"},(0,l.kt)("strong",{parentName:"h4"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"lux.issueTx({\n    tx: string,\n    encoding: string, //optional\n}) -> {\n    txID: string\n}\n")),(0,l.kt)("h4",{id:"example-call-9"},(0,l.kt)("strong",{parentName:"h4"},"Example Call")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     : 1,\n    "method" :"lux.issueTx",\n    "params" :{\n        "tx":"0x00000009de31b4d8b22991d51aa6aa1fc733f23a851a8c9400000000000186a0000000005f041280000000005f9ca900000030390000000000000001fceda8f90fcb5d30614b99d79fc4baa29307762668f16eb0259a57c2d3b78c875c86ec2045792d4df2d926c40f829196e0bb97ee697af71f5b0a966dabff749634c8b729855e937715b0e44303fd1014daedc752006011b730",\n        "encoding": "hex"\n\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/lux\n')),(0,l.kt)("h4",{id:"example-response-9"},(0,l.kt)("strong",{parentName:"h4"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "txID": "NUPLwbt2hsYxpQg4H2o451hmTWQ4JZx2zMzM4SinwtHgAdX1JLPHXvWSXEnpecStLj"\n  }\n}\n')),(0,l.kt)("h3",{id:"luxgetatomictxstatus"},"lux.getAtomicTxStatus"),(0,l.kt)("p",null,"Get the status of an atomic transaction sent to the network."),(0,l.kt)("h4",{id:"signature-11"},(0,l.kt)("strong",{parentName:"h4"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"lux.getAtomicTxStatus({txID: string}) -> {\n  status: string,\n  blockHeight: string // returned when status is Accepted\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"status")," is one of:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Accepted"),": The transaction is (or will be) accepted by every node. Check the ",(0,l.kt)("inlineCode",{parentName:"li"},"blockHeight")," property"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Processing"),": The transaction is being voted on by this node"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Dropped"),": The transaction was dropped by this node because it thought the transaction invalid"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Unknown"),": The transaction hasn\u2019t been seen by this node")),(0,l.kt)("h4",{id:"example-call-10"},(0,l.kt)("strong",{parentName:"h4"},"Example Call")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"lux.getAtomicTxStatus",\n    "params" :{\n        "txID":"2QouvFWUbjuySRxeX5xMbNCuAaKWfbk5FeEa2JmoF85RKLk2dD"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/lux\n')),(0,l.kt)("h4",{id:"example-response-10"},(0,l.kt)("strong",{parentName:"h4"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "status": "Accepted",\n    "blockHeight": "1"\n  }\n}\n')),(0,l.kt)("h2",{id:"admin-api"},"Admin API"),(0,l.kt)("p",null,"This API can be used for debugging. Note that the Admin API is disabled by default. To run a node with the Admin API enabled, use ",(0,l.kt)("a",{parentName:"p",href:"/nodes/maintain/chain-config-flags#coreth-admin-api-enabled-boolean"},"C-Chain config flag ",(0,l.kt)("inlineCode",{parentName:"a"},"--coreth-admin-api-enabled:true"))," ."),(0,l.kt)("h3",{id:"endpoint"},"Endpoint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"/ext/bc/C/admin\n")),(0,l.kt)("h3",{id:"methods-1"},"Methods"),(0,l.kt)("h4",{id:"adminsetloglevel"},"admin.setLogLevel"),(0,l.kt)("p",null,"Sets the log level of the C-Chain."),(0,l.kt)("h4",{id:"signature-12"},(0,l.kt)("strong",{parentName:"h4"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"admin.setLogLevel({level:string}) -> {}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"level")," is the log level to be set.")),(0,l.kt)("h4",{id:"example-call-11"},(0,l.kt)("strong",{parentName:"h4"},"Example Call")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"admin.setLogLevel",\n    "params": {\n        "level":"info"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/admin\n')),(0,l.kt)("h4",{id:"example-response-11"},(0,l.kt)("strong",{parentName:"h4"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {}\n}\n')),(0,l.kt)("h4",{id:"adminstartcpuprofiler"},"admin.startCPUProfiler"),(0,l.kt)("p",null,"Starts a CPU profile."),(0,l.kt)("h4",{id:"signature-13"},(0,l.kt)("strong",{parentName:"h4"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"admin.startCPUProfiler() -> {}\n")),(0,l.kt)("h4",{id:"example-call-12"},(0,l.kt)("strong",{parentName:"h4"},"Example Call")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"admin.startCPUProfiler",\n    "params": {}\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/admin\n')),(0,l.kt)("h4",{id:"example-response-12"},(0,l.kt)("strong",{parentName:"h4"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {}\n}\n')),(0,l.kt)("h4",{id:"adminstopcpuprofiler"},"admin.stopCPUProfiler"),(0,l.kt)("p",null,"Stops and writes a CPU profile."),(0,l.kt)("h4",{id:"signature-14"},(0,l.kt)("strong",{parentName:"h4"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"admin.stopCPUProfiler() -> {}\n")),(0,l.kt)("h4",{id:"example-call-13"},(0,l.kt)("strong",{parentName:"h4"},"Example Call")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"admin.stopCPUProfiler",\n    "params": {}\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/admin\n')),(0,l.kt)("h4",{id:"example-response-13"},(0,l.kt)("strong",{parentName:"h4"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {}\n}\n')),(0,l.kt)("h4",{id:"adminmemoryprofile"},"admin.memoryProfile"),(0,l.kt)("p",null,"Runs and writes a memory profile."),(0,l.kt)("h4",{id:"signature-15"},(0,l.kt)("strong",{parentName:"h4"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"admin.memoryProfile() -> {}\n")),(0,l.kt)("h4",{id:"example-call-14"},(0,l.kt)("strong",{parentName:"h4"},"Example Call")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"admin.memoryProfile",\n    "params": {}\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/admin\n')),(0,l.kt)("h4",{id:"example-response-14"},(0,l.kt)("strong",{parentName:"h4"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {}\n}\n')),(0,l.kt)("h4",{id:"adminlockprofile"},"admin.lockProfile"),(0,l.kt)("p",null,"Runs a mutex profile writing to the ",(0,l.kt)("inlineCode",{parentName:"p"},"coreth_performance_c")," directory."),(0,l.kt)("h4",{id:"signature-16"},(0,l.kt)("strong",{parentName:"h4"},"Signature")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"admin.lockProfile() -> {}\n")),(0,l.kt)("h4",{id:"example-call-15"},(0,l.kt)("strong",{parentName:"h4"},"Example Call")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"admin.lockProfile",\n    "params": {}\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/C/admin\n')),(0,l.kt)("h4",{id:"example-response-15"},(0,l.kt)("strong",{parentName:"h4"},"Example Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {}\n}\n')))}c.isMDXComponent=!0}}]);