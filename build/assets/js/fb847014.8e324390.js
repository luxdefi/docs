"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6943],{39266:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var c=e(85893),a=e(11151);const o={},r="hardhat.config.js",s={id:"deprecated/tutorials-contest/2022/local-subnet-development/hardhat.config.ts",title:"hardhat.config.js",description:"",source:"@site/docs/deprecated/tutorials-contest/2022/local-subnet-development/hardhat.config.ts.md",sourceDirName:"deprecated/tutorials-contest/2022/local-subnet-development",slug:"/deprecated/tutorials-contest/2022/local-subnet-development/hardhat.config.ts",permalink:"/deprecated/tutorials-contest/2022/local-subnet-development/hardhat.config.ts",draft:!1,unlisted:!1,editUrl:"https://github.com/luxdefi/docs/edit/main/docs/deprecated/tutorials-contest/2022/local-subnet-development/hardhat.config.ts.md",tags:[],version:"current",frontMatter:{}},d={},i=[];function h(t){const n={code:"code",h1:"h1",pre:"pre",...(0,a.a)(),...t.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"hardhatconfigjs",children:"hardhat.config.js"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-typescript",children:'import { task } from "hardhat/config";\nimport { SignerWithAddress } from "@nomiclabs/hardhat-ethers/signers";\nimport { BigNumber } from "ethers";\nimport "@nomiclabs/hardhat-waffle";\n\n// When using the hardhat network, you may choose to fork Testnet or Lux Mainnet\n// This will allow you to debug contracts using the hardhat network while keeping the current network state\n// To enable forking, turn one of these booleans on, and then run your tasks/scripts using ``--network hardhat``\n// For more information go to the hardhat guide\n// https://hardhat.org/hardhat-network/\n// https://hardhat.org/guides/mainnet-forking.html\nconst FORK_FUJI = false;\nconst FORK_MAINNET = false;\nconst forkingData = FORK_FUJI\n\t? {\n\t\t\turl: "https://api.lux-test.network/ext/bc/C/rpc",\n\t  }\n\t: FORK_MAINNET\n\t? {\n\t\t\turl: "https://api.lux.network/ext/bc/C/rpc",\n\t  }\n\t: undefined;\n\ntask(\n\t"accounts",\n\t"Prints the list of accounts",\n\tasync (args, hre): Promise<void> => {\n\t\tconst accounts: SignerWithAddress[] = await hre.ethers.getSigners();\n\t\taccounts.forEach((account: SignerWithAddress): void => {\n\t\t\tconsole.log(account.address);\n\t\t});\n\t}\n);\n\ntask(\n\t"balances",\n\t"Prints the list of LUX account balances",\n\tasync (args, hre): Promise<void> => {\n\t\tconst accounts: SignerWithAddress[] = await hre.ethers.getSigners();\n\t\tfor (const account of accounts) {\n\t\t\tconst balance: BigNumber = await hre.ethers.provider.getBalance(\n\t\t\t\taccount.address\n\t\t\t);\n\t\t\tconsole.log(`${account.address} has balance ${balance.toString()}`);\n\t\t}\n\t}\n);\n\nexport default {\n\tsolidity: {\n\t\tcompilers: [\n\t\t\t{\n\t\t\t\tversion: "0.5.16",\n\t\t\t},\n\t\t\t{\n\t\t\t\tversion: "0.6.2",\n\t\t\t},\n\t\t\t{\n\t\t\t\tversion: "0.6.4",\n\t\t\t},\n\t\t\t{\n\t\t\t\tversion: "0.7.0",\n\t\t\t},\n\t\t\t{\n\t\t\t\tversion: "0.8.0",\n\t\t\t},\n\t\t],\n\t},\n\tnetworks: {\n\t\thardhat: {\n\t\t\tgasPrice: 225000000000,\n\t\t\tchainId: !forkingData ? 43112 : undefined, //Only specify a chainId if we are not forking\n\t\t\tforking: forkingData,\n\t\t},\n\t\tlocal: {\n\t\t\turl: "http://localhost:9650/ext/bc/C/rpc",\n\t\t\tgasPrice: 225000000000,\n\t\t\tchainId: 43112,\n\t\t\taccounts: [\n\t\t\t\t"0x56289e99c94b6912bfc12adc093c9b51124f0dc54ac7a766b2bc5ccf558d8027",\n\t\t\t\t"0x7b4198529994b0dc604278c99d153cfd069d594753d471171a1d102a10438e07",\n\t\t\t\t"0x15614556be13730e9e8d6eacc1603143e7b96987429df8726384c2ec4502ef6e",\n\t\t\t\t"0x31b571bf6894a248831ff937bb49f7754509fe93bbd2517c9c73c4144c0e97dc",\n\t\t\t\t"0x6934bef917e01692b789da754a0eae31a8536eb465e7bff752ea291dad88c675",\n\t\t\t\t"0xe700bdbdbc279b808b1ec45f8c2370e4616d3a02c336e68d85d4668e08f53cff",\n\t\t\t\t"0xbbc2865b76ba28016bc2255c7504d000e046ae01934b04c694592a6276988630",\n\t\t\t\t"0xcdbfd34f687ced8c6968854f8a99ae47712c4f4183b78dcc4a903d1bfe8cbf60",\n\t\t\t\t"0x86f78c5416151fe3546dece84fda4b4b1e36089f2dbc48496faf3a950f16157c",\n\t\t\t\t"0x750839e9dbbd2a0910efe40f50b2f3b2f2f59f5580bb4b83bd8c1201cf9a010a",\n\t\t\t],\n\t\t},\n\t\ttestnet: {\n\t\t\turl: "https://api.lux-test.network/ext/bc/C/rpc",\n\t\t\tgasPrice: 225000000000,\n\t\t\tchainId: 43113,\n\t\t\taccounts: [],\n\t\t},\n\t\tmainnet: {\n\t\t\turl: "https://api.lux.network/ext/bc/C/rpc",\n\t\t\tgasPrice: 225000000000,\n\t\t\tchainId: 43114,\n\t\t\taccounts: [],\n\t\t},\n\t\t// ONLY CHANGED PART STARTS\n\t\tsubnet: {\n\t\t\turl: "http://127.0.0.1:9650/ext/bc/2KY4TYoJwuJWLeSfj4Mae4t4sBCwGrx48QyGWg3zWwP5PhZjHV/rpc",\n\t\t\tchainId: 676767,\n\t\t\taccounts: [\n\t\t\t\t"56289e99c94b6912bfc12adc093c9b51124f0dc54ac7a766b2bc5ccf558d8027",\n\t\t\t],\n\t\t},\n\t\t// ONLY CHANGED PART ENDS\n\t},\n};\n'})})]})}function f(t={}){const{wrapper:n}={...(0,a.a)(),...t.components};return n?(0,c.jsx)(n,{...t,children:(0,c.jsx)(h,{...t})}):h(t)}},11151:(t,n,e)=>{e.d(n,{Z:()=>s,a:()=>r});var c=e(67294);const a={},o=c.createContext(a);function r(t){const n=c.useContext(o);return c.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:r(t.components),c.createElement(o.Provider,{value:n},t.children)}}}]);