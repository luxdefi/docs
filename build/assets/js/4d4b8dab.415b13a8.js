"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[2104],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return h}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(a),h=r,c=m["".concat(l,".").concat(h)]||m[h]||u[h]||i;return a?n.createElement(c,o(o({ref:t},p),{},{components:a})):n.createElement(c,o({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2583:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return u}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=["components"],s={sidebar_position:3},l="Add a Node to the Validator Set",d={unversionedId:"nodes/validate/add-a-validator",id:"nodes/validate/add-a-validator",title:"Add a Node to the Validator Set",description:"Introduction",source:"@site/docs/nodes/validate/add-a-validator.md",sourceDirName:"nodes/validate",slug:"/nodes/validate/add-a-validator",permalink:"/nodes/validate/add-a-validator",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/nodes/validate/add-a-validator.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"nodes",previous:{title:"What is Staking?",permalink:"/nodes/validate/staking"}},p={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Add a Validator with Lux Wallet",id:"add-a-validator-with-lux-wallet",level:2},{value:"Retrieve the Node ID",id:"retrieve-the-node-id",level:3},{value:"Add as a Validator",id:"add-as-a-validator",level:3},{value:"Add a Validator with LuxJS",id:"add-a-validator-with-luxjs",level:2},{value:"Install LuxJS",id:"install-luxjs",level:3},{value:"Fuji Workflow",id:"fuji-workflow",level:3},{value:"Private Key",id:"private-key",level:4},{value:"Network Setting",id:"network-setting",level:4},{value:"Settings for Validation",id:"settings-for-validation",level:4},{value:"Node ID",id:"node-id",level:4},{value:"Staking Period",id:"staking-period",level:4},{value:"Delegation Fee Rate",id:"delegation-fee-rate",level:4},{value:"Stake Amount",id:"stake-amount",level:4},{value:"Addresses",id:"addresses",level:4},{value:"Execute the Code",id:"execute-the-code",level:4},{value:"Customizing Addresses",id:"customizing-addresses",level:4},{value:"Mainnet Workflow",id:"mainnet-workflow",level:3}],m={toc:u};function h(e){var t=e.components,a=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"add-a-node-to-the-validator-set"},"Add a Node to the Validator Set"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://support.lux.network/en/articles/4135650-what-is-the-primary-network"},"Primary Network")," is inherent to the Lux platform and validates Lux\u2019s ",(0,i.kt)("a",{parentName:"p",href:"/overview/getting-started/lux-platform"},"built-in blockchains"),". In this tutorial, we\u2019ll add a node to the Primary Network on Lux."),(0,i.kt)("p",null,"The P-Chain manages metadata on Lux. This includes tracking which nodes are in which Subnets, which blockchains exist, and which Subnets are validating which blockchains. To add a validator, we\u2019ll issue ",(0,i.kt)("a",{parentName:"p",href:"http://support.lux.network/en/articles/4587384-what-is-a-transaction"},"transactions")," to the P-Chain."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Note that once you issue the transaction to add a node as a validator, there is no way to change the parameters. ",(0,i.kt)("strong",{parentName:"p"},"You can\u2019t remove your stake early or change the stake amount, node ID, or reward address.")," Please make sure you\u2019re using the correct values in the API calls below. If you\u2019re not sure, feel free to join our ",(0,i.kt)("a",{parentName:"p",href:"https://chat.lux.network/"},"Discord")," to ask questions.")),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,"You've completed ",(0,i.kt)("a",{parentName:"p",href:"/nodes/build/run-lux-node-manually"},"Run an Lux Node")," and are familiar with ",(0,i.kt)("a",{parentName:"p",href:"/overview/getting-started/lux-platform"},"Lux's architecture"),". In this tutorial, we use ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxjs/"},"LuxJS")," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/lux-postman-collection"},"Lux\u2019s Postman collection")," to help us make API calls."),(0,i.kt)("p",null,"In order to ensure your node is well-connected, make sure that your node can receive and send TCP traffic on the staking port (",(0,i.kt)("inlineCode",{parentName:"p"},"9651")," by default) and that you started your node with config flag ",(0,i.kt)("inlineCode",{parentName:"p"},"--public-ip=[YOUR NODE'S PUBLIC IP HERE]"),". Failing to do either of these may jeopardize your staking reward."),(0,i.kt)("h2",{id:"add-a-validator-with-lux-wallet"},"Add a Validator with Lux Wallet"),(0,i.kt)("p",null,"First, we show you how to add your node as a validator by using ",(0,i.kt)("a",{parentName:"p",href:"https://wallet.lux.network"},"Lux Wallet"),"."),(0,i.kt)("h3",{id:"retrieve-the-node-id"},"Retrieve the Node ID"),(0,i.kt)("p",null,"Get your node\u2019s ID by calling ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxd/apis/info#infogetnodeid"},(0,i.kt)("inlineCode",{parentName:"a"},"info.getNodeID")),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"info.getNodeID"\n}\' -H \'content-type:application/json\' 127.0.0.1:9650/ext/info\n')),(0,i.kt)("p",null,"The response has your node\u2019s ID:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "jsonrpc": "2.0",\n  "result": {\n    "nodeID": "NodeID-5mb46qkSBj81k9g9e4VFjGGSbaaSLFRzD"\n  },\n  "id": 1\n}\n')),(0,i.kt)("h3",{id:"add-as-a-validator"},"Add as a Validator"),(0,i.kt)("p",null,"Open ",(0,i.kt)("a",{parentName:"p",href:"https://wallet.lux.network/"},"the wallet"),", and go the ",(0,i.kt)("inlineCode",{parentName:"p"},"Earn")," tab. Choose ",(0,i.kt)("inlineCode",{parentName:"p"},"Add Validator")," under the ",(0,i.kt)("inlineCode",{parentName:"p"},"Validate")," section."),(0,i.kt)("p",null,"Fill out the staking parameters. They are explained in more detail in ",(0,i.kt)("a",{parentName:"p",href:"/nodes/validate/staking"},"this doc"),". When you\u2019ve filled in all the staking parameters and double-checked them, click ",(0,i.kt)("inlineCode",{parentName:"p"},"Confirm"),". Make sure the staking period is at least 2 weeks, the delegation fee rate is at least 2%, and you\u2019re staking at least 2,000 LUX on Mainnet (1 LUX on Fuji Testnet)."),(0,i.kt)("p",null,"You should a success message, and your balance should be updated."),(0,i.kt)("p",null,"Calling ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxd/apis/p-chain#platformgetpendingvalidators"},(0,i.kt)("inlineCode",{parentName:"a"},"platform.getPendingValidators"))," verifies that your transaction was accepted. Note that this API call should be made before your node's validation start time, otherwise, the return will not include your node's id as it is no longer pending."),(0,i.kt)("p",null,"Go back to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Earn")," tab, and click ",(0,i.kt)("inlineCode",{parentName:"p"},"Estimated Rewards"),"."),(0,i.kt)("p",null,"Once your validator\u2019s start time has passed, you will see the rewards it may earn, as well as its start time, end time, and the percentage of its validation period that has passed."),(0,i.kt)("p",null,"You can also call ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxd/apis/p-chain#platformgetcurrentvalidators"},(0,i.kt)("inlineCode",{parentName:"a"},"platform.getCurrentValidators"))," to check that your node's id is included in the response."),(0,i.kt)("p",null,"That\u2019s it!"),(0,i.kt)("h2",{id:"add-a-validator-with-luxjs"},"Add a Validator with LuxJS"),(0,i.kt)("p",null,"We can also add a node to the validator set using ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxjs/"},"LuxJS"),"."),(0,i.kt)("h3",{id:"install-luxjs"},"Install LuxJS"),(0,i.kt)("p",null,"To use LuxJS, you can clone the repo:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-zsh"},"git clone https://github.com/luxdefi/luxjs.git\n")),(0,i.kt)("p",null,"or add it to an existing project:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-zsh"},"yarn add lux\n")),(0,i.kt)("p",null,"For this tutorial we will use ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/ts-node"},(0,i.kt)("inlineCode",{parentName:"a"},"ts-node"))," to run the example scripts directly from an LuxJS directory."),(0,i.kt)("h3",{id:"fuji-workflow"},"Fuji Workflow"),(0,i.kt)("p",null,"In this section, we will use Fuji Testnet to show how to add a node to the validator set."),(0,i.kt)("p",null,"Open your LuxJS directory and select the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/tree/master/examples/platformvm"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"examples/platformvm")))," folder to view the source code for the examples scripts."),(0,i.kt)("p",null,"We will use the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/platformvm/buildAddValidatorTx.ts"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"buildAddValidatorTx.ts")))," script to add a validator. To learn more about the ",(0,i.kt)("inlineCode",{parentName:"p"},"buildAddValidatorTx")," API, please click ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs-docs/blob/main/classes/api_platformvm.platformvmapi.md#buildaddvalidatortx"},"here"),"."),(0,i.kt)("h4",{id:"private-key"},"Private Key"),(0,i.kt)("p",null,"Locate this line in the file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const privKey: string = `${PrivateKeyPrefix}${DefaultLocalGenesisPrivateKey}`\n")),(0,i.kt)("p",null,"and replace this with a private key that you control. You can use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/platformvm/createKeypair.ts"},"this code to generate a new key"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const privKey: string = "<YOUR-PRIVATE-KEY-HERE>"\n')),(0,i.kt)("h4",{id:"network-setting"},"Network Setting"),(0,i.kt)("p",null,"The following settings work when using a local node started with ",(0,i.kt)("a",{parentName:"p",href:"/nodes/maintain/luxd-config-flags#network-id"},(0,i.kt)("inlineCode",{parentName:"a"},"--network-id=fuji")),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const ip: string = "localhost"\nconst port: number = 9650\nconst protocol: string = "http"\nconst networkID: number = 5\n')),(0,i.kt)("p",null,"However, to connect directly to the ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxd/public-api-server"},"Lux Fuji Testnet API server"),", the following changes are needed:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const ip: string = "api.lux-test.network"\nconst port: number = 443\nconst protocol: string = "https"\nconst networkID: number = 5\n')),(0,i.kt)("p",null,"Depending on the networkID passed in when instantiating an ",(0,i.kt)("inlineCode",{parentName:"p"},"Lux")," object in the code, the encoded addresses used will have a distinctive Human Readable Part(HRP) per each network."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Example Address: 5 - X-",(0,i.kt)("inlineCode",{parentName:"em"},"fuji"),"19rknw8l0grnfunjrzwxlxync6zrlu33yxqzg0h")),(0,i.kt)("p",null,"For Fuji Testnet, 5 is the correct value to use."),(0,i.kt)("p",null,"To learn more about encoded addresses, click ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxjs/manage-x-chain-keys#encode-bech32-addresses"},"here"),"."),(0,i.kt)("h4",{id:"settings-for-validation"},"Settings for Validation"),(0,i.kt)("p",null,"Next we need to specify the node's validation period and delegation fee."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const nodeID: string = "NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg"\nconst startTime: BN = UnixNow().add(new BN(60 * 1))\nconst endTime: BN = startTime.add(new BN(26300000))\nconst delegationFee: number = 10\n')),(0,i.kt)("h4",{id:"node-id"},"Node ID"),(0,i.kt)("p",null,"This is the node ID of the validator being added. See ",(0,i.kt)("a",{parentName:"p",href:"#retrieve-the-node-id"},"above section")," on how to retrieve the node id by using API ",(0,i.kt)("a",{parentName:"p",href:"/apis/luxd/apis/info#infogetnodeid"},(0,i.kt)("inlineCode",{parentName:"a"},"info.getNodeID")),"."),(0,i.kt)("h4",{id:"staking-period"},"Staking Period"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"startTime")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"endTime")," are required to specify the time of starting/leaving validation. The minimum duration that one can validate the Primary Network is 2 weeks, and the maximum duration is one year. One can start a new validation on the Primary Network after finishing one, it\u2019s just that the maximum ",(0,i.kt)("em",{parentName:"p"},"continuous")," duration is one year. ",(0,i.kt)("inlineCode",{parentName:"p"},"startTime")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"endTime")," are the Unix times when your validator will start and stop validating the Primary Network, respectively. ",(0,i.kt)("inlineCode",{parentName:"p"},"startTime")," must be in the future relative to the time the transaction is issued."),(0,i.kt)("p",null,"The sample code uses ",(0,i.kt)("inlineCode",{parentName:"p"},"const startTime: BN = UnixNow().add(new BN(60 * 1))")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"const endTime: BN = startTime.add(new BN(26300000))")," to compute the Unix time 1 minute and 304 days in the future (at the time when this article was written) to use as the values of ",(0,i.kt)("inlineCode",{parentName:"p"},"startTime")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"endTime"),", respectively."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"You can create your own unix timestamp ",(0,i.kt)("a",{parentName:"p",href:"https://www.unixtimestamp.com/"},"here")," or by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"UnixNow()")," method")),(0,i.kt)("p",null,"To create your own start times, please follow the steps below:"),(0,i.kt)("p",null,"Locate this line in the file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const startTime: BN = UnixNow().add(new BN(60 * 1))\nconst endTime: BN = startTime.add(new BN(26300000))\n")),(0,i.kt)("p",null,"Change ",(0,i.kt)("inlineCode",{parentName:"p"},"startTime")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"endTime")," to new ",(0,i.kt)("inlineCode",{parentName:"p"},"BN")," values, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const startTime: BN = new BN(1654656829) // Wed Jun 08 2022 02:53:49 GMT+0000\nconst endTime: BN = new BN(1662602029) // Thu Sep 08 2022 01:53:49 GMT+0000\n")),(0,i.kt)("h4",{id:"delegation-fee-rate"},"Delegation Fee Rate"),(0,i.kt)("p",null,"Lux allows for delegation of stake. This parameter is the percent fee this validator charges when others delegate stake to them. For example, if ",(0,i.kt)("inlineCode",{parentName:"p"},"delegationFeeRate")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"10")," and someone delegates to this validator, then when the delegation period is over, 10% of the reward goes to the validator and the rest goes to the delegator, if this node meets the validation reward requirements."),(0,i.kt)("h4",{id:"stake-amount"},"Stake Amount"),(0,i.kt)("p",null,"Set the the proper staking amount in calling ",(0,i.kt)("inlineCode",{parentName:"p"},"pchain.buildAddValidatorTx")," by replacing ",(0,i.kt)("inlineCode",{parentName:"p"},"stakeAmount.minValidatorStake")," with a number in the unit of gwei, for example, ",(0,i.kt)("inlineCode",{parentName:"p"},"BN(1e12)")," which is 10,000 LUX."),(0,i.kt)("h4",{id:"addresses"},"Addresses"),(0,i.kt)("p",null,"By default, the example uses the variable ",(0,i.kt)("inlineCode",{parentName:"p"},"pAddressStrings")," to define ",(0,i.kt)("inlineCode",{parentName:"p"},"toAddresses"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fromAddresses"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"changeAddresses")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"rewardAddresses"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const pAddressStrings: string[] = pchain.keyChain().getAddressStrings()\n")),(0,i.kt)("p",null,"This retrieves the P-Chain addresses that belong to the ",(0,i.kt)("inlineCode",{parentName:"p"},"private key")," that appears earlier in the example."),(0,i.kt)("p",null,"No change is needed in the addresses for the default action. For customization, please refer to ",(0,i.kt)("a",{parentName:"p",href:"#customizing-addresses"},"this section"),"."),(0,i.kt)("h4",{id:"execute-the-code"},"Execute the Code"),(0,i.kt)("p",null,"Now that we have made all of the necessary changes to the example script, it's time to add a validator to the Fuji Network."),(0,i.kt)("p",null,"Run the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-zsh"},"ts-node examples/platformvm/buildAddValidatorTx.ts\n")),(0,i.kt)("p",null,"The response has the transaction ID."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Success! TXID: 2ftDVwmss5eJk8HFsNVi6a3vWK9s3szZFhEeSY2HCS8xDb8Cra\n")),(0,i.kt)("p",null,"We can check the transaction\u2019s status by running the example script: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/platformvm/getTxStatus.ts"},(0,i.kt)("inlineCode",{parentName:"a"},"getTxStatus.ts"))," following the steps below:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Ensure that your ",(0,i.kt)("a",{parentName:"p",href:"#network-setting"},"network settings")," are correct before running the script.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Locate this line in the file"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const main = async (): Promise<any> => {\n  const txID: string = "x1NLb9JaHkKTXvSRReVSsFwQ38mY7bfD1Ky1BPv721VhrpuSE"\n  ...\n  }\n')),(0,i.kt)("p",null,"and replace it with the ",(0,i.kt)("em",{parentName:"p"},"buildAddValidator")," TXID"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const main = async (): Promise<any> => {\n const txID: string = "2ftDVwmss5eJk8HFsNVi6a3vWK9s3szZFhEeSY2HCS8xDb8Cra"\n ...\n }\n')),(0,i.kt)("p",null,"Run the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"ts-node examples/platformvm/getTxStatus.ts\n")),(0,i.kt)("p",null,"This returns:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"{ status: 'Committed' }\n")),(0,i.kt)("p",null,"The status should be ",(0,i.kt)("inlineCode",{parentName:"p"},"Committed"),", meaning the transaction was successful."),(0,i.kt)("p",null,"We can see if the node is now in the pending validator set for the Fuji network by using the example:",(0,i.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/platformvm/getPendingValidators.ts"},(0,i.kt)("inlineCode",{parentName:"a"},"getPendingValidators.ts")),". Just change the ",(0,i.kt)("a",{parentName:"p",href:"#network-setting"},"network settings")," to meet Fuji requirements and then run the script:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"ts-node examples/platformvm/getPendingValidators.ts\n")),(0,i.kt)("p",null,"The response should include the node we just added:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "validators": [\n    {\n      "nodeID": "NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg",\n      "startTime": "1654656829",\n      "endtime": "1662602029",\n      "stakeAmount": "1000000000"\n    }\n  ],\n  "delegators": []\n}\n')),(0,i.kt)("p",null,"When the time reaches ",(0,i.kt)("inlineCode",{parentName:"p"},"1654656829")," (Wed Jun 08 2022 02:53:49 GMT+0000), this node will start validating the Primary Network. When it reaches ",(0,i.kt)("inlineCode",{parentName:"p"},"1662602029")," (Thu Sep 08 2022 01:53:49 GMT+0000), this node will stop validating the Primary Network. The staked LUX and the rewards, if any, will be returned to ",(0,i.kt)("inlineCode",{parentName:"p"},"pAddressStrings"),"."),(0,i.kt)("h4",{id:"customizing-addresses"},"Customizing Addresses"),(0,i.kt)("p",null,"There are 4 addresses which are needed when calling ",(0,i.kt)("inlineCode",{parentName:"p"},"pchain.buildAddValidatorTx"),". Only 2 of them can be changed: ",(0,i.kt)("inlineCode",{parentName:"p"},"toAddresses")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"rewardAddresses"),". For backward-compatibility reasons, ",(0,i.kt)("inlineCode",{parentName:"p"},"fromAddresses")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"changeAddresses"),"\nare just placeholders and are ignored."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"toAddresses")),(0,i.kt)("p",null,"An array of addresses who receive the staked tokens at the end of the staking period."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"rewardAddresses")),(0,i.kt)("p",null,"When a validator stops validating the Primary Network, they will receive a reward if they are sufficiently responsive and correct while they validated the Primary Network. These tokens are sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"rewardAddresses"),". The original stake will be sent back to the addresses defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"toAddresses"),"."),(0,i.kt)("p",null,"A validator\u2019s stake is never slashed, regardless of their behavior they will always receive their stake back when they\u2019re done validating."),(0,i.kt)("p",null,"Locate this part of the code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"let privKey: string = `${PrivateKeyPrefix}${DefaultLocalGenesisPrivateKey}`\npKeychain.importKey(privKey)\n")),(0,i.kt)("p",null,"and replace ",(0,i.kt)("inlineCode",{parentName:"p"},"privKey")," with private keys that you control. To generate a new keypair, we can use the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxjs/blob/master/examples/platformvm/createKeypair.ts"},(0,i.kt)("inlineCode",{parentName:"a"},"createKeypair.ts"))," example script along with ",(0,i.kt)("a",{parentName:"p",href:"#network-setting"},"Fuji Network Settings"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'let privKey: string =\n  "PrivateKey-PY2dvfxzvBAe1a5nn7x23wmZMgAYJaS3XAZXzdUa22JtzUvKM"\npKeychain.importKey(privKey)\nprivKey = "PrivateKey-2Y3Vg9LShMJyUDBHzQqv5WtKDJ8yAVHyM3H5CNCBBmtg3pQEQG"\npKeychain.importKey(privKey)\nprivKey = "PrivateKey-NaV16owRSfa5TAtxtoU1BPUoM2y1ohttRbwKJG1j7onE4Ge1s"\npKeychain.importKey(privKey)\npriKey = "PrivateKey-26JMUsR5RCkf5k9ME8WxKCWEuCK5s2SrALUn7vEa2urwyDDc91"\npKeychain.importKey(privKey)\n\nconst pAddressStrings: string[] = pchain.keyChain().getAddressStrings()\n')),(0,i.kt)("p",null,"This example would create a keychain with 4 addresses:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'  "P-fuji1jx644d9y00y5q4hz8cq4wr75a2erne2y4e32xc", // pAddressStrings[0]\n  "P-fuji1wchdgdp94j8tszlpsp56qvgkvdn20svpmnm8qk", // pAddressStrings[1]\n  "P-fuji1f36kkpy6yzd7ayrywxvvprns7qlrcu3hwqdya8", // pAddressStrings[2]\n  "P-fuji1qw7yt3fp43kuwsufff4vhezs2yl00slr09vmh5", // pAddressStrings[3]\n')),(0,i.kt)("p",null,"Now we can pass in each address according to it's slot in the ",(0,i.kt)("inlineCode",{parentName:"p"},"pAddressStrings")," array:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const unsignedTx: UnsignedTx = await pchain.buildAddValidatorTx(\n  utxoSet,\n  [pAddressStrings[0], pAddressStrings[1]], // toAddresses, one or more addresses\n  [pAddressStrings[0]], // fromAddresses, required for backward-compatibility\n  [pAddressStrings[0]], // changeAddresses, required for backward-compatibility\n  nodeID,\n  startTime,\n  endTime,\n  stakeAmount.minValidatorStake,\n  [pAddressStrings[2], pAddressStrings[3]], //rewardAddresses, one or more addresses\n  delegationFee,\n  locktime,\n  threshold,\n  memo,\n  asOf\n)\n")),(0,i.kt)("h3",{id:"mainnet-workflow"},"Mainnet Workflow"),(0,i.kt)("p",null,"The Fuji workflow above can be adapted to Mainnet with the following modifications:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The correct private key."),(0,i.kt)("li",{parentName:"ul"},"Network setting should be to a Mainnet node, either ",(0,i.kt)("a",{parentName:"li",href:"/nodes/maintain/luxd-config-flags#network-id"},"a local node on Mainnet")," or ",(0,i.kt)("a",{parentName:"li",href:"/apis/luxd/public-api-server#using-the-public-api-nodes"},"Lux Mainnet API server")," where ",(0,i.kt)("inlineCode",{parentName:"li"},"api.lux.network")," should be used for the ",(0,i.kt)("inlineCode",{parentName:"li"},"ip"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"const networkID: number = 1")," based on ",(0,i.kt)("a",{parentName:"li",href:"/apis/luxjs/manage-x-chain-keys#encode-bech32-addresses"},"this"),"."),(0,i.kt)("li",{parentName:"ul"},"Set the correct amount to stake.")))}h.isMDXComponent=!0}}]);