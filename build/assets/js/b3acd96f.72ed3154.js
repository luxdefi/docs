"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[3929],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(n),f=a,b=m["".concat(c,".").concat(f)]||m[f]||l[f]||o;return n?r.createElement(b,s(s({ref:t},u),{},{components:n})):r.createElement(b,s({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4917:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return l}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={sidebar_position:6},c="Spaces: Experimental Implementation",p={unversionedId:"subnets/spaces",id:"subnets/spaces",title:"Spaces: Experimental Implementation",description:"Detailed information about this can be found in the README of the SpacesVM project.",source:"@site/docs/subnets/spaces.md",sourceDirName:"subnets",slug:"/subnets/spaces",permalink:"/subnets/spaces",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/subnets/spaces.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"subnets",previous:{title:"Deploy a Gnosis Safe on Your Subnet EVM",permalink:"/subnets/deploy-a-gnosis-safe-on-your-evm"},next:{title:"WAGMI Subnet Demo",permalink:"/subnets/wagmi"}},u={},l=[],m={toc:l};function f(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"spaces-experimental-implementation"},"Spaces: Experimental Implementation"),(0,o.kt)("p",null,"Detailed information about this can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/spacesvm#spaces-virtual-machine-spacesvm"},"README of the SpacesVM project"),"."),(0,o.kt)("p",null,"Demo can be found at ",(0,o.kt)("a",{parentName:"p",href:"https://tryspaces.xyz/"},"tryspaces.xyz"),"."),(0,o.kt)("p",null,"Furthermore, we have developed ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/subnet-cli"},"subnet-cli")," which is command-line interface to manage Lux Subnets."),(0,o.kt)("p",null,"In summary, Spaces is an experimental implementation of Subnet which includes the following parts:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"SpacesVM => which is new Lux-native VM, ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/luxdefi/spacesvm"},"https://github.com/luxdefi/spacesvm")),(0,o.kt)("li",{parentName:"ul"},"Spaces => SpacesVM Subnet Demo, ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/luxdefi/spacesvm-js"},"https://github.com/luxdefi/spacesvm-js")),(0,o.kt)("li",{parentName:"ul"},"subnet-cli => Subnet command line client ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/luxdefi/subnet-cli"},"https://github.com/luxdefi/subnet-cli"))))}f.isMDXComponent=!0}}]);