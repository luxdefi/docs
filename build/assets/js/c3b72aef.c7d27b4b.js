"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[9218],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=l(n),h=r,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||o;return n?a.createElement(m,i(i({ref:t},s),{},{components:n})):a.createElement(m,i({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4497:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],c={},p="Fund a Local Test Network",l={unversionedId:"quickstart/fund-a-local-test-network",id:"quickstart/fund-a-local-test-network",title:"Fund a Local Test Network",description:"Introduction",source:"@site/docs/quickstart/fund-a-local-test-network.md",sourceDirName:"quickstart",slug:"/quickstart/fund-a-local-test-network",permalink:"/quickstart/fund-a-local-test-network",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/quickstart/fund-a-local-test-network.md",tags:[],version:"current",frontMatter:{},sidebar:"quickStart",previous:{title:"Create a Local Test Network",permalink:"/quickstart/create-a-local-test-network"},next:{title:"Fuji Workflow",permalink:"/quickstart/fuji-workflow"}},s={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Create a User",id:"create-a-user",level:2},{value:"X-Chain",id:"x-chain",level:2},{value:"Import Key",id:"import-key",level:3},{value:"Check X-chain Balance",id:"check-x-chain-balance",level:3},{value:"C-Chain",id:"c-chain",level:2},{value:"Import Key",id:"import-key-1",level:3},{value:"Check the C-Chain Balance",id:"check-the-c-chain-balance",level:3},{value:"Integrate with MetaMask",id:"integrate-with-metamask",level:3},{value:"P-Chain",id:"p-chain",level:2},{value:"Import Key",id:"import-key-2",level:3},{value:"Check P-Chain Balance",id:"check-p-chain-balance",level:3}],d={toc:u};function h(e){var t=e.components,c=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,c,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"fund-a-local-test-network"},"Fund a Local Test Network"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"In ",(0,o.kt)("a",{parentName:"p",href:"/quickstart/create-a-local-test-network"},"Create a Local Test Network"),", we showed you how to launch a 5 node local test network. Once you have a local network the next step is to fund an address so that you can begin creating transactions and interacting with smart-contracts."),(0,o.kt)("p",null,"We'll show you how to leverage a pre-funded private key to access funds on the X-Chain, C-Chain and P-Chain."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This same private key, ",(0,o.kt)("inlineCode",{parentName:"p"},"PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN"),", can be used to sign txs locally using ",(0,o.kt)("a",{parentName:"p",href:"/apis/luxjs/"},"LuxJS"),". You don't need to import the key into the local keystore in order to access those funds. They are in the genesis vertex and block for each respective chain."),(0,o.kt)("p",{parentName:"admonition"},"The port in this tutorial uses 9650. Depending on how you start your local network, it could be different. If you are using Lux Network Runner, please check ",(0,o.kt)("a",{parentName:"p",href:"/quickstart/create-a-local-test-network#retrieve-all-nodes"},"here")," to see how to retrieve the port numbers.")),(0,o.kt)("admonition",{type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"Keystore APIs are used in this tutorial, as warned in ",(0,o.kt)("a",{parentName:"p",href:"/apis/luxd/apis/keystore"},"Keystore API"),", because the node operator has access to your plaintext password, you should only create a keystore user on a node that you operate. If that node is breached, you could lose all your tokens. Keystore APIs are not recommended for use on Mainnet.")),(0,o.kt)("h2",{id:"create-a-user"},"Create a User"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This step can be skipped if you are only interesting in how to check the fund balance on X/P/C Chain.")),(0,o.kt)("p",null,"First run ",(0,o.kt)("a",{parentName:"p",href:"/apis/luxd/apis/keystore#keystorecreateuser"},(0,o.kt)("inlineCode",{parentName:"a"},"keystore.createUser"))," to create a user in the local keystore."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'curl --location --request POST \'127.0.0.1:9650/ext/keystore\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"keystore.createUser",\n    "params" :{\n        "username": "username",\n        "password": "password"\n    }\n}\'\n\n{\n    "jsonrpc": "2.0",\n    "result": {\n        "success": true\n    },\n    "id": 1\n}\n')),(0,o.kt)("p",null,"Next you can import the pre-funded private key, ",(0,o.kt)("inlineCode",{parentName:"p"},"PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN"),", aka ",(0,o.kt)("inlineCode",{parentName:"p"},"ewoq"),", into any of the 3 blockchains on the default Subnet. After importing the key you can check the balance to confirm that it worked."),(0,o.kt)("h2",{id:"x-chain"},"X-Chain"),(0,o.kt)("h3",{id:"import-key"},"Import Key"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This step can be skipped if you are only interesting in how to check the fund balance on X Chain. It shows how to get the correct address.")),(0,o.kt)("p",null,"Import ",(0,o.kt)("inlineCode",{parentName:"p"},"ewoq")," into the ",(0,o.kt)("a",{parentName:"p",href:"/apis/luxd/apis/x-chain#avmimportkey"},"X-Chain via avm.importKey API"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'curl --location --request POST \'127.0.0.1:9650/ext/bc/X\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"avm.importKey",\n    "params" :{\n        "username": "username",\n        "password": "password",\n        "privateKey":"PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN"\n    }\n}\'\n\n{\n    "jsonrpc": "2.0",\n    "result": {\n        "address": "X-custom18jma8ppw3nhx5r4ap8clazz0dps7rv5u9xde7p"\n    },\n    "id": 1\n}\n')),(0,o.kt)("h3",{id:"check-x-chain-balance"},"Check X-chain Balance"),(0,o.kt)("p",null,"Confirm the ",(0,o.kt)("inlineCode",{parentName:"p"},"X-custom18jma8ppw3nhx5r4ap8clazz0dps7rv5u9xde7p")," address now has a balance of 300m LUX on the X-Chain."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'curl --location --request POST \'127.0.0.1:9650/ext/bc/X\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n  "jsonrpc":"2.0",\n  "id"     : 1,\n  "method" :"avm.getBalance",\n  "params" :{\n      "address":"X-custom18jma8ppw3nhx5r4ap8clazz0dps7rv5u9xde7p",\n      "assetID": "LUX"\n  }\n} \'\n\n{\n    "jsonrpc": "2.0",\n    "result": {\n        "balance": "300000000000000000",\n        "utxoIDs": [\n            {\n                "txID": "BUuypiq2wyuLMvyhzFXcPyxPMCgSp7eeDohhQRqTChoBjKziC",\n                "outputIndex": 1\n            }\n        ]\n    },\n    "id": 1\n}\n')),(0,o.kt)("h2",{id:"c-chain"},"C-Chain"),(0,o.kt)("h3",{id:"import-key-1"},"Import Key"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This step can be skipped if you are only interesting in how to check the fund balance on C Chain. It just shows how to get the correct address.")),(0,o.kt)("p",null,"Import ",(0,o.kt)("inlineCode",{parentName:"p"},"ewoq")," into the ",(0,o.kt)("a",{parentName:"p",href:"/apis/luxd/apis/c-chain#luximportkey"},"C-Chain via lux.importKey API"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'curl --location --request POST \'127.0.0.1:9650/ext/bc/C/lux\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "method": "lux.importKey",\n    "params": {\n        "username":"username",\n        "password":"password",\n        "privateKey":"PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN"\n    },\n    "jsonrpc": "2.0",\n    "id": 1\n}\'\n\n{\n    "jsonrpc": "2.0",\n    "result": {\n        "address": "0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC"\n    },\n    "id": 1\n}\n')),(0,o.kt)("h3",{id:"check-the-c-chain-balance"},"Check the C-Chain Balance"),(0,o.kt)("p",null,"Confirm the ",(0,o.kt)("inlineCode",{parentName:"p"},"0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC")," address has a balance of 50m (0x295be96e64066972000000 in hex) LUX on the C-Chain."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'curl --location --request POST \'localhost:9650/ext/bc/C/rpc\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "jsonrpc": "2.0",\n    "method": "eth_getBalance",\n    "params": [\n        "0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC",\n        "latest"\n    ],\n    "id": 1\n}\'\n\n{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x295be96e64066972000000"\n}\n')),(0,o.kt)("h3",{id:"integrate-with-metamask"},"Integrate with MetaMask"),(0,o.kt)("p",null,"To see this account on Metamask, follow these steps:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Set up Metamask by using the info below:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Network Name"),": Lux Local C-Chain"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"New RPC URL"),": ",(0,o.kt)("a",{parentName:"li",href:"http://127.0.0.1:9650/ext/bc/C/rpc"},"http://127.0.0.1:9650/ext/bc/C/rpc")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ChainID"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"43112")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Symbol"),": ",(0,o.kt)("inlineCode",{parentName:"li"},"LUX")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Create a new account by importing this private key ",(0,o.kt)("inlineCode",{parentName:"p"},"0x56289e99c94b6912bfc12adc093c9b51124f0dc54ac7a766b2bc5ccf558d8027")," on Metamask"))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"&quot;Metamask import account&quot;",src:n(8336).Z,width:"786",height:"1236"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Now you can see the balance of this newly created account on ",(0,o.kt)("inlineCode",{parentName:"li"},"Lux Local"))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"&quot;Local pre-funded account&quot;",src:n(217).Z,width:"722",height:"972"})),(0,o.kt)("h2",{id:"p-chain"},"P-Chain"),(0,o.kt)("h3",{id:"import-key-2"},"Import Key"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This step can be skipped if you are only interesting in how to check the fund balance on P Chain. It just shows how to get the correct address.")),(0,o.kt)("p",null,"Import ",(0,o.kt)("inlineCode",{parentName:"p"},"ewoq")," into the ",(0,o.kt)("a",{parentName:"p",href:"/apis/luxd/apis/p-chain#platformimportkey"},"P-Chain via platform.importKey API"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'curl --location --request POST \'127.0.0.1:9650/ext/bc/P\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"platform.importKey",\n    "params" :{\n        "username":"username",\n        "password":"password",\n        "privateKey":"PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN"\n    }\n}\'\n\n{\n    "jsonrpc": "2.0",\n    "result": {\n        "address": "P-custom18jma8ppw3nhx5r4ap8clazz0dps7rv5u9xde7p"\n    },\n    "id": 1\n}\n')),(0,o.kt)("h3",{id:"check-p-chain-balance"},"Check P-Chain Balance"),(0,o.kt)("p",null,"Confirm the ",(0,o.kt)("inlineCode",{parentName:"p"},"P-custom18jma8ppw3nhx5r4ap8clazz0dps7rv5u9xde7p")," address has a balance of 30m LUX on the P-Chain. 20m should be unlocked and 10m locked and stakeable."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'curl --location --request POST \'127.0.0.1:9650/ext/bc/P\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"platform.getBalance",\n    "params" :{\n      "address":"P-custom18jma8ppw3nhx5r4ap8clazz0dps7rv5u9xde7p"\n    }\n}\'\n\n{\n    "jsonrpc": "2.0",\n    "result": {\n        "balance": "30000000000000000",\n        "unlocked": "30000000000000000",\n        "lockedStakeable": "0",\n        "lockedNotStakeable": "0",\n        "utxoIDs": [\n            {\n                "txID": "11111111111111111111111111111111LpoYY",\n                "outputIndex": 0\n            },\n            {\n                "txID": "11111111111111111111111111111111LpoYY",\n                "outputIndex": 1\n            }\n        ]\n    },\n    "id": 1\n}\n')))}h.isMDXComponent=!0},8336:function(e,t,n){t.Z=n.p+"assets/images/Metamask-Import-Account-17b4d3c6e167ebf8709ace5bc30001f6.png"},217:function(e,t,n){t.Z=n.p+"assets/images/local-pre-funded-account-7a8d44e1d07e4bb2ad6fa33989671cd0.png"}}]);