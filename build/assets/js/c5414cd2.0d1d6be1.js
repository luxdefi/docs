"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7939],{72489:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=t(85893),s=t(11151);const a={},o="IPFSUploader.js",i={id:"deprecated/tutorials-contest/2021/distributed-file-manager/frontend/IPFSUploader.js",title:"IPFSUploader.js",description:"",source:"@site/docs/deprecated/tutorials-contest/2021/distributed-file-manager/frontend/IPFSUploader.js.md",sourceDirName:"deprecated/tutorials-contest/2021/distributed-file-manager/frontend",slug:"/deprecated/tutorials-contest/2021/distributed-file-manager/frontend/IPFSUploader.js",permalink:"/deprecated/tutorials-contest/2021/distributed-file-manager/frontend/IPFSUploader.js",draft:!1,unlisted:!1,editUrl:"https://github.com/luxdefi/docs/edit/master/docs/deprecated/tutorials-contest/2021/distributed-file-manager/frontend/IPFSUploader.js.md",tags:[],version:"current",frontMatter:{}},d={},l=[];function c(e){const n={code:"code",h1:"h1",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"ipfsuploaderjs",children:"IPFSUploader.js"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'import React from "react";\nimport Compressor from "compressorjs";\nimport { Loader } from "rimble-ui";\n\nconst { create } = require("ipfs-http-client");\nconst ipfs = create({ host: "ipfs.infura.io", port: 5001, protocol: "https" });\n\nclass IPFSUploader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buffer: null,\n      fileName: null,\n      fileType: null,\n      cid: null,\n      account: this.props.state.account,\n      loading: false,\n      loadingReason: "",\n    };\n  }\n\n  captureFile = (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    let type = file.type.split("/");\n\n    if (type[0] === "image") {\n      new Compressor(file, {\n        quality: 0.2,\n        success: (compressedResult) => {\n          const reader = new window.FileReader();\n          reader.readAsArrayBuffer(compressedResult);\n          reader.onloadend = () => {\n            this.setState({\n              buffer: Buffer(reader.result),\n              fileName: file.name,\n              fileType: file.type,\n            });\n          };\n        },\n      });\n    } else {\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = () => {\n        this.setState({\n          buffer: Buffer(reader.result),\n          fileName: file.name,\n          fileType: file.type,\n        });\n      };\n    }\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n\n    this.setState({ loading: true, loadingReason: "Uploading to IPFS" });\n    const { cid } = await ipfs.add(this.state.buffer);\n    this.setState({ cid: cid.string, loadingReason: "Waiting for approval" });\n\n    try {\n      await this.props.state.contract.addFile(\n        [this.state.fileName, this.state.fileType],\n        this.state.cid,\n        { from: this.props.state.account, gas: 20000000 }\n      );\n    } catch (e) {\n      console.log("Transaction failed");\n    }\n\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <center style={{ margin: "50px auto" }}>\n          <form onSubmit={this.onSubmit}>\n            <input\n              className="text-light bg-dark"\n              type="file"\n              onChange={this.captureFile}\n            />\n            <br />\n            <br />\n\n            {this.state.loading ? (\n              <center>\n                <Loader size="40px" color="white" />\n                <br />\n                <font size="2" color="white" style={{ marginTop: "-10px" }}>\n                  {this.state.loadingReason}\n                </font>\n              </center>\n            ) : (\n              <input className="btn btn-dark" type="submit" />\n            )}\n          </form>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default IPFSUploader;\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>o});var r=t(67294);const s={},a=r.createContext(s);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);