"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[9775],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=o.createContext({}),s=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),h=i,m=p["".concat(u,".").concat(h)]||p[h]||c[h]||a;return n?o.createElement(m,r(r({ref:t},d),{},{components:n})):o.createElement(m,r({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var s=2;s<a;s++)r[s]=n[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},667:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var o=n(7462),i=n(3366),a=(n(7294),n(3905)),r=["components"],l={},u="Run a Mainnet Node on DeFi Kingdoms Subnet",s={unversionedId:"subnets/setup-dfk-node",id:"subnets/setup-dfk-node",title:"Run a Mainnet Node on DeFi Kingdoms Subnet",description:"Introduction",source:"@site/docs/subnets/setup-dfk-node.md",sourceDirName:"subnets",slug:"/subnets/setup-dfk-node",permalink:"/subnets/setup-dfk-node",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/subnets/setup-dfk-node.md",tags:[],version:"current",frontMatter:{},sidebar:"subnets",previous:{title:"Deploying Subnets on Production Infrastructure",permalink:"/subnets/deploying-subnets-on-prod"},next:{title:"Deploy a Smart Contract on Your Subnet EVM Using Remix and Metamask",permalink:"/subnets/deploy-a-smart-contract-on-your-evm"}},d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Build <code>LuxGo</code> Binary and Create the Plugin Build Directory",id:"build-luxgo-binary-and-create-the-plugin-build-directory",level:2},{value:"Build <code>subnet-evm</code> Binary",id:"build-subnet-evm-binary",level:2},{value:"Whitelisting DFK Subnet and Restarting the Node",id:"whitelisting-dfk-subnet-and-restarting-the-node",level:2},{value:"Updating Config File",id:"updating-config-file",level:3},{value:"Running the Node",id:"running-the-node",level:3},{value:"Just Want the Commands? We Got You...",id:"just-want-the-commands-we-got-you",level:2}],p={toc:c};function h(e){var t=e.components,n=(0,i.Z)(e,r);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"run-a-mainnet-node-on-defi-kingdoms-subnet"},"Run a Mainnet Node on DeFi Kingdoms Subnet"),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"This article describes how to run a Mainnet node on ",(0,a.kt)("a",{parentName:"p",href:"https://subnets.lux.network/defi-kingdoms/dfk-chain/explorer"},"DeFi Kingdoms (DFK) Subnet"),". It can be applied to any other Subnet, where the corresponding part of the Subnet info should be replaced."),(0,a.kt)("p",null,"Following necessary steps are needed to run your node on the DFK Subnet:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Build the LuxGo binary and create the plugin build directory"),(0,a.kt)("li",{parentName:"ol"},"Build the plugin binary for the DFK subnet-evm"),(0,a.kt)("li",{parentName:"ol"},"Whitelist the DFK Subnet"),(0,a.kt)("li",{parentName:"ol"},"Connect to the DFK Subnet!")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Just want the commands? Jump to the ",(0,a.kt)("a",{parentName:"em",href:"#just-want-the-commands-we-got-you"},"end"),"!")),(0,a.kt)("h2",{id:"build-luxgo-binary-and-create-the-plugin-build-directory"},"Build ",(0,a.kt)("inlineCode",{parentName:"h2"},"LuxGo")," Binary and Create the Plugin Build Directory"),(0,a.kt)("p",null,"First, you need to download and build LuxGo (handles the orchestration of running Custom VMs).\nYou can follow ",(0,a.kt)("a",{parentName:"p",href:"/nodes/build/run-lux-node-manually"},"this comprehensive guide")," to complete\nthis step. For this tutorial, we recommend compiling from source instead of using the ",(0,a.kt)("inlineCode",{parentName:"p"},"LuxGo Installer"),"."),(0,a.kt)("h2",{id:"build-subnet-evm-binary"},"Build ",(0,a.kt)("inlineCode",{parentName:"h2"},"subnet-evm")," Binary"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"For the steps below, we will assume that you completed first step successfully and are now in your LuxGo directory (within your ",(0,a.kt)("inlineCode",{parentName:"em"},"$GOPATH"),").")),(0,a.kt)("p",null,"Next, you will clone the DFK subnet-evm repository:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd $GOPATH/src/github.com\nmkdir DeFiKingdoms\ncd DeFiKingdoms\ngit clone https://github.com/DefiKingdoms/subnet-evm\ncd subnet-evm\n")),(0,a.kt)("p",null,"Now that you are in the ",(0,a.kt)("inlineCode",{parentName:"p"},"DeFiKingdoms/subnet-evm")," repository, you will build the binary and place it directly into the LuxGo ",(0,a.kt)("inlineCode",{parentName:"p"},"build/plugins")," directory. To do this, you will pass in the desired path to place the plugin binary. You will want to place this binary into the plugins directory of LuxGo, which was created when building LuxGo from source."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/build.sh $GOPATH/src/github.com/luxdefi/luxd/build/plugins/mDV3QWRXfwgKUWb9sggkv4vQxAQR4y2CyKrt5pLZ5SzQ7EHBv\n")),(0,a.kt)("p",null,"The long string ",(0,a.kt)("inlineCode",{parentName:"p"},"mDV3QWRXfwgKUWb9sggkv4vQxAQR4y2CyKrt5pLZ5SzQ7EHBv")," is the CB58 encoded VMID of the DFK subnet-evm. LuxGo will use the name of this file to determine what VMs are available to run from the ",(0,a.kt)("inlineCode",{parentName:"p"},"plugins")," directory."),(0,a.kt)("h2",{id:"whitelisting-dfk-subnet-and-restarting-the-node"},"Whitelisting DFK Subnet and Restarting the Node"),(0,a.kt)("p",null,"LuxGo will only validate the primary network by default. In order to add the DFK Subnet, you will need to add the DFK Subnet ID to the set of whitelisted Subnets in the node's config file or pass it through the command line options of the node. Once the node's config file has been updated, you will need to start the Lux node (restart if already running)."),(0,a.kt)("p",null,"Once you start the node, it will begin syncing the Primary Network. Once the node reaches the point in the Platform Chain where the DFK Subnet is created, it will begin syncing the DFK Subnet as well, and will start validating once it has fully bootstrapped."),(0,a.kt)("h3",{id:"updating-config-file"},"Updating Config File"),(0,a.kt)("p",null,"You can skip this section if you want to pass whitelisted Subnets through command-line flags."),(0,a.kt)("p",null,"You need to create a new config file or edit your existing one for your node. In this tutorial, you will create a config file at: ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.luxd/config.json"),". Note: you can create a config file anywhere on your file system, you will just need to specify its location via the flag ",(0,a.kt)("inlineCode",{parentName:"p"},"--config-file=<file path>")," when you start your node. See ",(0,a.kt)("a",{parentName:"p",href:"/nodes/maintain/luxd-config-flags#config-file"},"this")," for more info on configuration file and flags."),(0,a.kt)("p",null,"You will need to add the DFK Subnet ID to the whitelisted Subnets section of the config file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    <OTHER-CONFIGURATIONS>\n    "whitelisted-subnets": "Vn3aX6hNRstj5VHHm63TCgPNaeGnRSqCYXQqemSqDd2TQH4qJ"\n}\n')),(0,a.kt)("p",null,"Whitelisted Subnets is a comma separated list of Subnet IDs, so if you are validating more than one Subnet, you can simply add a comma to the end of the list and append the DFK Subnet ID ",(0,a.kt)("inlineCode",{parentName:"p"},"Vn3aX6hNRstj5VHHm63TCgPNaeGnRSqCYXQqemSqDd2TQH4qJ"),"."),(0,a.kt)("h3",{id:"running-the-node"},"Running the Node"),(0,a.kt)("p",null,"First, make sure to shut down your node in case it is still running. Then, you will navigate back into the LuxGo directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd $GOPATH/src/github.com/luxdefi/luxd\n")),(0,a.kt)("p",null,"If you went through the steps to set up a config file, then you can launch your node by specifying the config file on the command line:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./build/luxd --config-file ~/.luxd/config.json\n")),(0,a.kt)("p",null,"If you want to pass the whitelisted Subnets through the command line flag. You can append the other flags or even the ",(0,a.kt)("inlineCode",{parentName:"p"},"--config-file")," flag as well, according to your need."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./build/luxd --whitelisted-subnets Vn3aX6hNRstj5VHHm63TCgPNaeGnRSqCYXQqemSqDd2TQH4qJ\n")),(0,a.kt)("h2",{id:"just-want-the-commands-we-got-you"},"Just Want the Commands? We Got You..."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"go version"),". ",(0,a.kt)("strong",{parentName:"p"},"It should be 1.17.9 or above.")," Run ",(0,a.kt)("inlineCode",{parentName:"p"},"echo $GOPATH"),". ",(0,a.kt)("strong",{parentName:"p"},"It should not be empty."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd $GOPATH\nmkdir -p src/github.com/luxdefi\ncd src/github.com/luxdefi\ngit clone git@github.com:luxdefi/luxd.git\ncd luxd\n./scripts/build.sh\ncd $GOPATH/src/github.com\nmkdir DeFiKingdoms\ncd DeFiKingdoms\ngit clone https://github.com/DefiKingdoms/subnet-evm\ncd subnet-evm\n./scripts/build.sh $GOPATH/src/github.com/luxdefi/luxd/build/plugins/mDV3QWRXfwgKUWb9sggkv4vQxAQR4y2CyKrt5pLZ5SzQ7EHBv\n./build/luxd --whitelisted-subnets Vn3aX6hNRstj5VHHm63TCgPNaeGnRSqCYXQqemSqDd2TQH4qJ\n")))}h.isMDXComponent=!0}}]);