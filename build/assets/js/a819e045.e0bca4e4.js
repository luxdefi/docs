"use strict";(self.webpackChunklux_docs=self.webpackChunklux_docs||[]).push([[6595],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=i,f=p["".concat(l,".").concat(d)]||p[d]||h[d]||r;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1038:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return h}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],s={},l="C-Chain Exchange Integration",u={unversionedId:"quickstart/integrate-exchange-with-lux",id:"quickstart/integrate-exchange-with-lux",title:"C-Chain Exchange Integration",description:"Overview",source:"@site/docs/quickstart/integrate-exchange-with-lux.md",sourceDirName:"quickstart",slug:"/quickstart/integrate-exchange-with-lux",permalink:"/quickstart/integrate-exchange-with-lux",draft:!1,editUrl:"https://github.com/luxdefi/network-docs/edit/main/docs/quickstart/integrate-exchange-with-lux.md",tags:[],version:"current",frontMatter:{},sidebar:"quickStart",previous:{title:"Tools and Utilities",permalink:"/quickstart/tools-list"}},c={},h=[{value:"Overview",id:"overview",level:2},{value:"Integration using EVM Endpoints",id:"integration-using-evm-endpoints",level:2},{value:"Running an Lux node",id:"running-an-lux-node",level:3},{value:"Configuring an Lux node",id:"configuring-an-lux-node",level:3},{value:"Interacting with the C-Chain",id:"interacting-with-the-c-chain",level:3},{value:"Integration using Rosetta",id:"integration-using-rosetta",level:2},{value:"Constructing transactions",id:"constructing-transactions",level:2},{value:"Ingesting On-Chain Data",id:"ingesting-on-chain-data",level:2},{value:"Determining Finality",id:"determining-finality",level:3},{value:"(Optional) Custom Golang SDK",id:"optional-custom-golang-sdk",level:3},{value:"Support",id:"support",level:2}],p={toc:h};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"c-chain-exchange-integration"},"C-Chain Exchange Integration"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The objective of this document is to provide a brief overview of how to integrate with the EVM-Compatible Lux C-Chain. For teams that already support ETH, supporting the C-Chain is as straightforward as spinning up an Lux node (which has the ",(0,r.kt)("a",{parentName:"p",href:"https://eth.wiki/json-rpc/API"},"same API")," as ",(0,r.kt)("a",{parentName:"p",href:"https://geth.ethereum.org/docs/rpc/server"},"go-ethereum"),") and populating Lux\u2019s ChainID (43114) when constructing transactions."),(0,r.kt)("p",null,"Additionally, Lux Partners maintains an implementation of the ",(0,r.kt)("a",{parentName:"p",href:"https://www.rosetta-api.org/"},"Rosetta API")," for the C-Chain called ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/lux-rosetta"},"lux-rosetta"),". You can learn more about this standardized integration path on the attached Rosetta API website."),(0,r.kt)("h2",{id:"integration-using-evm-endpoints"},"Integration using EVM Endpoints"),(0,r.kt)("h3",{id:"running-an-lux-node"},"Running an Lux node"),(0,r.kt)("p",null,"If you want to build your node form source or include it in a docker image, reference the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/luxd"},"LuxGo GitHub repository"),". To quickly get up and running, you can use the ",(0,r.kt)("a",{parentName:"p",href:"/nodes/build/set-up-node-with-installer"},"node installation script")," that automates installing and updating luxd node as a systemd service on Linux, using prebuilt binaries."),(0,r.kt)("h3",{id:"configuring-an-lux-node"},"Configuring an Lux node"),(0,r.kt)("p",null,"All configuration options and their default values are described ",(0,r.kt)("a",{parentName:"p",href:"/nodes/maintain/luxd-config-flags"},"here"),"."),(0,r.kt)("p",null,"You can supply configuration options on the command line, or use a config file, which can be easier to work with when supplying many options. You can specify the config file location with ",(0,r.kt)("inlineCode",{parentName:"p"},"\u2014config-file=config.json"),", where ",(0,r.kt)("inlineCode",{parentName:"p"},"config.json")," is a JSON file whose keys and values are option names and values."),(0,r.kt)("p",null,"Individual chains, including the C-Chain, have their own configuration options which are separate from the node-level options. These can also be specified in a config file. For more details, see ",(0,r.kt)("a",{parentName:"p",href:"/nodes/maintain/chain-config-flags#c-chain-configs"},"here"),"."),(0,r.kt)("p",null,"The C-Chain config file should be at ",(0,r.kt)("inlineCode",{parentName:"p"},"$HOME/.luxd/configs/chains/C/config.json"),". You can also tell LuxGo to look somewhere else for the C-Chain config file with option ",(0,r.kt)("inlineCode",{parentName:"p"},"--chain-config-dir"),". An example C-Chain config file:"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If you need Ethereum ",(0,r.kt)("a",{parentName:"p",href:"https://ethereum.org/en/developers/docs/nodes-and-clients/#archive-node"},"Archive Node")," functionality, you need to disable C-Chain pruning, which has been enabled by default since LuxGo v1.4.10. To disable pruning, include ",(0,r.kt)("inlineCode",{parentName:"p"},'"pruning-enabled": false')," in the C-Chain config file as shown below.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "snowman-api-enabled": false,\n  "coreth-admin-api-enabled": false,\n  "local-txs-enabled": true,\n  "pruning-enabled": false,\n  "eth-apis": [\n    "internal-eth",\n    "internal-blockchain",\n    "internal-transaction",\n    "internal-tx-pool",\n    "internal-account",\n    "internal-personal",\n    "debug-tracer",\n    "web3",\n    "eth",\n    "eth-filter",\n    "admin",\n    "net"\n  ]\n}\n')),(0,r.kt)("h3",{id:"interacting-with-the-c-chain"},"Interacting with the C-Chain"),(0,r.kt)("p",null,"Interacting with the C-Chain is identical to interacting with ",(0,r.kt)("a",{parentName:"p",href:"https://geth.ethereum.org/"},"go-ethereum"),". You can find the reference material for C-Chain API ",(0,r.kt)("a",{parentName:"p",href:"/apis/luxd/apis/c-chain"},"here"),"."),(0,r.kt)("p",null,"Please note that ",(0,r.kt)("inlineCode",{parentName:"p"},"personal_")," namespace is turned off by default. To turn it on, you need to pass the appropriate command line switch to your node, like in the above config example."),(0,r.kt)("h2",{id:"integration-using-rosetta"},"Integration using Rosetta"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.rosetta-api.org/"},"Rosetta")," is an open-source specification and set of tools that makes integrating with different blockchain networks easier by presenting the same set of APIs for every network. The Rosetta API is made up of 2 core components, the ",(0,r.kt)("a",{parentName:"p",href:"https://www.rosetta-api.org/docs/data_api_introduction.html"},"Data API")," and the ",(0,r.kt)("a",{parentName:"p",href:"https://www.rosetta-api.org/docs/construction_api_introduction.html"},"Construction API"),". Together, these APIs allow for anyone to read and write to blockchains in a standard format over a standard communication protocol. The specifications for these APIs can be found in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/coinbase/rosetta-specifications"},"rosetta-specifications")," repository."),(0,r.kt)("p",null,"You can find the Rosetta server implementation for Lux C-Chain ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/lux-rosetta"},"here"),", all you need to do is install and run the server with proper configuration. It comes with a Dockerfile that packages both the server and the Lux client. Detailed instructions can be found in the linked repository."),(0,r.kt)("h2",{id:"constructing-transactions"},"Constructing transactions"),(0,r.kt)("p",null,"Lux C-Chain transactions are identical to standard EVM transactions with 2 exceptions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"They must be signed with Lux\u2019s ChainID (43114)."),(0,r.kt)("li",{parentName:"ul"},"The detailed dynamic gas fee can be found ",(0,r.kt)("a",{parentName:"li",href:"/quickstart/transaction-fees#c-chain-fees"},"here"),".")),(0,r.kt)("p",null,"For development purposes, Lux supports all the popular tooling for Ethereum, so developers familiar with Ethereum and Solidity can feel right at home. We have tutorials and repositories for several popular development environments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dapps/smart-contracts/deploy-a-smart-contract-on-lux-using-remix-and-metamask"},"MetaMask and Remix")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dapps/smart-contracts/using-truffle-with-the-lux-c-chain"},"Truffle")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dapps/smart-contracts/using-hardhat-with-the-lux-c-chain"},"Hardhat"))),(0,r.kt)("h2",{id:"ingesting-on-chain-data"},"Ingesting On-Chain Data"),(0,r.kt)("p",null,"You can use any standard way of ingesting on-chain data you use for Ethereum network."),(0,r.kt)("h3",{id:"determining-finality"},"Determining Finality"),(0,r.kt)("p",null,"Lux consensus provides fast and irreversible finality with 1-2 seconds. To query the most up-to-date finalized block, query any value (i.e. block, balance, state, etc) with the ",(0,r.kt)("inlineCode",{parentName:"p"},"latest")," parameter. If you query above the last finalized block (i.e. eth_blockNumber returns 10 and you query 11), an error will be thrown indicating that unfinalized data cannot be queried (as of ",(0,r.kt)("a",{parentName:"p",href:"mailto:luxd@v1.3.2"},"luxd@v1.3.2"),")."),(0,r.kt)("h3",{id:"optional-custom-golang-sdk"},"(Optional) Custom Golang SDK"),(0,r.kt)("p",null,"If you plan on extracting data from the C-Chain into your own systems using golang, we recommend using our custom ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/coreth/tree/master/ethclient"},"ethclient"),". The standard go-ethereum Ethereum client does not compute block hashes correctly (when you call ",(0,r.kt)("inlineCode",{parentName:"p"},"block.Hash()"),") because it doesn't take into account the added ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/luxdefi/coreth/blob/2c3cfac5f766ce5f32a2eddc43451bdb473b84f1/core/types/block.go#L98"},"ExtDataHash")," header field in Lux C-Chain blocks, which is used move LUX between chains (X-Chain and P-Chain). You can read more about our multi-chain abstraction ",(0,r.kt)("a",{parentName:"p",href:"/overview/getting-started/lux-platform"},"here")," (out of scope for a normal C-Chain integration)."),(0,r.kt)("p",null,"If you plan on reading JSON responses directly or use web3.js (doesn't recompute hash received over the wire) to extract on-chain transaction data/logs/receipts, you shouldn't have any issues!"),(0,r.kt)("h2",{id:"support"},"Support"),(0,r.kt)("p",null,"If you have any problems or questions, reach out either directly to our developers, or on our public ",(0,r.kt)("a",{parentName:"p",href:"https://chat.lux.network/"},"Discord")," server."))}d.isMDXComponent=!0}}]);