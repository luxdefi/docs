"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1806],{87340:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>u});var t=i(85893),o=i(11151);const s={tags:["Tooling"],description:"Lux Plugin Manager is a command-line tool to manage virtual machines binaries on existing Luxd instances. It enables to add/remove nodes to Subnets, upgrade the VM plugin binaries as new versions get released to the plugin repository.",pagination_label:"Lux Plugin Manager"},a="Lux Plugin Manager",r={id:"tooling/lux-plugin-manager",title:"Lux Plugin Manager",description:"Lux Plugin Manager is a command-line tool to manage virtual machines binaries on existing Luxd instances. It enables to add/remove nodes to Subnets, upgrade the VM plugin binaries as new versions get released to the plugin repository.",source:"@site/docs/tooling/lux-plugin-manager.md",sourceDirName:"tooling",slug:"/tooling/lux-plugin-manager",permalink:"/tooling/lux-plugin-manager",draft:!1,unlisted:!1,editUrl:"https://github.com/luxdefi/docs/edit/main/docs/tooling/lux-plugin-manager.md",tags:[{label:"Tooling",permalink:"/tags/tooling"}],version:"current",frontMatter:{tags:["Tooling"],description:"Lux Plugin Manager is a command-line tool to manage virtual machines binaries on existing Luxd instances. It enables to add/remove nodes to Subnets, upgrade the VM plugin binaries as new versions get released to the plugin repository.",pagination_label:"Lux Plugin Manager"}},l={},u=[{value:"<code>plugins-core</code>",id:"plugins-core",level:2}];function g(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"lux-plugin-manager",children:"Lux Plugin Manager"}),"\n",(0,t.jsxs)(n.p,{children:["Lux Plugin Manager (",(0,t.jsx)(n.strong,{children:"APM"}),") is a command-line tool to manage virtual\nmachines binaries on existing Luxd instances. It enables to add/remove\nnodes to Subnets, upgrade the VM plugin binaries as new versions get released to\nthe plugin repository."]}),"\n",(0,t.jsxs)(n.p,{children:["GitHub: ",(0,t.jsx)(n.a,{href:"https://github.com/luxdefi/apm",children:"https://github.com/luxdefi/apm"})]}),"\n",(0,t.jsx)(n.h2,{id:"plugins-core",children:(0,t.jsx)(n.code,{children:"plugins-core"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"plugins-core"})," is plugin repository that ships with the ",(0,t.jsx)(n.code,{children:"apm"}),". A\nplugin repository consists of a set of virtual machine and Subnet definitions\nthat the ",(0,t.jsx)(n.code,{children:"apm"})," consumes to allow users to quickly and easily download and manage\nVM binaries."]}),"\n",(0,t.jsxs)(n.p,{children:["GitHub: ",(0,t.jsx)(n.a,{href:"https://github.com/luxdefi/plugins-core",children:"https://github.com/luxdefi/plugins-core"})]})]})}function c(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>a});var t=i(67294);const o={},s=t.createContext(o);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);